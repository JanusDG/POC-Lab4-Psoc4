ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_Sensing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_SsTrimIdacsSourcing,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	CapSense_SsTrimIdacsSourcing, %function
  24              	CapSense_SsTrimIdacsSourcing:
  25              	.LFB18:
  26              		.file 1 "Generated_Source\\PSoC4\\CapSense_Sensing.c"
   1:Generated_Source\PSoC4/CapSense_Sensing.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CapSense_Sensing.c **** * \file CapSense_Sensing.c
   3:Generated_Source\PSoC4/CapSense_Sensing.c **** * \version 5.0
   4:Generated_Source\PSoC4/CapSense_Sensing.c **** *
   5:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
   6:Generated_Source\PSoC4/CapSense_Sensing.c **** *   This file contains the source of functions common for
   7:Generated_Source\PSoC4/CapSense_Sensing.c **** *   different sensing methods.
   8:Generated_Source\PSoC4/CapSense_Sensing.c **** *
   9:Generated_Source\PSoC4/CapSense_Sensing.c **** * \see CapSense v5.0 Datasheet
  10:Generated_Source\PSoC4/CapSense_Sensing.c **** *
  11:Generated_Source\PSoC4/CapSense_Sensing.c **** *//*****************************************************************************
  12:Generated_Source\PSoC4/CapSense_Sensing.c **** * Copyright (2016-2017), Cypress Semiconductor Corporation.
  13:Generated_Source\PSoC4/CapSense_Sensing.c **** ********************************************************************************
  14:Generated_Source\PSoC4/CapSense_Sensing.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  15:Generated_Source\PSoC4/CapSense_Sensing.c **** * protected by and subject to worldwide patent protection (United States and
  16:Generated_Source\PSoC4/CapSense_Sensing.c **** * foreign), United States copyright laws and international treaty provisions.
  17:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  18:Generated_Source\PSoC4/CapSense_Sensing.c **** * license to copy, use, modify, create derivative works of, and compile the
  19:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  20:Generated_Source\PSoC4/CapSense_Sensing.c **** * custom software in support of licensee product to be used only in conjunction
  21:Generated_Source\PSoC4/CapSense_Sensing.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  22:Generated_Source\PSoC4/CapSense_Sensing.c **** * Any reproduction, modification, translation, compilation, or representation of
  23:Generated_Source\PSoC4/CapSense_Sensing.c **** * this software except as specified above is prohibited without the express
  24:Generated_Source\PSoC4/CapSense_Sensing.c **** * written permission of Cypress.
  25:Generated_Source\PSoC4/CapSense_Sensing.c **** *
  26:Generated_Source\PSoC4/CapSense_Sensing.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  27:Generated_Source\PSoC4/CapSense_Sensing.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  28:Generated_Source\PSoC4/CapSense_Sensing.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  29:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress reserves the right to make changes without further notice to the
  30:Generated_Source\PSoC4/CapSense_Sensing.c **** * materials described herein. Cypress does not assume any liability arising out
  31:Generated_Source\PSoC4/CapSense_Sensing.c **** * of the application or use of any product or circuit described herein. Cypress
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 2


  32:Generated_Source\PSoC4/CapSense_Sensing.c **** * does not authorize its products for use as critical components in life-support
  33:Generated_Source\PSoC4/CapSense_Sensing.c **** * systems where a malfunction or failure may reasonably be expected to result in
  34:Generated_Source\PSoC4/CapSense_Sensing.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  35:Generated_Source\PSoC4/CapSense_Sensing.c **** * support systems application implies that the manufacturer assumes all risk of
  36:Generated_Source\PSoC4/CapSense_Sensing.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  37:Generated_Source\PSoC4/CapSense_Sensing.c **** * limited by and subject to the applicable Cypress software license agreement.
  38:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  40:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "cyfitter.h"
  41:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Configuration.h"
  42:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Structure.h"
  43:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Sensing.h"
  44:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
  45:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingCSX_LL.h"
  46:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
  47:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
  48:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingISX_LL.h"
  49:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
  50:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
  51:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingCSD_LL.h"
  52:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
  53:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)
  54:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SmartSense_LL.h"
  55:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif  /* (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE) */
  56:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ADC_EN)
  57:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_Adc.h"
  58:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
  59:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
  60:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SelfTest.h"
  61:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  62:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  63:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (0u != CapSense_ISX_EN)
  64:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_DigPrt2.h"
  65:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_USES_PORT_3)
  66:Generated_Source\PSoC4/CapSense_Sensing.c ****         #include "CapSense_DigPrt3.h"
  67:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
  68:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (0u != CapSense_ISX_EN) */
  69:Generated_Source\PSoC4/CapSense_Sensing.c **** /***************************************
  70:Generated_Source\PSoC4/CapSense_Sensing.c **** * API Constants
  71:Generated_Source\PSoC4/CapSense_Sensing.c **** ***************************************/
  72:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  73:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_IMO_FREQUENCY_OFFSET_MIN               (0u)
  74:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_IMO_FREQUENCY_OFFSET_MAX               (255u)
  75:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CALIBRATION_RESOLUTION                 (12u)
  76:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CALIBRATION_FREQ_KHZ                   (1500u)
  77:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CSD_AUTOTUNE_CAL_LEVEL                 (CapSense_CSD_RAWCOUNT_CAL_LEVEL)
  78:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CSD_AUTOTUNE_CAL_UNITS                 (1000u)
  79:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CP_MIN                                 (0u)
  80:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CP_MAX                                 (65000Lu)
  81:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CP_ERROR                               (4000Lu)
  82:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CLK_SOURCE_LFSR_SCALE_OFFSET           (4u)
  83:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  84:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
  85:Generated_Source\PSoC4/CapSense_Sensing.c ****     #define CapSense_CSD_SNS_FREQ_KHZ_MAX               (6000u)
  86:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
  87:Generated_Source\PSoC4/CapSense_Sensing.c ****     #define CapSense_CSD_SNS_FREQ_KHZ_MAX               (12600u)
  88:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 3


  89:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  90:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_FLIP_FLOP_DIV                          (1u)
  91:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  92:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_12000KHZ                   (12000uL)
  93:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_24000KHZ                   (24000uL)
  94:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_48000KHZ                   (48000uL)
  95:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  96:Generated_Source\PSoC4/CapSense_Sensing.c **** /*****************************************************************************/
  97:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Enumeration types definition                                              */
  98:Generated_Source\PSoC4/CapSense_Sensing.c **** /*****************************************************************************/
  99:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 100:Generated_Source\PSoC4/CapSense_Sensing.c **** typedef enum
 101:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 102:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RES_PULLUP_E   = 0x02u,
 103:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RES_PULLDOWN_E = 0x03u
 104:Generated_Source\PSoC4/CapSense_Sensing.c **** } CapSense_PORT_TEST_DM;
 105:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 106:Generated_Source\PSoC4/CapSense_Sensing.c **** typedef enum
 107:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 108:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_STS_RESET      = 0x01u,
 109:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_STS_NO_RESET   = 0x02u
 110:Generated_Source\PSoC4/CapSense_Sensing.c **** } CapSense_TEST_TYPE;
 111:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 112:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 113:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 114:Generated_Source\PSoC4/CapSense_Sensing.c **** * Static Function Prototypes
 115:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 116:Generated_Source\PSoC4/CapSense_Sensing.c **** /**
 117:Generated_Source\PSoC4/CapSense_Sensing.c **** * \cond SECTION_C_INTERNAL
 118:Generated_Source\PSoC4/CapSense_Sensing.c **** * \addtogroup group_c_internal
 119:Generated_Source\PSoC4/CapSense_Sensing.c **** * \{
 120:Generated_Source\PSoC4/CapSense_Sensing.c **** */
 121:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 122:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_DISABLE == CapSense_CSDV2)
 123:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsTrimIdacs(void);
 124:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 125:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_ENABLE == CapSense_ISX_EN) || \
 126:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG))
 127:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSinking(void);
 128:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
 129:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)) */
 130:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 131:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_ENABLE == CapSense_ISX_EN) || \
 132:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG))
 133:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSourcing(void);
 134:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
 135:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)) */
 136:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 137:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 138:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 139:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsCSDDisableMode(void);
 140:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 141:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
 142:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableCSXMode(void);
 143:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 144:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
 145:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableISXMode(void);
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 4


 146:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
 147:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 148:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(((CapSense_ENABLE == CapSense_CSX_EN) && \
 149:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
 150:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) && \
 151:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)) ||\
 152:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSD_EN) && \
 153:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
 154:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)))
 155:Generated_Source\PSoC4/CapSense_Sensing.c ****     static uint8 CapSense_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum);
 156:Generated_Source\PSoC4/CapSense_Sensing.c ****     static uint8 CapSense_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize);
 157:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 158:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 159:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 160:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptr
 161:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 162:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 163:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
 164:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptrWdg
 165:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 166:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 167:Generated_Source\PSoC4/CapSense_Sensing.c **** /** \}
 168:Generated_Source\PSoC4/CapSense_Sensing.c **** * \endcond */
 169:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 170:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 171:Generated_Source\PSoC4/CapSense_Sensing.c **** * Defines module variables
 172:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 173:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 174:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_SENSE_METHOD_ENUM CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
 175:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 176:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 177:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Module variable keep track of multi-frequency scan channel index */
 178:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 CapSense_scanFreqIndex = 0u;
 179:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Variable keep frequency offsets */
 180:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 CapSense_immunity[CapSense_NUM_SCAN_FREQS] = {0u, 0u, 0u};
 181:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
 182:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* const allows C-compiler to do optimization */
 183:Generated_Source\PSoC4/CapSense_Sensing.c ****     const uint8 CapSense_scanFreqIndex = 0u;
 184:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 185:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 186:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Global software variables */
 187:Generated_Source\PSoC4/CapSense_Sensing.c **** volatile uint8 CapSense_widgetIndex = 0u;    /* Index of the scanning widget */
 188:Generated_Source\PSoC4/CapSense_Sensing.c **** volatile uint8 CapSense_sensorIndex = 0u;    /* Index of the scanning sensor */
 189:Generated_Source\PSoC4/CapSense_Sensing.c **** uint8 CapSense_requestScanAllWidget = 0u;
 190:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 191:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Pointer to RAM_SNS_STRUCT structure */
 192:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_RAM_SNS_STRUCT *CapSense_curRamSnsPtr;
 193:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 194:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) || \
 195:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSX_EN) || \
 196:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_ISX_EN))
 197:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Pointer to Flash structure holding configuration of widget to be scanned */
 198:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_WD_STRUCT const *CapSense_curFlashWdgtPtr = 0u;
 199:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 200:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 201:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
 202:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Pointer to Flash structure holding info of sensor to be scanned */
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 5


 203:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_SNS_STRUCT const *CapSense_curFlashSnsPtr = 0u;
 204:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 205:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 206:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Pointer to Flash structure to hold Sns electrode that was connected previously */
 207:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_FLASH_IO_STRUCT const *CapSense_curSnsIOPtr;
 208:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 209:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 210:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 211:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_IsBusy
 212:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 213:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 214:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 215:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the current status of the Component (Scan is completed or Scan is in
 216:Generated_Source\PSoC4/CapSense_Sensing.c **** *  progress).
 217:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 218:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 219:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function returns a status of the hardware block whether a scan is
 220:Generated_Source\PSoC4/CapSense_Sensing.c **** *  currently in progress or not. If the Component is busy, no new scan or setup
 221:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widgets is made. The critical section (i.e. disable global interrupt)
 222:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is recommended for the application when the device transitions from
 223:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the active mode to sleep or deep sleep modes.
 224:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 225:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 226:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the current status of the Component:
 227:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CapSense_NOT_BUSY - No scan is in progress and a next scan
 228:Generated_Source\PSoC4/CapSense_Sensing.c **** *      can be initiated.
 229:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CapSense_SW_STS_BUSY - The previous scanning is not completed
 230:Generated_Source\PSoC4/CapSense_Sensing.c **** *      and the hardware block is busy.
 231:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 232:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 233:Generated_Source\PSoC4/CapSense_Sensing.c **** uint32 CapSense_IsBusy(void)
 234:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 235:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (CapSense_dsRam.status & CapSense_SW_STS_BUSY);
 236:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 237:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 238:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 239:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SetupWidget
 240:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 241:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 242:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 243:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs the initialization required to scan the specified widget.
 244:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 245:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 246:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function prepares the Component to scan all the sensors in the specified
 247:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget by executing the following tasks:
 248:Generated_Source\PSoC4/CapSense_Sensing.c **** *    1. Re-initialize the hardware if it is not configured to perform the
 249:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensing method used by the specified widget, this happens only if multiple
 250:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensing methods are used in the Component.
 251:Generated_Source\PSoC4/CapSense_Sensing.c **** *    2. Initialize the hardware with specific sensing configuration (e.g.
 252:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensor clock, scan resolution) used by the widget.
 253:Generated_Source\PSoC4/CapSense_Sensing.c **** *    3. Disconnect all previously connected electrodes, if the electrodes
 254:Generated_Source\PSoC4/CapSense_Sensing.c **** *       connected by the
 255:Generated_Source\PSoC4/CapSense_Sensing.c **** *       \if SECTION_C_HIGH_LEVEL
 256:Generated_Source\PSoC4/CapSense_Sensing.c **** *       CapSense_CSDSetupWidgetExt(), CapSense_CSXSetupWidgetExt(),
 257:Generated_Source\PSoC4/CapSense_Sensing.c **** *       CapSense_CSDConnectSns() functions and not disconnected.
 258:Generated_Source\PSoC4/CapSense_Sensing.c **** *       \endif
 259:Generated_Source\PSoC4/CapSense_Sensing.c **** *       \if SECTION_I_REP
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 6


 260:Generated_Source\PSoC4/CapSense_Sensing.c **** *       CapSense_ISXSetupWidgetExt() function and not disconnected.
 261:Generated_Source\PSoC4/CapSense_Sensing.c **** *       \endif
 262:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 263:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function does not start sensor scanning, the CapSense_Scan()
 264:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function must be called to start the scan sensors in the widget. If this
 265:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function is called more than once, it does not break the Component operation,
 266:Generated_Source\PSoC4/CapSense_Sensing.c **** *  but only the last initialized widget is in effect.
 267:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 268:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param widgetId
 269:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID number of the widget to be initialized for scanning.
 270:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the widget ID can be found in the
 271:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as
 272:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_<WidgetName>_WDGT_ID.
 273:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 274:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 275:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the widget setting up operation:
 276:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_SUCCESS - The operation is successfully completed.
 277:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_BAD_PARAM - The widget is invalid or if the specified widget is
 278:Generated_Source\PSoC4/CapSense_Sensing.c **** *      disabled
 279:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_INVALID_STATE - The previous scanning is not completed and the
 280:Generated_Source\PSoC4/CapSense_Sensing.c **** *      hardware block is busy.
 281:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_UNKNOWN - An unknown sensing method is used by the widget or any
 282:Generated_Source\PSoC4/CapSense_Sensing.c **** *      other spurious error occurred.
 283:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 284:Generated_Source\PSoC4/CapSense_Sensing.c **** **********************************************************************************/
 285:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SetupWidget(uint32 widgetId)
 286:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 287:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
 288:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 289:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
 290:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 291:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 292:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_INVALID_STATE;
 293:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 294:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 295:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  Check if widget id is valid, specified widget is enabled and widget did not
 296:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  detect any fault conditions if BIST is enabled. If all conditions are met,
 297:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  set widgetStatus as good, if not, set widgetStatus as bad.
 298:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 299:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if ((CapSense_TOTAL_WIDGETS > widgetId) &&
 300:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)))
 301:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 302:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 303:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_SUCCESS;
 304:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 305:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 306:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 307:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_BAD_PARAM;
 308:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 309:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 310:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 311:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Check widgetStatus flag that is set earlier, if flag is good, then set up only
 312:Generated_Source\PSoC4/CapSense_Sensing.c ****      * widget
 313:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 314:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CYRET_SUCCESS == widgetStatus)
 315:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 316:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 7


 317:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 318:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
 319:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 320:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSX scan */
 321:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXSetupWidget(widgetId);
 322:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 323:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 324:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 325:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 326:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSD scan */
 327:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDSetupWidget(widgetId);
 328:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 329:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 330:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 331:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 332:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for ISX scan */
 333:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXSetupWidget(widgetId);
 334:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 335:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 336:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 337:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Sensing method is invalid, return error to caller */
 338:Generated_Source\PSoC4/CapSense_Sensing.c ****             widgetStatus = CYRET_UNKNOWN;
 339:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 340:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 341:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 342:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (widgetStatus);
 343:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 344:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 345:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 346:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 347:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_Scan
 348:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 349:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 350:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 351:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Initiates scanning of all the sensors in the widget initialized by
 352:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SetupWidget(), if no scan is in progress.
 353:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 354:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 355:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function is called only after the CapSense_SetupWidget()
 356:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function is called to start the scanning of the sensors in the widget. The
 357:Generated_Source\PSoC4/CapSense_Sensing.c **** *  status of a sensor scan must be checked using the CapSense_IsBusy()
 358:Generated_Source\PSoC4/CapSense_Sensing.c **** *  API prior to starting a next scan or setting up another widget.
 359:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 360:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 361:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the scan initiation operation:
 362:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 363:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the
 364:Generated_Source\PSoC4/CapSense_Sensing.c **** *    hardware block is busy.
 365:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - An unknown sensing method is used by the widget.
 366:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 367:Generated_Source\PSoC4/CapSense_Sensing.c **** ********************************************************************************/
 368:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_Scan(void)
 369:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 370:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 371:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 372:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
 373:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 8


 374:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 375:Generated_Source\PSoC4/CapSense_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 376:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 377:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 378:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 379:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_currentSenseMethod)
 380:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 381:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
 382:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 383:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXScan();
 384:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 385:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 386:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 387:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 388:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDScan();
 389:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 390:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 391:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 392:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 393:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXScan();
 394:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 395:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 396:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 397:Generated_Source\PSoC4/CapSense_Sensing.c ****             scanStatus = CYRET_UNKNOWN;
 398:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 399:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 400:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 401:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (scanStatus);
 402:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 403:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 404:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 405:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 406:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_ScanAllWidgets
 407:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 408:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 409:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 410:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Initializes the first enabled widget and scanning of all the sensors in the
 411:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget, then the same process is repeated for all the widgets in the Component,
 412:Generated_Source\PSoC4/CapSense_Sensing.c **** *  i.e. scanning of all the widgets in the Component.
 413:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 414:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 415:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function initializes a widget and scans all the sensors in the widget,
 416:Generated_Source\PSoC4/CapSense_Sensing.c **** *  and then repeats the same for all the widgets in the Component. The tasks of
 417:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_SetupWidget() and CapSense_Scan() functions are
 418:Generated_Source\PSoC4/CapSense_Sensing.c **** *  executed by these functions. The status of a sensor scan must be checked
 419:Generated_Source\PSoC4/CapSense_Sensing.c **** *  using the CapSense_IsBusy() API prior to starting a next scan
 420:Generated_Source\PSoC4/CapSense_Sensing.c **** *  or setting up another widget.
 421:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 422:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 423:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the operation:
 424:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 425:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_BAD_PARAM - All the widgets are disabled.
 426:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the HW block is busy.
 427:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - There are unknown errors.
 428:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 429:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 430:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_ScanAllWidgets(void)
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 9


 431:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 432:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 433:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 434:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
 435:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 436:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_SW_STS_BUSY))
 437:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 438:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 439:Generated_Source\PSoC4/CapSense_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 440:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 441:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 442:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 443:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
 444:Generated_Source\PSoC4/CapSense_Sensing.c ****          *  Set up widget first widget.
 445:Generated_Source\PSoC4/CapSense_Sensing.c ****          *  If widget returned error, set up next, continue same until widget does not return error
 446:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
 447:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u;
 448:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex < CapSense_TOTAL_WIDGETS;
 449:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex++)
 450:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 451:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 452:Generated_Source\PSoC4/CapSense_Sensing.c ****             scanStatus = CapSense_SetupWidget(wdgtIndex);
 453:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 454:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS == scanStatus)
 455:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 456:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (0u != (CapSense_TOTAL_WIDGETS - 1u))
 457:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* If there are more than one widget to be scanned, request callback to scan ne
 458:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if ((CapSense_TOTAL_WIDGETS - 1u) > wdgtIndex)
 459:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 460:Generated_Source\PSoC4/CapSense_Sensing.c ****                          /* Request callback to scan next widget in ISR */
 461:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_ENABLE;
 462:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 463:Generated_Source\PSoC4/CapSense_Sensing.c ****                     else
 464:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 465:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Request to exit in ISR (Do not scan the next widgets) */
 466:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_DISABLE;
 467:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 468:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else
 469:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 470:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Request to exit in ISR (We have only one widget) */
 471:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_DISABLE;
 472:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 473:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (0u != (CapSense_TOTAL_WIDGETS - 1u)) */
 474:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 475:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initiate scan and quit loop */
 476:Generated_Source\PSoC4/CapSense_Sensing.c ****                 scanStatus = CapSense_Scan();
 477:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 478:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 479:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 480:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 481:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 482:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 483:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (scanStatus);
 484:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 485:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 486:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 487:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 10


 488:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsInitialize
 489:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 490:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 491:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 492:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 493:Generated_Source\PSoC4/CapSense_Sensing.c **** *  of the CapSense Component. This function is called from
 494:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_Start() API prior to calling any other APIs of the Component.
 495:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 496:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 497:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 498:Generated_Source\PSoC4/CapSense_Sensing.c **** *  of the CapSense Component. This function is called from
 499:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_Start() API prior to calling any other APIs of the Component.
 500:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Depending on the configuration, the function initializes the CSD block
 501:Generated_Source\PSoC4/CapSense_Sensing.c **** *     for the corresponding sensing mode.
 502:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. The function updates the dsRam.wdgtWorking variable with 1 when Self-test
 503:Generated_Source\PSoC4/CapSense_Sensing.c **** *     is enabled.
 504:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 505:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling the CapSense_Start API is the recommended method to initialize
 506:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense Component at power-up. The CapSense_SsInitialize()
 507:Generated_Source\PSoC4/CapSense_Sensing.c **** *  API should not be used for initialization, resume, or wake-up operations.
 508:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The dsRam.wdgtWorking variable is updated.
 509:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 510:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return status
 511:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns status of operation:
 512:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Zero        - Indicates successful initialization.
 513:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Non-zero    - One or more errors occurred in the initialization process.
 514:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 515:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 516:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SsInitialize(void)
 517:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 518:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus initStatus;
 519:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 520:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) &&\
 521:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_MFS_IMO == CapSense_MFS_METHOD))
 522:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 centerFreqTrim;
 523:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 524:Generated_Source\PSoC4/CapSense_Sensing.c ****         centerFreqTrim = (uint8)CY_GET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR);
 525:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_immunity[CapSense_FREQ_CHANNEL_0] = centerFreqTrim;
 526:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 527:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (centerFreqTrim < CapSense_IMO_FREQUENCY_OFFSET_F1)
 528:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 529:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim + CapSense_IMO_FREQUENCY_OF
 530:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim + (CapSense_IMO_FREQUENCY_O
 531:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                            CapSense
 532:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 533:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (centerFreqTrim > (CapSense_IMO_FREQUENCY_OFFSET_MAX - CapSense_IMO_FREQUENCY_OFFSE
 534:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 535:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_IMO_FREQUENCY_OF
 536:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim - (CapSense_IMO_FREQUENCY_O
 537:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                            CapSense
 538:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 539:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 540:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 541:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_IMO_FREQUENCY_OF
 542:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim + CapSense_IMO_FREQUENCY_OF
 543:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 544:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 11


 545:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) &&\
 546:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_MFS_IMO == CapSense_MFS_METHOD)) */
 547:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 548:Generated_Source\PSoC4/CapSense_Sensing.c ****     initStatus = CYRET_SUCCESS;
 549:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 550:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_DISABLE == CapSense_CSDV2)
 551:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsTrimIdacs();
 552:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 553:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 554:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if((CapSense_ENABLE == CapSense_CSD_EN) ||\
 555:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2)))
 556:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsInitializeSourceSenseClk();
 557:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) ||\
 558:Generated_Source\PSoC4/CapSense_Sensing.c ****               ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))) */
 559:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 560:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Set all IO states to the default state */
 561:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetIOsInDefaultState();
 562:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 563:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_DISABLE != CapSense_USES_MANY_SENSE_MODES)
 564:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Initialize CSD block for ADC scanning */
 565:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_UNDEFINED_E);
 566:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSD_EN)
 567:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Initialize CSD block for CSD scanning */
 568:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsCSDInitialize();
 569:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_CSD_E);
 570:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSX_EN)
 571:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Initialize CSD block for CSX scanning */
 572:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_CSXInitialize();
 573:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_CSX_E);
 574:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_ISX_EN)
 575:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Initialize CSD block for ISX scanning */
 576:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_ISXInitialize();
 577:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_ISX_E);
 578:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
 579:Generated_Source\PSoC4/CapSense_Sensing.c ****         #error "No sensing method enabled, Component cannot work in this mode"
 580:Generated_Source\PSoC4/CapSense_Sensing.c ****         initStatus = CYRET_UNKNOWN;
 581:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
 582:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 583:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (initStatus);
 584:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 585:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 586:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 587:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 588:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SetPinState
 589:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 590:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 591:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 592:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the state (drive mode and output state) of the port pin used by a sensor.
 593:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The possible states are GND, Shield, High-Z, Tx or Rx, Sensor. If the sensor
 594:Generated_Source\PSoC4/CapSense_Sensing.c **** *  specified in the input parameter is a ganged sensor, then the state of all pins
 595:Generated_Source\PSoC4/CapSense_Sensing.c **** *  associated with the ganged sensor is updated.
 596:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 597:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 598:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function sets a specified state for a specified sensor element. For the
 599:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CSD widgets, sensor element is a sensor ID, for the CSX widgets, it is either
 600:Generated_Source\PSoC4/CapSense_Sensing.c **** *  an Rx or Tx electrode ID. If the specified sensor is a ganged sensor, then
 601:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the specified state is set for all the electrodes belong to the sensor.
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 12


 602:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function must not be called while the Component is in the busy state.
 603:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 604:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function accepts the CapSense_SHIELD and
 605:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SENSOR states as an input only if there is at least
 606:Generated_Source\PSoC4/CapSense_Sensing.c **** *  one CSD widget. Similarly, this function accepts the CapSense_TX_PIN
 607:Generated_Source\PSoC4/CapSense_Sensing.c **** *  and CapSense_RX_PIN states as an input only if there is at least
 608:Generated_Source\PSoC4/CapSense_Sensing.c **** *  one CSX widget in the project.
 609:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 610:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling this function directly from the application layer is not
 611:Generated_Source\PSoC4/CapSense_Sensing.c **** *  recommended. This function is used to implement only the custom-specific
 612:Generated_Source\PSoC4/CapSense_Sensing.c **** *  use cases. Functions that perform a setup and scan of a sensor/widget
 613:Generated_Source\PSoC4/CapSense_Sensing.c **** *  automatically set the required pin states. They ignore changes
 614:Generated_Source\PSoC4/CapSense_Sensing.c **** *  in the design made by the CapSense_SetPinState() function.
 615:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function neither check wdgtIndex nor sensorElement for the correctness.
 616:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 617:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param widgetId
 618:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID of the widget to change the pin state of the specified
 619:Generated_Source\PSoC4/CapSense_Sensing.c **** *  sensor.
 620:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the widget ID can be found in the CapSense Configuration
 621:Generated_Source\PSoC4/CapSense_Sensing.c **** *  header file defined as CapSense_<WidgetName>_WDGT_ID.
 622:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 623:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param sensorElement
 624:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID of the sensor element within the widget to change
 625:Generated_Source\PSoC4/CapSense_Sensing.c **** *  its pin state.
 626:Generated_Source\PSoC4/CapSense_Sensing.c **** *  \if SECTION_C_LOW_LEVEL
 627:Generated_Source\PSoC4/CapSense_Sensing.c **** *  For the CSD widgets, sensorElement is the sensor ID and can be found in the
 628:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as
 629:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_SNS<SensorNumber>_ID.
 630:Generated_Source\PSoC4/CapSense_Sensing.c **** *  For the CSX widgets, sensorElement is defined either as Rx ID or Tx ID.
 631:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The first Rx in a widget corresponds to sensorElement = 0, the second
 632:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Rx in a widget corresponds to sensorElement = 1, and so on.
 633:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The last Tx in a widget corresponds to sensorElement = (RxNum + TxNum).
 634:Generated_Source\PSoC4/CapSense_Sensing.c **** *  \endif
 635:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Macros for Rx and Tx IDs can be found in the
 636:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as:
 637:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_RX<RXNumber>_ID
 638:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_TX<TXNumber>_ID.
 639:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 640:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param state
 641:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the state of the sensor to be set:
 642:Generated_Source\PSoC4/CapSense_Sensing.c **** *     1. CapSense_GROUND - The pin is connected to the ground.
 643:Generated_Source\PSoC4/CapSense_Sensing.c **** *     2. CapSense_HIGHZ - The drive mode of the pin is set to High-Z
 644:Generated_Source\PSoC4/CapSense_Sensing.c **** *        Analog.
 645:Generated_Source\PSoC4/CapSense_Sensing.c **** *     3. CapSense_SHIELD - The shield signal is routed to the pin
 646:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSD sensing method with shield electrode is enabled).
 647:Generated_Source\PSoC4/CapSense_Sensing.c **** *     4. CapSense_SENSOR - The pin is connected to the scanning bus
 648:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSD sensing method is enabled).
 649:Generated_Source\PSoC4/CapSense_Sensing.c **** *     5. CapSense_TX_PIN - The Tx signal is routed to the sensor
 650:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSX sensing method is enabled).
 651:Generated_Source\PSoC4/CapSense_Sensing.c **** *     6. CapSense_RX_PIN - The pin is connected to the scanning bus
 652:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSX sensing method is enabled).
 653:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 654:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 655:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SetPinState(uint32 widgetId, uint32 sensorElement, uint32 state)
 656:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 657:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdNum;
 658:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdIndex;
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 13


 659:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8  interruptState;
 660:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_IO_STRUCT const *ioPtr;
 661:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_GANGED_SNS_EN)
 662:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_FLASH_SNS_STRUCT const *curFlashSnsPtr;
 663:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
 664:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 665:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Getting sensor element pointer and number of electrodes */
 666:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_GANGED_SNS_EN)
 667:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Check the ganged sns flag */
 668:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_GANGED_SNS_MASK == (CapSense_dsFlash.wdgtArray[widgetId].staticConfig & CapSen
 669:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 670:Generated_Source\PSoC4/CapSense_Sensing.c ****             curFlashSnsPtr = CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsFlash;
 671:Generated_Source\PSoC4/CapSense_Sensing.c ****             curFlashSnsPtr += sensorElement;
 672:Generated_Source\PSoC4/CapSense_Sensing.c ****             ioPtr = &CapSense_ioList[curFlashSnsPtr->firstPinId];
 673:Generated_Source\PSoC4/CapSense_Sensing.c ****             eltdNum = curFlashSnsPtr->numPins;
 674:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 675:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 676:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 677:Generated_Source\PSoC4/CapSense_Sensing.c ****             ioPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsF
 678:Generated_Source\PSoC4/CapSense_Sensing.c ****             eltdNum = 1u;
 679:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 680:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
 681:Generated_Source\PSoC4/CapSense_Sensing.c ****         ioPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsFlash
 682:Generated_Source\PSoC4/CapSense_Sensing.c ****         eltdNum = 1u;
 683:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
 684:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 685:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Loop through all electrodes of the specified sensor element */
 686:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (eltdIndex = 0u; eltdIndex < eltdNum; eltdIndex++)
 687:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 688:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Reset HSIOM and PC registers */
 689:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 690:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_HSIOM_SEL_MASK << 
 691:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << ioPtr->s
 692:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 693:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 694:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (state)
 695:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 696:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_GROUND:
 697:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 698:Generated_Source\PSoC4/CapSense_Sensing.c ****             interruptState = CyEnterCriticalSection();
 699:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_SNS_GROUND_CONNECT <<
 700:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
 701:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 702:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 703:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 704:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_HIGHZ:
 705:Generated_Source\PSoC4/CapSense_Sensing.c ****             interruptState = CyEnterCriticalSection();
 706:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 707:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 708:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 709:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 710:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 711:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSOR:
 712:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Enable sensor */
 713:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDConnectSns(ioPtr);
 714:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 715:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 14


 716:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 717:Generated_Source\PSoC4/CapSense_Sensing.c ****                 case CapSense_SHIELD:
 718:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Set appropriate bit in HSIOM register to configure pin to shield mode */
 719:Generated_Source\PSoC4/CapSense_Sensing.c ****                     interruptState = CyEnterCriticalSection();
 720:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_S
 721:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CyExitCriticalSection(interruptState);
 722:Generated_Source\PSoC4/CapSense_Sensing.c ****                     break;
 723:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 724:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 725:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 726:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 727:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_ISX_EN))
 728:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_TX_PIN:
 729:Generated_Source\PSoC4/CapSense_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 730:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_SEL_C
 731:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_GPIO_STRGDRV << i
 732:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CyExitCriticalSection(interruptState);
 733:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 734:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 735:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_RX_PIN:
 736:Generated_Source\PSoC4/CapSense_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 737:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_SEL_A
 738:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << 
 739:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CyExitCriticalSection(interruptState);
 740:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 741:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 742:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 743:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 744:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Wrong state */
 745:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 746:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 747:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 748:Generated_Source\PSoC4/CapSense_Sensing.c ****         ioPtr++;
 749:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 750:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 751:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 752:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 753:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
 754:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsCSDDisableMode
 755:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
 756:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 757:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
 758:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables CSD mode.
 759:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 760:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
 761:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable CSD mode the following tasks are performed:
 762:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect Cmod from AMUXBUS-A.
 763:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 764:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  3. Disconnect Csh from AMUXBUS-B.
 765:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  4. Disable Shield Electrodes.
 766:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 767:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
 768:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsCSDDisableMode(void)
 769:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 770:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
 771:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 772:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Cmod from AMUXBUS-A using HSIOM registers */
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 15


 773:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_CMOD_HSIOM_PTR);
 774:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CMOD_HSIOM_MASK);
 775:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CMOD_HSIOM_PTR, newRegValue);
 776:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 777:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSDV2) && \
 778:Generated_Source\PSoC4/CapSense_Sensing.c ****              ((CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) && \
 779:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_CSD_DEDICATED_IDAC_COMP_EN)))
 780:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Disconnect IDACA and IDACB */
 781:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue = CY_GET_REG32(CapSense_SW_REFGEN_SEL_PTR);
 782:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue &= (uint32)(~CapSense_SW_REFGEN_SEL_SW_IAIB_MASK);
 783:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_SW_REFGEN_SEL_PTR, newRegValue);
 784:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSDV2) && \
 785:Generated_Source\PSoC4/CapSense_Sensing.c ****                    ((CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) && \
 786:Generated_Source\PSoC4/CapSense_Sensing.c ****                    (CapSense_ENABLE == CapSense_CSD_DEDICATED_IDAC_COMP_EN))) */
 787:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 788:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous CSD electrode if it has been connected */
 789:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsCSDElectrodeCheck();
 790:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 791:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Csh from AMUXBUS-B */
 792:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 793:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
 794:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue = CY_GET_REG32(CapSense_CSH_HSIOM_PTR);
 795:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue &= (uint32)(~(uint32)(CapSense_CSH_TO_AMUXBUS_B_MASK << CapSense_CSH_HSIOM_
 796:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_CSH_HSIOM_PTR, newRegValue);
 797:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 798:Generated_Source\PSoC4/CapSense_Sensing.c ****                    (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN)) */
 799:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 800:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 801:Generated_Source\PSoC4/CapSense_Sensing.c ****              (0u != CapSense_CSD_TOTAL_SHIELD_COUNT))
 802:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsCSDDisableShieldElectrodes();
 803:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 804:Generated_Source\PSoC4/CapSense_Sensing.c ****                    (0u != CapSense_CSD_TOTAL_SHIELD_COUNT)) */
 805:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 806:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 807:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 808:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 809:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
 810:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
 811:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsDisableCSXMode
 812:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
 813:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 814:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
 815:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables CSX mode.
 816:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 817:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
 818:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable CSX mode the following tasks are performed:
 819:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A.
 820:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 821:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 822:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
 823:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableCSXMode(void)
 824:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 825:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
 826:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 827:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers */
 828:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_CintA_HSIOM_PTR);
 829:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CintA_HSIOM_MASK);
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 16


 830:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CintA_HSIOM_PTR, newRegValue);
 831:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 832:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers */
 833:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_CintB_HSIOM_PTR);
 834:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CintB_HSIOM_MASK);
 835:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CintB_HSIOM_PTR, newRegValue);
 836:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 837:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous CSX electrode if it has been connected */
 838:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_CSXElectrodeCheck();
 839:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 840:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 841:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 842:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
 843:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
 844:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsDisableISXMode
 845:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
 846:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 847:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
 848:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables ISX mode.
 849:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 850:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
 851:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable ISX mode the following tasks are performed:
 852:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A
 853:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous ISX electrode if it has been connected
 854:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 855:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
 856:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableISXMode(void)
 857:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 858:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
 859:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 860:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers.   */
 861:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_CintA_HSIOM_PTR);
 862:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CintA_HSIOM_MASK);
 863:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CintA_HSIOM_PTR, newRegValue);
 864:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 865:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers.   */
 866:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_CintB_HSIOM_PTR);
 867:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CintB_HSIOM_MASK);
 868:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CintB_HSIOM_PTR, newRegValue);
 869:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 870:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous ISX electrode if it has been connected */
 871:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_ISXElectrodeCheck();
 872:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_DigPrt2_Stop();
 873:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_USES_PORT_3)
 874:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_DigPrt3_Stop();
 875:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* CapSense_USES_PORT_3 */
 876:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 877:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
 878:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 879:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 880:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSwitchSensingMode
 881:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 882:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 883:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 884:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function changes the mode for case when both CSD and CSX widgets are
 885:Generated_Source\PSoC4/CapSense_Sensing.c **** *  scanned.
 886:Generated_Source\PSoC4/CapSense_Sensing.c **** *
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 17


 887:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 888:Generated_Source\PSoC4/CapSense_Sensing.c **** *  To switch to the CSD mode the following tasks are performed:
 889:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Disconnect CintA and CintB from AMUXBUS-A.
 890:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. Disconnect previous CSD electrode if it has been connected.
 891:Generated_Source\PSoC4/CapSense_Sensing.c **** *  3. Initialize CSD mode.
 892:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 893:Generated_Source\PSoC4/CapSense_Sensing.c **** *  To switch to the CSX mode the following tasks are performed:
 894:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Disconnect Cmod from AMUXBUS-A.
 895:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. Disconnect previous CSX electrode if it has been connected.
 896:Generated_Source\PSoC4/CapSense_Sensing.c **** *  3. Initialize CSX mode.
 897:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 898:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param mode
 899:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the scan mode:
 900:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_CSD_E
 901:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_CSX_E
 902:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_ISX_E
 903:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_BIST_E
 904:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_UNDEFINED_E
 905:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 906:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 907:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_ENUM mode)
 908:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 909:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_currentSenseMethod != mode)
 910:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 911:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* The requested mode differes to the current one. Disable the current mode */
 912:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_SENSE_METHOD_CSD_E == CapSense_currentSenseMethod)
 913:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 914:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_EN)
 915:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsCSDDisableMode();
 916:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 917:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 918:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_CSX_E == CapSense_currentSenseMethod)
 919:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 920:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSX_EN)
 921:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsDisableCSXMode();
 922:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 923:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 924:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_ISX_E == CapSense_currentSenseMethod)
 925:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 926:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ISX_EN)
 927:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsDisableISXMode();
 928:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
 929:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 930:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_BIST_E == CapSense_currentSenseMethod)
 931:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 932:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
 933:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_BistDisableMode();
 934:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
 935:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 936:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 937:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 938:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ADC_EN)
 939:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Release ADC resources */
 940:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)CapSense_AdcReleaseResources();
 941:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
 942:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 943:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 18


 944:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Enable the specified mode */
 945:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_SENSE_METHOD_CSD_E == mode)
 946:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 947:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_EN)
 948:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize CSD mode to guarantee configured CSD mode */
 949:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsCSDInitialize();
 950:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSD_E;
 951:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 952:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 953:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_CSX_E == mode)
 954:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 955:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSX_EN)
 956:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize CSX mode to guarantee configured CSX mode */
 957:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXInitialize();
 958:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSX_E;
 959:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 960:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 961:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_ISX_E == mode)
 962:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 963:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ISX_EN)
 964:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize ISX mode to guarantee configured ISX mode */
 965:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXInitialize();
 966:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_ISX_E;
 967:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
 968:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 969:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_BIST_E == mode)
 970:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 971:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
 972:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_BistInitialize();
 973:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_BIST_E;
 974:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
 975:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 976:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 977:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 978:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
 979:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 980:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 981:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 982:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 983:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 984:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 985:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetIOsInDefaultState
 986:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 987:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 988:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 989:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all electrodes into a default state.
 990:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 991:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 992:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all the CSD/CSX IOs into a default state:
 993:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
 994:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - DM      - Strong drive.
 995:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - State   - Zero.
 996:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 997:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all the ADC channels into a default state:
 998:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
 999:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - DM      - HiZ-Analog.
1000:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - State   - Zero.
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 19


1001:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1002:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly from the application
1003:Generated_Source\PSoC4/CapSense_Sensing.c **** *  layer.
1004:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1005:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1006:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetIOsInDefaultState(void)
1007:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1008:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_IO_STRUCT const *ioPtr = &CapSense_ioList[0u];
1009:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 loopIndex;
1010:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 regValue;
1011:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1012:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Loop through all electrodes */
1013:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (loopIndex = 0u; loopIndex < CapSense_TOTAL_ELECTRODES; loopIndex++)
1014:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1015:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1016:Generated_Source\PSoC4/CapSense_Sensing.c ****         * 1. Disconnect HSIOM.
1017:Generated_Source\PSoC4/CapSense_Sensing.c ****         * 2. Set strong DM.
1018:Generated_Source\PSoC4/CapSense_Sensing.c ****         * 3. Set pin state to logic 0.
1019:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1020:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue = CY_GET_REG32 (ioPtr->hsiomPtr);
1021:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue &= ~(ioPtr->hsiomMask);
1022:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (ioPtr->hsiomPtr, regValue);
1023:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1024:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue = CY_GET_REG32 (ioPtr->pcPtr);
1025:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue &= ~(CapSense_GPIO_PC_MASK << ioPtr->shift);
1026:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue |=  (CapSense_GPIO_STRGDRV << ioPtr->shift);
1027:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (ioPtr->pcPtr, regValue);
1028:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1029:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue = CY_GET_REG32 (ioPtr->drPtr);
1030:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue &= ~(ioPtr->mask);
1031:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (ioPtr->drPtr, regValue);
1032:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1033:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Get next electrode */
1034:Generated_Source\PSoC4/CapSense_Sensing.c ****         ioPtr++;
1035:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1036:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1037:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if(CapSense_ENABLE == CapSense_ADC_EN)
1038:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_ClearAdcChannels();
1039:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
1040:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1041:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1042:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ADC_EN)
1043:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1044:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsReleaseResources()
1045:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1046:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1047:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1048:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function sets the resources that do not belong to the sensing HW block to
1049:Generated_Source\PSoC4/CapSense_Sensing.c **** *  default state.
1050:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1051:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1052:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The function performs following tasks:
1053:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Checks if CSD block busy and returns error if it is busy
1054:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. Disconnects integration capacitors (CintA, CintB for CSX mode and
1055:Generated_Source\PSoC4/CapSense_Sensing.c **** *     Cmod for CSD mode)
1056:Generated_Source\PSoC4/CapSense_Sensing.c **** *  3. Disconnect electroded if they have been connected.
1057:Generated_Source\PSoC4/CapSense_Sensing.c **** *
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 20


1058:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
1059:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the operation:
1060:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Zero        - Resources released successfully.
1061:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Non-zero    - One or more errors occurred in releasing process.
1062:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1063:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1064:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SsReleaseResources(void)
1065:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1066:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus busyStatus = CYRET_SUCCESS;
1067:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1068:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_SW_STS_BUSY))
1069:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1070:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
1071:Generated_Source\PSoC4/CapSense_Sensing.c ****         busyStatus = CYRET_INVALID_STATE;
1072:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1073:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
1074:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1075:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
1076:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsDisableCSXMode();
1077:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1078:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1079:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
1080:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsDisableISXMode();
1081:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
1082:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1083:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
1084:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsCSDDisableMode();
1085:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
1086:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1087:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
1088:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_BistDisableMode();
1089:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1090:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1091:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSD_EN) && \
1092:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) &&  \
1093:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_SNS_CONNECTION_SHIELD == CapSense_CSD_INACTIVE_SNS_CONNECTION))
1094:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsSetIOsInDefaultState();
1095:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) && \
1096:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_DISABLE != CapSense_CSD_SHIELD_EN) &&  \
1097:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_SNS_CONNECTION_SHIELD == CapSense_CSD_INACTIVE_SNS_CONNECTION)) */
1098:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1099:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1100:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Reset of the currentSenseMethod variable to make sure that the next
1101:Generated_Source\PSoC4/CapSense_Sensing.c ****          * call of SetupWidget() API setups the correct widget mode
1102:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1103:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
1104:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1105:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1106:Generated_Source\PSoC4/CapSense_Sensing.c ****     return busyStatus;
1107:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1108:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
1109:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1110:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1111:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1112:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsPostAllWidgetsScan
1113:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1114:Generated_Source\PSoC4/CapSense_Sensing.c **** *
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 21


1115:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1116:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The ISR function for multiple widget scanning implementation.
1117:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1118:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1119:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is the function used by the CapSense ISR to implement multiple widget
1120:Generated_Source\PSoC4/CapSense_Sensing.c **** *  scanning.
1121:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Should not be used by the application layer.
1122:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1123:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1124:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsPostAllWidgetsScan(void)
1125:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1126:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1127:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Increment widget index
1128:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Check if all the widgets are scanned
1129:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  3. If all the widgets are not scanned, set up and scan next widget
1130:Generated_Source\PSoC4/CapSense_Sensing.c ****     */
1131:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (1u != CapSense_TOTAL_WIDGETS)
1132:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus postScanStatus;
1133:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1134:Generated_Source\PSoC4/CapSense_Sensing.c ****         do
1135:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1136:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_widgetIndex++;
1137:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1138:Generated_Source\PSoC4/CapSense_Sensing.c ****             postScanStatus = CapSense_SetupWidget((uint32)CapSense_widgetIndex);
1139:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1140:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS == postScanStatus)
1141:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1142:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if((CapSense_TOTAL_WIDGETS - 1u) == CapSense_widgetIndex)
1143:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1144:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* The last widget will be scanned. Reset flag to skip configuring the next wid
1145:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_requestScanAllWidget = CapSense_DISABLE;
1146:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1147:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)CapSense_Scan();
1148:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1149:Generated_Source\PSoC4/CapSense_Sensing.c ****             else if((CapSense_TOTAL_WIDGETS - 1u) == CapSense_widgetIndex)
1150:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1151:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if ((CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) && \
1152:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (CapSense_ENABLE == CapSense_CSD_EN))
1153:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSD_E ==
1154:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[CapSense_widgetIndex]
1155:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1156:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Disable the CSD block */
1157:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd);
1158:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1159:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* ((CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) && \
1160:Generated_Source\PSoC4/CapSense_Sensing.c ****                            (CapSense_ENABLE == CapSense_CSD_EN)) */
1161:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1162:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update scan Counter */
1163:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.scanCounter++;
1164:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* All widgets are totally processed. Reset BUSY flag */
1165:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_SW_STS_BUSY;
1166:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1167:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update status with with the failure */
1168:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_STATUS_ERR_MASK;
1169:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
1170:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1171:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set postScanStatus to exit the while loop */
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 22


1172:Generated_Source\PSoC4/CapSense_Sensing.c ****                 postScanStatus = CYRET_SUCCESS;
1173:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1174:Generated_Source\PSoC4/CapSense_Sensing.c ****             else
1175:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1176:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update status with with the failure. Configure the next widget in while() loop *
1177:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_STATUS_ERR_MASK;
1178:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
1179:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1180:Generated_Source\PSoC4/CapSense_Sensing.c ****         } while (CYRET_SUCCESS != postScanStatus);
1181:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (1u != CapSense_TOTAL_WIDGETS) */
1182:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1183:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1184:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1185:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1186:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsIsrInitialize
1187:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1188:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1189:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1190:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Enables and initializes for the function pointer for a callback for the ISR.
1191:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1192:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1193:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The "address" is a special type cyisraddress defined by Cylib. This function
1194:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is used by Component APIs and should not be used by an application program for
1195:Generated_Source\PSoC4/CapSense_Sensing.c **** *  proper working of the Component.
1196:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1197:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param address
1198:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The address of the function to be called when interrupt is fired.
1199:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1200:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1201:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsIsrInitialize(cyisraddress address)
1202:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1203:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_ISR_StartEx(address);
1204:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1205:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1206:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1207:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1208:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetModClkClockDivider
1209:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1210:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1211:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1212:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for the modulator clock and then starts
1213:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the modulator clock.
1214:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1215:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1216:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1217:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1218:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
1219:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1220:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param modClk
1221:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The divider value for the modulator clock.
1222:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1223:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1224:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetModClkClockDivider(uint32 modClk)
1225:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1226:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1227:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Stop modulator clock */
1228:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 23


1229:Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_ModClk__DIV_ID <<
1230:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CapSense_MODCLK_CMD_DIV_SHIFT)|
1231:Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_MODCLK_CMD_DISABLE_MASK));
1232:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1233:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1234:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Set divider value for sense modClk.
1235:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from modClk because Divider register value 0 corresponds
1236:Generated_Source\PSoC4/CapSense_Sensing.c ****      * to dividing by 1.
1237:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1238:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_DIV_PTR, ((modClk - 1u) << 8u));
1239:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1240:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Check whether previous modulator clock start command has finished. */
1241:Generated_Source\PSoC4/CapSense_Sensing.c ****     while(0u != (CY_GET_REG32(CapSense_MODCLK_CMD_PTR) & CapSense_MODCLK_CMD_ENABLE_MASK))
1242:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1243:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Wait until previous modulator clock start command has finished */
1244:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1245:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1246:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Start modulator clock, aligned to HFCLK */
1247:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1248:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(((uint32)CapSense_ModClk__DIV_ID << CapSense_MODCLK_CMD_DIV_SHIFT) |
1249:Generated_Source\PSoC4/CapSense_Sensing.c ****                   ((uint32)CapSense_ModClk__PA_DIV_ID << CapSense_MODCLK_CMD_PA_DIV_SHIFT) |
1250:Generated_Source\PSoC4/CapSense_Sensing.c ****                   CapSense_MODCLK_CMD_ENABLE_MASK));
1251:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
1252:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newRegValue;
1253:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1254:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Clear bit to disable ModClk clock. */
1255:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1256:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CY_GET_REG32(CapSense_MODCLK_CMD_PTR) &
1257:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(~CapSense_ModClk__ENABLE_MASK));
1258:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1259:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1260:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Update ModClk clock divider.
1261:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from modClk because Divider register value has range (0-65535).
1262:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1263:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_MODCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_ModClk__DIVIDE
1264:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue |= (modClk - 1u);
1265:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_DIV_PTR, newRegValue);
1266:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1267:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Set bit to enable ModClk clock. */
1268:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1269:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CY_GET_REG32(CapSense_MODCLK_CMD_PTR) |
1270:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ModClk__ENABLE_MASK);
1271:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) */
1272:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1273:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1274:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1275:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1276:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetSnsClockDivider
1277:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1278:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1279:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1280:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for the sense clock and then starts
1281:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the sense clock.
1282:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1283:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1284:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1285:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 24


1286:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
1287:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1288:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
1289:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClk The divider value for the sense clock.
1290:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1291:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1292:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetSnsClockDivider(uint32 snsClk)
1293:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1294:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
1295:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newRegValue;
1296:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1297:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1298:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Set divider value for sense clock.
1299:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from snsClk because SENSE_DIV value 0 corresponds
1300:Generated_Source\PSoC4/CapSense_Sensing.c ****      * to dividing by 1.
1301:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1302:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_SENSE_PERIOD_PTR);
1303:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue &= (uint32)(~CapSense_SENSE_PERIOD_SENSE_DIV_MASK);
1304:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue |= snsClk - 1u;
1305:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_SENSE_PERIOD_PTR, newRegValue);
1306:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
1307:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1308:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Stop sense clock clock   */
1309:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1310:Generated_Source\PSoC4/CapSense_Sensing.c ****                      ((uint32)CapSense_SnsClk__DIV_ID <<
1311:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CapSense_SNSCLK_CMD_DIV_SHIFT)|
1312:Generated_Source\PSoC4/CapSense_Sensing.c ****                      ((uint32)CapSense_SNSCLK_CMD_DISABLE_MASK));
1313:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1314:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1315:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Set divider value for sense clock.
1316:Generated_Source\PSoC4/CapSense_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value 0 corresponds
1317:Generated_Source\PSoC4/CapSense_Sensing.c ****          * to dividing by 1.
1318:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1319:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_DIV_PTR, ((snsClk - 1u) << 8u));
1320:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1321:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Check whether previous sense clock start command has finished. */
1322:Generated_Source\PSoC4/CapSense_Sensing.c ****         while(0u != (CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) & CapSense_SNSCLK_CMD_ENABLE_MASK))
1323:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1324:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Wait until previous sense clock start command has finished. */
1325:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1326:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1327:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Start sense clock aligned to previously started modulator clock. */
1328:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1329:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (uint32)(((uint32)CapSense_SnsClk__DIV_ID << CapSense_SNSCLK_CMD_DIV_SHIFT) |
1330:Generated_Source\PSoC4/CapSense_Sensing.c ****                       ((uint32)CapSense_ModClk__PA_DIV_ID << CapSense_SNSCLK_CMD_PA_DIV_SHIFT) |
1331:Generated_Source\PSoC4/CapSense_Sensing.c ****                       CapSense_SNSCLK_CMD_ENABLE_MASK));
1332:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
1333:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
1334:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1335:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Clear bit to disable SnsClk clock. */
1336:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1337:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) &
1338:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (uint32)(~(uint32)CapSense_SnsClk__ENABLE_MASK));
1339:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1340:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1341:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Update snsClk clock divider.
1342:Generated_Source\PSoC4/CapSense_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value has range (0-65535).
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 25


1343:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1344:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_SNSCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_SnsClk__DI
1345:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= (snsClk - 1u);
1346:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_DIV_PTR, newRegValue);
1347:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1348:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set bit to enable SnsClk clock. */
1349:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1350:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) |
1351:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_SnsClk__ENABLE_MASK);
1352:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) */
1353:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1354:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1355:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1356:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1357:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1358:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetClockDividers
1359:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1360:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1361:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1362:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for sense and modulator clocks and then starts
1363:Generated_Source\PSoC4/CapSense_Sensing.c **** *  a modulator clock-phase aligned to HFCLK and sense clock-phase aligned to
1364:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the modulator clock.
1365:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1366:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1367:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1368:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1369:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
1370:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1371:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
1372:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClk The divider value for the sense clock.
1373:Generated_Source\PSoC4/CapSense_Sensing.c **** *  modClk The divider value for the modulator clock.
1374:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1375:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1376:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetClockDividers(uint32 snsClk, uint32 modClk)
1377:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1378:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Mod clock */
1379:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetModClkClockDivider(modClk);
1380:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1381:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Sns clock */
1382:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetSnsClockDivider(snsClk);
1383:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1384:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1385:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1386:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ANYMODE_AUTOCAL)
1387:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1388:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_CalibrateWidget
1389:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1390:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1391:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1392:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the sensors in the specified widget to the default
1393:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target, this function detects the sensing method used by the
1394:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  widget prior to calibration.
1395:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1396:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1397:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function performs exactly the same tasks as
1398:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense_CalibrateAllWidgets, but only for a specified widget.
1399:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function detects the sensing method used by the widgets and uses
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 26


1400:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the Enable compensation IDAC parameter. 
1401:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1402:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1403:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1404:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1405:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_C_LOW_LEVEL
1406:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1407:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  auto-calibration parameter is enabled.
1408:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1409:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1410:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the ISX Enable auto-calibration parameter
1411:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  is enabled.
1412:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1413:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1414:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param widgetId
1415:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID number of the widget to calibrate its raw count.
1416:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  A macro for the widget ID can be found in the
1417:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense Configuration header file defined as
1418:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense_<WidgetName>_WDGT_ID.
1419:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1420:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
1421:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the specified widget calibration:
1422:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1423:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_PARAM - The input parameter is invalid.
1424:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1425:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    operate as expected.
1426:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1427:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1428:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_CalibrateWidget(uint32 widgetId)
1429:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1430:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1431:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1432:Generated_Source\PSoC4/CapSense_Sensing.c ****         do
1433:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1434:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_TOTAL_WIDGETS <= widgetId)
1435:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1436:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CYRET_BAD_PARAM;
1437:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1438:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1439:Generated_Source\PSoC4/CapSense_Sensing.c ****             /*
1440:Generated_Source\PSoC4/CapSense_Sensing.c ****              *  Check if widget id is valid, specified widget did not
1441:Generated_Source\PSoC4/CapSense_Sensing.c ****              *  detect any faults conditions if BIST is enabled.
1442:Generated_Source\PSoC4/CapSense_Sensing.c ****              */
1443:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
1444:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (0u != CapSense_GET_WIDGET_EN_STATUS(widgetId))
1445:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1446:Generated_Source\PSoC4/CapSense_Sensing.c ****                     calibrateStatus = CYRET_SUCCESS;
1447:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1448:Generated_Source\PSoC4/CapSense_Sensing.c ****                 else
1449:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1450:Generated_Source\PSoC4/CapSense_Sensing.c ****                     calibrateStatus = CYRET_INVALID_STATE;
1451:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1452:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif  /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1453:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1454:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS != calibrateStatus)
1455:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1456:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Exit from the loop because of a fail */
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 27


1457:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
1458:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1459:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1460:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If both CSD and CSX are enabled, calibrate widget using sensing method */
1461:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_CSX_EN)
1462:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Check widget sensing method and call appropriate APIs */
1463:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSX_IDAC_AUTOCAL_EN)
1464:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSX_E ==
1465:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
1466:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1467:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calibrate CSX widget */
1468:Generated_Source\PSoC4/CapSense_Sensing.c ****                        CapSense_CSXCalibrateWidget(widgetId, CapSense_CSX_RAWCOUNT_CAL_LEVEL);
1469:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1470:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (CapSense_ENABLE == CapSense_CSX_IDAC_AUTOCAL_EN) */
1471:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1472:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN)
1473:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSD_E ==
1474:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
1475:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1476:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calibrate CSD widget */
1477:Generated_Source\PSoC4/CapSense_Sensing.c ****                         calibrateStatus = CapSense_CSDCalibrateWidget(widgetId, CapSense_CSD_RAWCOU
1478:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1479:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN) */
1480:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1481:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only CSD is enabled, calibrate CSD sensor */
1482:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_CSD_EN)
1483:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CapSense_CSDCalibrateWidget(widgetId, CapSense_CSD_RAWCOUNT_CAL_L
1484:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1485:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only CSX is enabled, call CSX scan */
1486:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_CSX_EN)
1487:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXCalibrateWidget(widgetId, CapSense_CSX_RAWCOUNT_CAL_LEVEL);
1488:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1489:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only ISX is enabled, call ISX scan */
1490:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_ISX_EN)
1491:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXCalibrateWidget(widgetId, CapSense_ISX_RAWCOUNT_CAL_LEVEL);
1492:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1493:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
1494:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CYRET_UNKNOWN;
1495:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
1496:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1497:Generated_Source\PSoC4/CapSense_Sensing.c ****              /* Update CRC */
1498:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE ==CapSense_TST_WDGT_CRC_EN)
1499:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_DsUpdateWidgetCrc(widgetId);
1500:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE ==CapSense_TST_WDGT_CRC_EN) */
1501:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1502:Generated_Source\PSoC4/CapSense_Sensing.c ****         } while (0u);
1503:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1504:Generated_Source\PSoC4/CapSense_Sensing.c ****         return calibrateStatus;
1505:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1506:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1507:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1508:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1509:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_CalibrateAllWidgets
1510:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1511:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1512:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1513:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 28


1514:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target, this function detects the sensing method used by the widgets
1515:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  prior to calibration.
1516:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1517:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1518:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1519:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target value. This function detects the sensing method used by the widgets
1520:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and regards the Enable compensation IDAC parameter.
1521:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1522:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1523:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1524:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1525:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \cond SECTION_C_LOW_LEVEL
1526:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1527:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  auto-calibration parameter is enabled.
1528:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endcond
1529:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1530:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the ISX Enable Auto-calibration parameter
1531:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  is enabled.
1532:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1533:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1534:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
1535:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the calibration process:
1536:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1537:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1538:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    operate as expected.
1539:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1540:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1541:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_CalibrateAllWidgets(void)
1542:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1543:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1544:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
1545:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1546:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
1547:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1548:Generated_Source\PSoC4/CapSense_Sensing.c ****             calibrateStatus |= CapSense_CalibrateWidget(wdgtIndex);
1549:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1550:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1551:Generated_Source\PSoC4/CapSense_Sensing.c ****         return calibrateStatus;
1552:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1553:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ANYMODE_AUTOCAL) */
1554:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1555:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1556:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)
1557:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1558:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsAutoTune
1559:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1560:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1561:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1562:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the parameters auto-tuning for the optimal CapSense operation.
1563:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1564:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1565:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the following:
1566:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calibrates Modulator and Compensation IDACs.
1567:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Tunes the Sense Clock optimal value to get a Sense Clock period greater than
1568:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    2*5*R*Cp.
1569:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calculates the resolution for the optimal finger capacitance.
1570:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 29


1571:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
1572:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the operation:
1573:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Zero     - All the widgets are auto-tuned successfully.
1574:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Non-zero - Auto-tuning failed for any widget.
1575:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1576:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1577:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_SsAutoTune(void)
1578:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1579:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
1580:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
1581:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1582:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 cp = 0uL;
1583:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1584:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cpRow = 0uL;
1585:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1586:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1587:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 cpWidget[CapSense_TOTAL_WIDGETS];
1588:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
1589:Generated_Source\PSoC4/CapSense_Sensing.c ****         AUTO_TUNE_CONFIG_TYPE autoTuneConfig;
1590:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1591:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Configure common config variables */
1592:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.snsClkConstantR = CapSense_CSD_SNSCLK_R_CONST;
1593:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.vRef = CapSense_CSD_VREF_MV;
1594:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacGain = CapSense_CSD_IDAC_GAIN_VALUE_NA;
1595:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1596:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calculate snsClk Input Clock in KHz */
1597:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSDV2)
1598:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are chained (Fourth-generation HW block). Flip flop is not available */
1599:Generated_Source\PSoC4/CapSense_Sensing.c ****             autoTuneConfig.snsClkInputClock = (CYDEV_BCLK__HFCLK__KHZ / CapSense_dsRam.modCsdClk);
1600:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif ((CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) && (CapSense_DISABLE == CY_PSOC4_400
1601:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are not chained */
1602:Generated_Source\PSoC4/CapSense_Sensing.c ****             autoTuneConfig.snsClkInputClock = CYDEV_BCLK__HFCLK__KHZ >> CapSense_FLIP_FLOP_DIV;
1603:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1604:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are not chained (PSoC 4000) */
1605:Generated_Source\PSoC4/CapSense_Sensing.c ****             autoTuneConfig.snsClkInputClock = CYDEV_BCLK__HFCLK__KHZ >> CapSense_FLIP_FLOP_DIV;
1606:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
1607:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are chained (PSoC 4100, PSoC 4200) */
1608:Generated_Source\PSoC4/CapSense_Sensing.c ****             autoTuneConfig.snsClkInputClock = (CYDEV_BCLK__HFCLK__KHZ / CapSense_dsRam.modCsdClk) >
1609:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1610:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1611:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* If both CSD and CSX are enabled, calibrate widget using sensing method */
1612:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_CSX_EN)
1613:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Initialize CSD mode */
1614:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsCSDInitialize();
1615:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_CSX_EN) */
1616:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1617:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1618:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #1:
1619:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - performing the first calibration at fixed settings
1620:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting sensor Cp
1621:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting sense clock frequency based on Cp
1622:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1623:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1624:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Tune sense clock for all the widgets */
1625:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
1626:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1627:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_SENSE_METHOD_CSD_E ==
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 30


1628:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
1629:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1630:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
1631:Generated_Source\PSoC4/CapSense_Sensing.c ****                           CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
1632:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1633:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set calibration resolution to 12 bits */
1634:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->resolution = CapSense_CALIBRATION_RESOLUTION;
1635:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1636:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set clock source direct and sense clock frequency to 1.5 MHz */
1637:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->snsClkSource = (uint8)CapSense_CLK_SOURCE_DIRECT;
1638:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->snsClk = (uint16)((uint32)autoTuneConfig.snsClkInputClock / CapSense_CALIB
1639:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1640:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArra
1641:Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdg
1642:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1643:Generated_Source\PSoC4/CapSense_Sensing.c ****                         ptrWdgt->rowSnsClkSource = (uint8)CapSense_CLK_SOURCE_DIRECT;
1644:Generated_Source\PSoC4/CapSense_Sensing.c ****                         ptrWdgt->rowSnsClk = (uint16)((uint32)autoTuneConfig.snsClkInputClock / Cap
1645:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1646:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
1647:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1648:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Calibrate CSD widget to the default calibration target */
1649:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)CapSense_CSDCalibrateWidget(wdgtIndex, CapSense_CSD_AUTOTUNE_CAL_LEVEL);
1650:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1651:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1652:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArra
1653:Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdg
1654:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1655:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get pointer to Sense Clock Divider for columns */
1656:Generated_Source\PSoC4/CapSense_Sensing.c ****                         autoTuneConfig.ptrSenseClk = &ptrWdgt->rowSnsClk;
1657:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1658:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get IDAC */
1659:Generated_Source\PSoC4/CapSense_Sensing.c ****                         autoTuneConfig.iDac = CapSense_calibratedIdacRow;
1660:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1661:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calculate achived calibration level */
1662:Generated_Source\PSoC4/CapSense_Sensing.c ****                         autoTuneConfig.calTarget = (uint16)(((uint32)CapSense_calibratedRawcountRow
1663:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 ((uint32)(0x01uL << CapSense_CALIBRATION_RESOLUTION) - 1u));
1664:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1665:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Find correct sense clock value */
1666:Generated_Source\PSoC4/CapSense_Sensing.c ****                         cpRow = SmartSense_TunePrescalers(&autoTuneConfig);
1667:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1668:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if ((CapSense_CP_MAX + CapSense_CP_ERROR) <= cpRow)
1669:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1670:Generated_Source\PSoC4/CapSense_Sensing.c ****                             autoTuneStatus = CYRET_BAD_DATA;
1671:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1672:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1673:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /*
1674:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * Multiply the sense Clock Divider by 2 while the desired Sense Clock Frequ
1675:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * than maximum supported Sense Clock Frequency.
1676:Generated_Source\PSoC4/CapSense_Sensing.c ****                         */
1677:Generated_Source\PSoC4/CapSense_Sensing.c ****                         while((((uint32)autoTuneConfig.snsClkInputClock) > ((uint32)ptrWdgt->snsClk
1678:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 (CapSense_MIN_SNS_CLK_DIVIDER > ptrWdgt->snsClk))
1679:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1680:Generated_Source\PSoC4/CapSense_Sensing.c ****                             ptrWdgt->snsClk <<= 1u;
1681:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1682:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1683:Generated_Source\PSoC4/CapSense_Sensing.c ****                         #if (CapSense_ENABLE != CapSense_CSDV2)
1684:Generated_Source\PSoC4/CapSense_Sensing.c ****                             #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 31


1685:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 /* Make sure that ModClk >= 2 * rowSnsClk */
1686:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 if (CapSense_dsRam.modCsdClk >= ((uint8)(ptrWdgt->rowSnsClk << CapS
1687:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 {
1688:Generated_Source\PSoC4/CapSense_Sensing.c ****                                      ptrWdgt->rowSnsClk = CapSense_dsRam.modCsdClk;
1689:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 }
1690:Generated_Source\PSoC4/CapSense_Sensing.c ****                             #else
1691:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 /* Sense clock never equals to Modulator clock for chained dividers
1692:Generated_Source\PSoC4/CapSense_Sensing.c ****                             #endif
1693:Generated_Source\PSoC4/CapSense_Sensing.c ****                         #endif /* (CapSense_ENABLE != CapSense_CSDV2) */
1694:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1695:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1696:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1697:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get pointer to Sense Clock Divider for columns */
1698:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.ptrSenseClk = &ptrWdgt->snsClk;
1699:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1700:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get IDAC */
1701:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.iDac = CapSense_calibratedIdac;
1702:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1703:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Calculate achived calibration level */
1704:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.calTarget = (uint16)(((uint32)CapSense_calibratedRawcount * CapSense
1705:Generated_Source\PSoC4/CapSense_Sensing.c ****                         ((uint32)(0x01uL << CapSense_CALIBRATION_RESOLUTION) - 1u));
1706:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1707:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Find correct sense clock value */
1708:Generated_Source\PSoC4/CapSense_Sensing.c ****                 cp = SmartSense_TunePrescalers(&autoTuneConfig);
1709:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1710:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if ((CapSense_CP_MAX + CapSense_CP_ERROR) <= cp)
1711:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1712:Generated_Source\PSoC4/CapSense_Sensing.c ****                     autoTuneStatus = CYRET_BAD_DATA;
1713:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1714:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1715:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /*
1716:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * Multiply the sense Clock Divider by 2 while the desired Sense Clock Frequency is 
1717:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * than MAX supported Sense Clock Frequency.
1718:Generated_Source\PSoC4/CapSense_Sensing.c ****                 */
1719:Generated_Source\PSoC4/CapSense_Sensing.c ****                 while((((uint32)autoTuneConfig.snsClkInputClock) > ((uint32)ptrWdgt->snsClk * CapSe
1720:Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_MIN_SNS_CLK_DIVIDER > ptrWdgt->snsClk))
1721:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1722:Generated_Source\PSoC4/CapSense_Sensing.c ****                     ptrWdgt->snsClk <<= 1u;
1723:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1724:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1725:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE != CapSense_CSDV2)
1726:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1727:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Make sure that ModClk >= 2 * snsClk */
1728:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_dsRam.modCsdClk >= ((uint8)(ptrWdgt->snsClk << CapSense_FLIP_F
1729:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1730:Generated_Source\PSoC4/CapSense_Sensing.c ****                              ptrWdgt->snsClk = CapSense_dsRam.modCsdClk;
1731:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1732:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
1733:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Sense clock never equals to Modulator clock for chained dividers because
1734:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif
1735:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE != CapSense_CSDV2) */
1736:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1737:Generated_Source\PSoC4/CapSense_Sensing.c ****                 cpWidget[wdgtIndex] = cp;
1738:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1739:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1740:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArra
1741:Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdg
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 32


1742:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1743:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (cpRow > cp)
1744:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1745:Generated_Source\PSoC4/CapSense_Sensing.c ****                             cpWidget[wdgtIndex] = cpRow;
1746:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1747:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1748:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1749:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1750:Generated_Source\PSoC4/CapSense_Sensing.c ****             else
1751:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1752:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSX_EN)
1753:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Non-CSD widget */
1754:Generated_Source\PSoC4/CapSense_Sensing.c ****                     cpWidget[wdgtIndex] = 1u;
1755:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1756:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1757:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1758:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1759:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1760:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #2:
1761:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - repeating calibration with new sense clock frequency
1762:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting resolution
1763:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1764:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1765:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Tune resolution for all the widgets */
1766:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
1767:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1768:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_SENSE_METHOD_CSD_E ==
1769:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
1770:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1771:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
1772:Generated_Source\PSoC4/CapSense_Sensing.c ****                           CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
1773:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1774:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Calibrate CSD widget to the default calibration target */
1775:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneStatus |= CapSense_CSDCalibrateWidget(wdgtIndex, CapSense_CSD_AUTOTUNE_CAL_
1776:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1777:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get pointer to Sense Clock Divider (column or row) */
1778:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.ptrSenseClk = &ptrWdgt->snsClk;
1779:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1780:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set parasitic capacitance for columns */
1781:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.sensorCap = cpWidget[wdgtIndex];
1782:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1783:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get IDAC */
1784:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.iDac = CapSense_calibratedIdac;
1785:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1786:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1787:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArra
1788:Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdg
1789:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1790:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1791:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Set the minimum sense clock frequency to calculate the resolution */
1792:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (ptrWdgt->snsClk < ptrWdgt->rowSnsClk)
1793:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1794:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /* Rewrite pointer to Sense Clock Divider for rows */
1795:Generated_Source\PSoC4/CapSense_Sensing.c ****                             autoTuneConfig.ptrSenseClk = &ptrWdgt->rowSnsClk;
1796:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1797:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /* Set parasitic capacitance for rows */
1798:Generated_Source\PSoC4/CapSense_Sensing.c ****                             autoTuneConfig.sensorCap = cpWidget[wdgtIndex];
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 33


1799:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1800:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /* Get IDAC */
1801:Generated_Source\PSoC4/CapSense_Sensing.c ****                             autoTuneConfig.iDac = CapSense_calibratedIdacRow;
1802:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1803:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1804:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1805:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1806:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get finger capacitance */
1807:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.fingerCap = ptrWdgt->fingerCap;
1808:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1809:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Init pointer to sigPFC */
1810:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.sigPFC = &ptrWdgt->sigPFC;
1811:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1812:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Find resolution */
1813:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->resolution = SmartSense_TuneSensitivity(&autoTuneConfig);
1814:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1815:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1816:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1817:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1818:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #3:
1819:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - selecting a widget clock source if AUTO
1820:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - repeating calibration with found clock frequency, resolution and clock source
1821:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - updating sensitivity
1822:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1823:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1824:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Tune sensitivity for all the widgets */
1825:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
1826:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1827:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_SENSE_METHOD_CSD_E ==
1828:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
1829:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1830:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
1831:Generated_Source\PSoC4/CapSense_Sensing.c ****                           CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
1832:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1833:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetWidgetSenseClkSrc(wdgtIndex, ptrWdgt);
1834:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1835:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Calibrate CSD widget to the default calibration target */
1836:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneStatus |= CapSense_CSDCalibrateWidget(wdgtIndex, CapSense_CSD_AUTOTUNE_CAL_
1837:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1838:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN)
1839:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_DsUpdateWidgetCrc(wdgtIndex);
1840:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN) */
1841:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1842:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1843:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1844:Generated_Source\PSoC4/CapSense_Sensing.c ****         return autoTuneStatus;
1845:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1846:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)) */
1847:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1848:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1849:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_DISABLE == CapSense_CSDV2)
1850:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ( ((CapSense_ENABLE == CapSense_CSX_EN) \
1851:Generated_Source\PSoC4/CapSense_Sensing.c ****         || (CapSense_ENABLE == CapSense_ISX_EN)) ||\
1852:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG))
1853:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
1854:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsTrimIdacsSinking
1855:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 34


1856:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
1857:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
1858:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
1859:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  IDAC1 and IDAC2 for Sinking CSD Mode
1860:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
1861:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
1862:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
1863:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
1864:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
1865:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
1866:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSinking(void)
1867:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1868:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 trimValue;
1869:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1870:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Mod iDAC Sinking Mode */
1871:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_TRIM2_PTR) & ~CapSense_IDAC_TRIM2_MOD_SNK_MASK;
1872:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM2_PTR) &
1873:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                       CapSense_SFLASH_TRIM_IDAC_MOD_MASK) ;
1874:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1875:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
1876:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Comp iDAC Sinking Mode */
1877:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue &= ~CapSense_IDAC_TRIM2_COMP_SNK_MASK;
1878:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM2_PTR) &
1879:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                           CapSense_SFLASH_TRIM_IDAC_COMP_MASK);
1880:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
1881:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1882:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Update IDAC trim bits for gain control in current sink mode */
1883:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_TRIM2_PTR, trimValue);
1884:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1885:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
1886:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)) */
1887:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1888:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1889:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ( ((CapSense_ENABLE == CapSense_CSX_EN) \
1890:Generated_Source\PSoC4/CapSense_Sensing.c ****         || (CapSense_ENABLE == CapSense_ISX_EN)) || \
1891:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG))
1892:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
1893:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsTrimIdacsSourcing
1894:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
1895:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
1896:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
1897:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
1898:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  IDAC1 and IDAC2 for Sourcing CSD Mode
1899:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
1900:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
1901:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
1902:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
1903:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
1904:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
1905:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSourcing(void)
1906:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
  27              		.loc 1 1906 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
1907:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 trimValue;
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 35


1908:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1909:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Mod iDAC Sourcing Mode */
1910:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_TRIM1_PTR) & ~CapSense_IDAC_TRIM1_MOD_SRC_MASK;
  32              		.loc 1 1910 0
  33 0000 0548     		ldr	r0, .L2
  34 0002 0368     		ldr	r3, [r0]
  35 0004 0F22     		movs	r2, #15
  36 0006 9343     		bics	r3, r2
  37 0008 1900     		movs	r1, r3
  38              	.LVL0:
1911:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM1_PTR) &
  39              		.loc 1 1911 0
  40 000a 044B     		ldr	r3, .L2+4
  41 000c 1B78     		ldrb	r3, [r3]
  42 000e 1340     		ands	r3, r2
  43 0010 0B43     		orrs	r3, r1
  44              	.LVL1:
1912:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                       CapSense_SFLASH_TRIM_IDAC_MOD_MASK);
1913:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1914:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
1915:Generated_Source\PSoC4/CapSense_Sensing.c ****                  /* Comp iDAC Sourcing Mode */
1916:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue &= ~CapSense_IDAC_TRIM1_COMP_SRC_MASK;
1917:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM1_PTR) &
1918:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                           CapSense_SFLASH_TRIM_IDAC_COMP_MASK);
1919:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
1920:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1921:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Update IDAC trim bits for gain control in current source mode */
1922:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_TRIM1_PTR, trimValue);
  45              		.loc 1 1922 0
  46 0012 0360     		str	r3, [r0]
1923:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
  47              		.loc 1 1923 0
  48              		@ sp needed
  49 0014 7047     		bx	lr
  50              	.L3:
  51 0016 C046     		.align	2
  52              	.L2:
  53 0018 00FF2840 		.word	1076428544
  54 001c 62F2FF0F 		.word	268431970
  55              		.cfi_endproc
  56              	.LFE18:
  57              		.size	CapSense_SsTrimIdacsSourcing, .-CapSense_SsTrimIdacsSourcing
  58              		.section	.text.CapSense_SsTrimIdacs,"ax",%progbits
  59              		.align	2
  60              		.code	16
  61              		.thumb_func
  62              		.type	CapSense_SsTrimIdacs, %function
  63              	CapSense_SsTrimIdacs:
  64              	.LFB19:
1924:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
1925:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)) */
1926:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1927:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1928:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1929:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsTrimIdacs
1930:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1931:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 36


1932:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1933:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function loads trim values from SFLASH rows to calibrate
1934:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  IDAC1 and IDAC2 for CSD Mode
1935:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1936:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1937:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  If CSX mode is enabled the function loads trim values for both sink and source
1938:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  mode. If CSX mode is disabled the function loads trim values for sink or
1939:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  source mode based on sink/source mode configuration.
1940:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
1941:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1942:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1943:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsTrimIdacs(void)
1944:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
  65              		.loc 1 1944 0
  66              		.cfi_startproc
  67              		@ args = 0, pretend = 0, frame = 0
  68              		@ frame_needed = 0, uses_anonymous_args = 0
  69 0000 10B5     		push	{r4, lr}
  70              		.cfi_def_cfa_offset 8
  71              		.cfi_offset 4, -8
  72              		.cfi_offset 14, -4
1945:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN)
1946:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSinking();
1947:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSourcing();
1948:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)
1949:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSinking();
1950:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)
1951:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSourcing();
  73              		.loc 1 1951 0
  74 0002 FFF7FEFF 		bl	CapSense_SsTrimIdacsSourcing
  75              	.LVL2:
1952:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
1953:Generated_Source\PSoC4/CapSense_Sensing.c ****             #error "Not supported Mode, Component cannot work in this mode"
1954:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN) */
1955:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
  76              		.loc 1 1955 0
  77              		@ sp needed
  78 0006 10BD     		pop	{r4, pc}
  79              		.cfi_endproc
  80              	.LFE19:
  81              		.size	CapSense_SsTrimIdacs, .-CapSense_SsTrimIdacs
  82              		.section	.text.CapSense_SsCSDDisableMode,"ax",%progbits
  83              		.align	2
  84              		.code	16
  85              		.thumb_func
  86              		.type	CapSense_SsCSDDisableMode, %function
  87              	CapSense_SsCSDDisableMode:
  88              	.LFB8:
 769:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
  89              		.loc 1 769 0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93 0000 10B5     		push	{r4, lr}
  94              		.cfi_def_cfa_offset 8
  95              		.cfi_offset 4, -8
  96              		.cfi_offset 14, -4
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 37


 773:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CMOD_HSIOM_MASK);
  97              		.loc 1 773 0
  98 0002 044A     		ldr	r2, .L6
  99 0004 1368     		ldr	r3, [r2]
 100              	.LVL3:
 774:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CMOD_HSIOM_PTR, newRegValue);
 101              		.loc 1 774 0
 102 0006 0F21     		movs	r1, #15
 103 0008 8B43     		bics	r3, r1
 104              	.LVL4:
 775:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 105              		.loc 1 775 0
 106 000a 1360     		str	r3, [r2]
 789:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 107              		.loc 1 789 0
 108 000c FFF7FEFF 		bl	CapSense_SsCSDElectrodeCheck
 109              	.LVL5:
 805:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 110              		.loc 1 805 0
 111              		@ sp needed
 112 0010 10BD     		pop	{r4, pc}
 113              	.L7:
 114 0012 C046     		.align	2
 115              	.L6:
 116 0014 00040240 		.word	1073873920
 117              		.cfi_endproc
 118              	.LFE8:
 119              		.size	CapSense_SsCSDDisableMode, .-CapSense_SsCSDDisableMode
 120              		.section	.text.CapSense_IsBusy,"ax",%progbits
 121              		.align	2
 122              		.global	CapSense_IsBusy
 123              		.code	16
 124              		.thumb_func
 125              		.type	CapSense_IsBusy, %function
 126              	CapSense_IsBusy:
 127              	.LFB2:
 234:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (CapSense_dsRam.status & CapSense_SW_STS_BUSY);
 128              		.loc 1 234 0
 129              		.cfi_startproc
 130              		@ args = 0, pretend = 0, frame = 0
 131              		@ frame_needed = 0, uses_anonymous_args = 0
 132              		@ link register save eliminated.
 235:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 133              		.loc 1 235 0
 134 0000 024B     		ldr	r3, .L9
 135 0002 DB68     		ldr	r3, [r3, #12]
 136 0004 8020     		movs	r0, #128
 137 0006 1840     		ands	r0, r3
 236:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 138              		.loc 1 236 0
 139              		@ sp needed
 140 0008 7047     		bx	lr
 141              	.L10:
 142 000a C046     		.align	2
 143              	.L9:
 144 000c 00000000 		.word	CapSense_dsRam
 145              		.cfi_endproc
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 38


 146              	.LFE2:
 147              		.size	CapSense_IsBusy, .-CapSense_IsBusy
 148              		.section	.text.CapSense_SetupWidget,"ax",%progbits
 149              		.align	2
 150              		.global	CapSense_SetupWidget
 151              		.code	16
 152              		.thumb_func
 153              		.type	CapSense_SetupWidget, %function
 154              	CapSense_SetupWidget:
 155              	.LFB3:
 286:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
 156              		.loc 1 286 0
 157              		.cfi_startproc
 158              		@ args = 0, pretend = 0, frame = 0
 159              		@ frame_needed = 0, uses_anonymous_args = 0
 160              	.LVL6:
 161 0000 10B5     		push	{r4, lr}
 162              		.cfi_def_cfa_offset 8
 163              		.cfi_offset 4, -8
 164              		.cfi_offset 14, -4
 289:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 165              		.loc 1 289 0
 166 0002 0E4B     		ldr	r3, .L17
 167 0004 DB68     		ldr	r3, [r3, #12]
 168 0006 DB03     		lsls	r3, r3, #15
 169 0008 0DD4     		bmi	.L14
 299:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)))
 170              		.loc 1 299 0
 171 000a 0028     		cmp	r0, #0
 172 000c 0DD1     		bne	.L15
 300:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 173              		.loc 1 300 0 discriminator 1
 174 000e 4309     		lsrs	r3, r0, #5
 175 0010 0433     		adds	r3, r3, #4
 176 0012 9B00     		lsls	r3, r3, #2
 177 0014 094A     		ldr	r2, .L17
 178 0016 9B58     		ldr	r3, [r3, r2]
 179 0018 1F22     		movs	r2, #31
 180 001a 0240     		ands	r2, r0
 181 001c D340     		lsrs	r3, r3, r2
 299:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)))
 182              		.loc 1 299 0 discriminator 1
 183 001e DB07     		lsls	r3, r3, #31
 184 0020 05D4     		bmi	.L16
 307:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 185              		.loc 1 307 0
 186 0022 0124     		movs	r4, #1
 187 0024 04E0     		b	.L12
 188              	.L14:
 292:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 189              		.loc 1 292 0
 190 0026 1124     		movs	r4, #17
 191 0028 02E0     		b	.L12
 192              	.L15:
 307:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 193              		.loc 1 307 0
 194 002a 0124     		movs	r4, #1
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 39


 195 002c 00E0     		b	.L12
 196              	.L16:
 303:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 197              		.loc 1 303 0
 198 002e 0024     		movs	r4, #0
 199              	.L12:
 200              	.LVL7:
 314:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 201              		.loc 1 314 0
 202 0030 002C     		cmp	r4, #0
 203 0032 01D1     		bne	.L13
 327:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 204              		.loc 1 327 0
 205 0034 FFF7FEFF 		bl	CapSense_CSDSetupWidget
 206              	.LVL8:
 207              	.L13:
 343:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 208              		.loc 1 343 0
 209 0038 2000     		movs	r0, r4
 210              		@ sp needed
 211              	.LVL9:
 212 003a 10BD     		pop	{r4, pc}
 213              	.L18:
 214              		.align	2
 215              	.L17:
 216 003c 00000000 		.word	CapSense_dsRam
 217              		.cfi_endproc
 218              	.LFE3:
 219              		.size	CapSense_SetupWidget, .-CapSense_SetupWidget
 220              		.section	.text.CapSense_Scan,"ax",%progbits
 221              		.align	2
 222              		.global	CapSense_Scan
 223              		.code	16
 224              		.thumb_func
 225              		.type	CapSense_Scan, %function
 226              	CapSense_Scan:
 227              	.LFB4:
 369:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 228              		.loc 1 369 0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 0, uses_anonymous_args = 0
 232 0000 10B5     		push	{r4, lr}
 233              		.cfi_def_cfa_offset 8
 234              		.cfi_offset 4, -8
 235              		.cfi_offset 14, -4
 236              	.LVL10:
 372:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 237              		.loc 1 372 0
 238 0002 084B     		ldr	r3, .L25
 239 0004 DB68     		ldr	r3, [r3, #12]
 240 0006 DB03     		lsls	r3, r3, #15
 241 0008 07D4     		bmi	.L22
 379:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 242              		.loc 1 379 0
 243 000a 074B     		ldr	r3, .L25+4
 244 000c 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 40


 245 000e 012B     		cmp	r3, #1
 246 0010 05D1     		bne	.L24
 388:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 247              		.loc 1 388 0
 248 0012 FFF7FEFF 		bl	CapSense_CSDScan
 249              	.LVL11:
 370:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 250              		.loc 1 370 0
 251 0016 0020     		movs	r0, #0
 389:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 252              		.loc 1 389 0
 253 0018 03E0     		b	.L20
 254              	.L22:
 375:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 255              		.loc 1 375 0
 256 001a 1120     		movs	r0, #17
 257 001c 01E0     		b	.L20
 258              	.L24:
 397:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 259              		.loc 1 397 0
 260 001e 0120     		movs	r0, #1
 261 0020 4042     		rsbs	r0, r0, #0
 262              	.L20:
 263              	.LVL12:
 402:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 264              		.loc 1 402 0
 265              		@ sp needed
 266 0022 10BD     		pop	{r4, pc}
 267              	.L26:
 268              		.align	2
 269              	.L25:
 270 0024 00000000 		.word	CapSense_dsRam
 271 0028 00000000 		.word	.LANCHOR0
 272              		.cfi_endproc
 273              	.LFE4:
 274              		.size	CapSense_Scan, .-CapSense_Scan
 275              		.section	.text.CapSense_ScanAllWidgets,"ax",%progbits
 276              		.align	2
 277              		.global	CapSense_ScanAllWidgets
 278              		.code	16
 279              		.thumb_func
 280              		.type	CapSense_ScanAllWidgets, %function
 281              	CapSense_ScanAllWidgets:
 282              	.LFB5:
 431:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 283              		.loc 1 431 0
 284              		.cfi_startproc
 285              		@ args = 0, pretend = 0, frame = 0
 286              		@ frame_needed = 0, uses_anonymous_args = 0
 287 0000 10B5     		push	{r4, lr}
 288              		.cfi_def_cfa_offset 8
 289              		.cfi_offset 4, -8
 290              		.cfi_offset 14, -4
 291              	.LVL13:
 436:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 292              		.loc 1 436 0
 293 0002 0C4B     		ldr	r3, .L33
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 41


 294 0004 DB68     		ldr	r3, [r3, #12]
 295 0006 1B06     		lsls	r3, r3, #24
 296 0008 12D4     		bmi	.L32
 297 000a 0024     		movs	r4, #0
 298 000c 0120     		movs	r0, #1
 299 000e 4042     		rsbs	r0, r0, #0
 300 0010 0BE0     		b	.L29
 301              	.LVL14:
 302              	.L31:
 452:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 303              		.loc 1 452 0
 304 0012 2000     		movs	r0, r4
 305              	.LVL15:
 306 0014 FFF7FEFF 		bl	CapSense_SetupWidget
 307              	.LVL16:
 454:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 308              		.loc 1 454 0
 309 0018 0028     		cmp	r0, #0
 310 001a 05D1     		bne	.L30
 471:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 311              		.loc 1 471 0
 312 001c 0022     		movs	r2, #0
 313 001e 064B     		ldr	r3, .L33+4
 314 0020 5A70     		strb	r2, [r3, #1]
 476:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 315              		.loc 1 476 0
 316 0022 FFF7FEFF 		bl	CapSense_Scan
 317              	.LVL17:
 478:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 318              		.loc 1 478 0
 319 0026 04E0     		b	.L28
 320              	.L30:
 449:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 321              		.loc 1 449 0
 322 0028 0134     		adds	r4, r4, #1
 323              	.LVL18:
 324              	.L29:
 447:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex < CapSense_TOTAL_WIDGETS;
 325              		.loc 1 447 0 discriminator 1
 326 002a 002C     		cmp	r4, #0
 327 002c F1D0     		beq	.L31
 328 002e 00E0     		b	.L28
 329              	.LVL19:
 330              	.L32:
 439:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 331              		.loc 1 439 0
 332 0030 1120     		movs	r0, #17
 333              	.LVL20:
 334              	.L28:
 484:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 335              		.loc 1 484 0
 336              		@ sp needed
 337 0032 10BD     		pop	{r4, pc}
 338              	.L34:
 339              		.align	2
 340              	.L33:
 341 0034 00000000 		.word	CapSense_dsRam
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 42


 342 0038 00000000 		.word	.LANCHOR0
 343              		.cfi_endproc
 344              	.LFE5:
 345              		.size	CapSense_ScanAllWidgets, .-CapSense_ScanAllWidgets
 346              		.section	.text.CapSense_SetPinState,"ax",%progbits
 347              		.align	2
 348              		.global	CapSense_SetPinState
 349              		.code	16
 350              		.thumb_func
 351              		.type	CapSense_SetPinState, %function
 352              	CapSense_SetPinState:
 353              	.LFB7:
 656:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdNum;
 354              		.loc 1 656 0
 355              		.cfi_startproc
 356              		@ args = 0, pretend = 0, frame = 0
 357              		@ frame_needed = 0, uses_anonymous_args = 0
 358              	.LVL21:
 359 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 360              		.cfi_def_cfa_offset 24
 361              		.cfi_offset 3, -24
 362              		.cfi_offset 4, -20
 363              		.cfi_offset 5, -16
 364              		.cfi_offset 6, -12
 365              		.cfi_offset 7, -8
 366              		.cfi_offset 14, -4
 367 0002 1600     		movs	r6, r2
 681:Generated_Source\PSoC4/CapSense_Sensing.c ****         eltdNum = 1u;
 368              		.loc 1 681 0
 369 0004 2C23     		movs	r3, #44
 370 0006 5843     		muls	r0, r3
 371              	.LVL22:
 372 0008 234B     		ldr	r3, .L42
 373 000a C458     		ldr	r4, [r0, r3]
 374 000c CB00     		lsls	r3, r1, #3
 375 000e 591A     		subs	r1, r3, r1
 376              	.LVL23:
 377 0010 8B00     		lsls	r3, r1, #2
 378 0012 E418     		adds	r4, r4, r3
 379              	.LVL24:
 686:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 380              		.loc 1 686 0
 381 0014 0025     		movs	r5, #0
 382 0016 3CE0     		b	.L36
 383              	.LVL25:
 384              	.L41:
 689:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_HSIOM_SEL_MASK << 
 385              		.loc 1 689 0
 386 0018 FFF7FEFF 		bl	CyEnterCriticalSection
 387              	.LVL26:
 690:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << ioPtr->s
 388              		.loc 1 690 0
 389 001c 2168     		ldr	r1, [r4]
 390 001e 0B68     		ldr	r3, [r1]
 391 0020 277E     		ldrb	r7, [r4, #24]
 392 0022 0F22     		movs	r2, #15
 393 0024 BA40     		lsls	r2, r2, r7
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 43


 394 0026 9343     		bics	r3, r2
 395 0028 0B60     		str	r3, [r1]
 691:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 396              		.loc 1 691 0
 397 002a 6168     		ldr	r1, [r4, #4]
 398 002c 0B68     		ldr	r3, [r1]
 399 002e A77E     		ldrb	r7, [r4, #26]
 400 0030 0722     		movs	r2, #7
 401 0032 BA40     		lsls	r2, r2, r7
 402 0034 9343     		bics	r3, r2
 403 0036 0B60     		str	r3, [r1]
 692:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 404              		.loc 1 692 0
 405 0038 FFF7FEFF 		bl	CyExitCriticalSection
 406              	.LVL27:
 694:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 407              		.loc 1 694 0
 408 003c 012E     		cmp	r6, #1
 409 003e 17D0     		beq	.L38
 410 0040 002E     		cmp	r6, #0
 411 0042 02D0     		beq	.L39
 412 0044 032E     		cmp	r6, #3
 413 0046 1FD0     		beq	.L40
 414 0048 21E0     		b	.L37
 415              	.L39:
 698:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_SNS_GROUND_CONNECT <<
 416              		.loc 1 698 0
 417 004a FFF7FEFF 		bl	CyEnterCriticalSection
 418              	.LVL28:
 699:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
 419              		.loc 1 699 0
 420 004e 6268     		ldr	r2, [r4, #4]
 421 0050 1168     		ldr	r1, [r2]
 422 0052 A77E     		ldrb	r7, [r4, #26]
 423 0054 0623     		movs	r3, #6
 424 0056 BB40     		lsls	r3, r3, r7
 425 0058 0B43     		orrs	r3, r1
 426 005a 1360     		str	r3, [r2]
 700:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 427              		.loc 1 700 0
 428 005c A168     		ldr	r1, [r4, #8]
 429 005e 0B68     		ldr	r3, [r1]
 430 0060 677E     		ldrb	r7, [r4, #25]
 431 0062 0122     		movs	r2, #1
 432 0064 BA40     		lsls	r2, r2, r7
 433 0066 9343     		bics	r3, r2
 434 0068 0B60     		str	r3, [r1]
 701:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 435              		.loc 1 701 0
 436 006a FFF7FEFF 		bl	CyExitCriticalSection
 437              	.LVL29:
 702:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 438              		.loc 1 702 0
 439 006e 0EE0     		b	.L37
 440              	.L38:
 705:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 441              		.loc 1 705 0
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 44


 442 0070 FFF7FEFF 		bl	CyEnterCriticalSection
 443              	.LVL30:
 706:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 444              		.loc 1 706 0
 445 0074 A168     		ldr	r1, [r4, #8]
 446 0076 0B68     		ldr	r3, [r1]
 447 0078 677E     		ldrb	r7, [r4, #25]
 448 007a 0122     		movs	r2, #1
 449 007c BA40     		lsls	r2, r2, r7
 450 007e 9343     		bics	r3, r2
 451 0080 0B60     		str	r3, [r1]
 707:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 452              		.loc 1 707 0
 453 0082 FFF7FEFF 		bl	CyExitCriticalSection
 454              	.LVL31:
 708:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 455              		.loc 1 708 0
 456 0086 02E0     		b	.L37
 457              	.L40:
 713:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 458              		.loc 1 713 0
 459 0088 2000     		movs	r0, r4
 460 008a FFF7FEFF 		bl	CapSense_CSDConnectSns
 461              	.LVL32:
 462              	.L37:
 748:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 463              		.loc 1 748 0 discriminator 2
 464 008e 1C34     		adds	r4, r4, #28
 465              	.LVL33:
 686:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 466              		.loc 1 686 0 discriminator 2
 467 0090 0135     		adds	r5, r5, #1
 468              	.LVL34:
 469              	.L36:
 686:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 470              		.loc 1 686 0 is_stmt 0 discriminator 1
 471 0092 002D     		cmp	r5, #0
 472 0094 C0D0     		beq	.L41
 750:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 473              		.loc 1 750 0 is_stmt 1
 474              		@ sp needed
 475              	.LVL35:
 476              	.LVL36:
 477              	.LVL37:
 478 0096 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 479              	.L43:
 480              		.align	2
 481              	.L42:
 482 0098 00000000 		.word	CapSense_dsFlash
 483              		.cfi_endproc
 484              	.LFE7:
 485              		.size	CapSense_SetPinState, .-CapSense_SetPinState
 486              		.section	.text.CapSense_SsSwitchSensingMode,"ax",%progbits
 487              		.align	2
 488              		.global	CapSense_SsSwitchSensingMode
 489              		.code	16
 490              		.thumb_func
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 45


 491              		.type	CapSense_SsSwitchSensingMode, %function
 492              	CapSense_SsSwitchSensingMode:
 493              	.LFB9:
 908:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_currentSenseMethod != mode)
 494              		.loc 1 908 0
 495              		.cfi_startproc
 496              		@ args = 0, pretend = 0, frame = 0
 497              		@ frame_needed = 0, uses_anonymous_args = 0
 498              	.LVL38:
 499 0000 10B5     		push	{r4, lr}
 500              		.cfi_def_cfa_offset 8
 501              		.cfi_offset 4, -8
 502              		.cfi_offset 14, -4
 503 0002 0400     		movs	r4, r0
 909:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 504              		.loc 1 909 0
 505 0004 0C4B     		ldr	r3, .L48
 506 0006 1B78     		ldrb	r3, [r3]
 507 0008 8342     		cmp	r3, r0
 508 000a 14D0     		beq	.L44
 912:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 509              		.loc 1 912 0
 510 000c 012B     		cmp	r3, #1
 511 000e 01D1     		bne	.L46
 915:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 512              		.loc 1 915 0
 513 0010 FFF7FEFF 		bl	CapSense_SsCSDDisableMode
 514              	.LVL39:
 515              	.L46:
 945:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 516              		.loc 1 945 0
 517 0014 012C     		cmp	r4, #1
 518 0016 05D1     		bne	.L47
 949:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSD_E;
 519              		.loc 1 949 0
 520 0018 FFF7FEFF 		bl	CapSense_SsCSDInitialize
 521              	.LVL40:
 950:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 522              		.loc 1 950 0
 523 001c 0122     		movs	r2, #1
 524 001e 064B     		ldr	r3, .L48
 525 0020 1A70     		strb	r2, [r3]
 526 0022 08E0     		b	.L44
 527              	.L47:
 953:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 528              		.loc 1 953 0
 529 0024 022C     		cmp	r4, #2
 530 0026 06D0     		beq	.L44
 961:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 531              		.loc 1 961 0
 532 0028 042C     		cmp	r4, #4
 533 002a 04D0     		beq	.L44
 969:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 534              		.loc 1 969 0
 535 002c 032C     		cmp	r4, #3
 536 002e 02D0     		beq	.L44
 978:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 46


 537              		.loc 1 978 0
 538 0030 0022     		movs	r2, #0
 539 0032 014B     		ldr	r3, .L48
 540 0034 1A70     		strb	r2, [r3]
 541              	.L44:
 981:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 542              		.loc 1 981 0
 543              		@ sp needed
 544 0036 10BD     		pop	{r4, pc}
 545              	.L49:
 546              		.align	2
 547              	.L48:
 548 0038 00000000 		.word	.LANCHOR0
 549              		.cfi_endproc
 550              	.LFE9:
 551              		.size	CapSense_SsSwitchSensingMode, .-CapSense_SsSwitchSensingMode
 552              		.section	.text.CapSense_SsSetIOsInDefaultState,"ax",%progbits
 553              		.align	2
 554              		.global	CapSense_SsSetIOsInDefaultState
 555              		.code	16
 556              		.thumb_func
 557              		.type	CapSense_SsSetIOsInDefaultState, %function
 558              	CapSense_SsSetIOsInDefaultState:
 559              	.LFB10:
1007:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_IO_STRUCT const *ioPtr = &CapSense_ioList[0u];
 560              		.loc 1 1007 0
 561              		.cfi_startproc
 562              		@ args = 0, pretend = 0, frame = 0
 563              		@ frame_needed = 0, uses_anonymous_args = 0
 564 0000 30B5     		push	{r4, r5, lr}
 565              		.cfi_def_cfa_offset 12
 566              		.cfi_offset 4, -12
 567              		.cfi_offset 5, -8
 568              		.cfi_offset 14, -4
 569              	.LVL41:
1013:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 570              		.loc 1 1013 0
 571 0002 0020     		movs	r0, #0
1008:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 loopIndex;
 572              		.loc 1 1008 0
 573 0004 0D4B     		ldr	r3, .L53
1013:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 574              		.loc 1 1013 0
 575 0006 16E0     		b	.L51
 576              	.LVL42:
 577              	.L52:
1020:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue &= ~(ioPtr->hsiomMask);
 578              		.loc 1 1020 0 discriminator 3
 579 0008 1968     		ldr	r1, [r3]
 580 000a 0A68     		ldr	r2, [r1]
 581              	.LVL43:
1021:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (ioPtr->hsiomPtr, regValue);
 582              		.loc 1 1021 0 discriminator 3
 583 000c 1C69     		ldr	r4, [r3, #16]
 584 000e A243     		bics	r2, r4
 585              	.LVL44:
1022:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 47


 586              		.loc 1 1022 0 discriminator 3
 587 0010 0A60     		str	r2, [r1]
1024:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue &= ~(CapSense_GPIO_PC_MASK << ioPtr->shift);
 588              		.loc 1 1024 0 discriminator 3
 589 0012 5C68     		ldr	r4, [r3, #4]
 590 0014 2268     		ldr	r2, [r4]
 591              	.LVL45:
1025:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue |=  (CapSense_GPIO_STRGDRV << ioPtr->shift);
 592              		.loc 1 1025 0 discriminator 3
 593 0016 9D7E     		ldrb	r5, [r3, #26]
 594 0018 0721     		movs	r1, #7
 595 001a A940     		lsls	r1, r1, r5
 596 001c 8A43     		bics	r2, r1
 597              	.LVL46:
 598 001e 1100     		movs	r1, r2
 599              	.LVL47:
1026:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (ioPtr->pcPtr, regValue);
 600              		.loc 1 1026 0 discriminator 3
 601 0020 0622     		movs	r2, #6
 602 0022 AA40     		lsls	r2, r2, r5
 603 0024 0A43     		orrs	r2, r1
 604              	.LVL48:
1027:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 605              		.loc 1 1027 0 discriminator 3
 606 0026 2260     		str	r2, [r4]
1029:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue &= ~(ioPtr->mask);
 607              		.loc 1 1029 0 discriminator 3
 608 0028 9968     		ldr	r1, [r3, #8]
 609 002a 0A68     		ldr	r2, [r1]
 610              	.LVL49:
1030:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (ioPtr->drPtr, regValue);
 611              		.loc 1 1030 0 discriminator 3
 612 002c 5C69     		ldr	r4, [r3, #20]
 613 002e A243     		bics	r2, r4
 614              	.LVL50:
1031:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 615              		.loc 1 1031 0 discriminator 3
 616 0030 0A60     		str	r2, [r1]
1034:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 617              		.loc 1 1034 0 discriminator 3
 618 0032 1C33     		adds	r3, r3, #28
 619              	.LVL51:
1013:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 620              		.loc 1 1013 0 discriminator 3
 621 0034 0130     		adds	r0, r0, #1
 622              	.LVL52:
 623              	.L51:
1013:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 624              		.loc 1 1013 0 is_stmt 0 discriminator 1
 625 0036 0428     		cmp	r0, #4
 626 0038 E6D9     		bls	.L52
1040:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 627              		.loc 1 1040 0 is_stmt 1
 628              		@ sp needed
 629 003a 30BD     		pop	{r4, r5, pc}
 630              	.L54:
 631              		.align	2
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 48


 632              	.L53:
 633 003c 00000000 		.word	CapSense_ioList
 634              		.cfi_endproc
 635              	.LFE10:
 636              		.size	CapSense_SsSetIOsInDefaultState, .-CapSense_SsSetIOsInDefaultState
 637              		.section	.text.CapSense_SsPostAllWidgetsScan,"ax",%progbits
 638              		.align	2
 639              		.global	CapSense_SsPostAllWidgetsScan
 640              		.code	16
 641              		.thumb_func
 642              		.type	CapSense_SsPostAllWidgetsScan, %function
 643              	CapSense_SsPostAllWidgetsScan:
 644              	.LFB11:
1125:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 645              		.loc 1 1125 0
 646              		.cfi_startproc
 647              		@ args = 0, pretend = 0, frame = 0
 648              		@ frame_needed = 0, uses_anonymous_args = 0
 649              		@ link register save eliminated.
1182:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 650              		.loc 1 1182 0
 651              		@ sp needed
 652 0000 7047     		bx	lr
 653              		.cfi_endproc
 654              	.LFE11:
 655              		.size	CapSense_SsPostAllWidgetsScan, .-CapSense_SsPostAllWidgetsScan
 656 0002 C046     		.section	.text.CapSense_SsIsrInitialize,"ax",%progbits
 657              		.align	2
 658              		.global	CapSense_SsIsrInitialize
 659              		.code	16
 660              		.thumb_func
 661              		.type	CapSense_SsIsrInitialize, %function
 662              	CapSense_SsIsrInitialize:
 663              	.LFB12:
1202:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_ISR_StartEx(address);
 664              		.loc 1 1202 0
 665              		.cfi_startproc
 666              		@ args = 0, pretend = 0, frame = 0
 667              		@ frame_needed = 0, uses_anonymous_args = 0
 668              	.LVL53:
 669 0000 10B5     		push	{r4, lr}
 670              		.cfi_def_cfa_offset 8
 671              		.cfi_offset 4, -8
 672              		.cfi_offset 14, -4
1203:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 673              		.loc 1 1203 0
 674 0002 FFF7FEFF 		bl	CapSense_ISR_StartEx
 675              	.LVL54:
1204:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 676              		.loc 1 1204 0
 677              		@ sp needed
 678 0006 10BD     		pop	{r4, pc}
 679              		.cfi_endproc
 680              	.LFE12:
 681              		.size	CapSense_SsIsrInitialize, .-CapSense_SsIsrInitialize
 682              		.section	.text.CapSense_SsSetModClkClockDivider,"ax",%progbits
 683              		.align	2
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 49


 684              		.global	CapSense_SsSetModClkClockDivider
 685              		.code	16
 686              		.thumb_func
 687              		.type	CapSense_SsSetModClkClockDivider, %function
 688              	CapSense_SsSetModClkClockDivider:
 689              	.LFB13:
1225:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
 690              		.loc 1 1225 0
 691              		.cfi_startproc
 692              		@ args = 0, pretend = 0, frame = 0
 693              		@ frame_needed = 0, uses_anonymous_args = 0
 694              		@ link register save eliminated.
 695              	.LVL55:
1228:Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_ModClk__DIV_ID <<
 696              		.loc 1 1228 0
 697 0000 074A     		ldr	r2, .L59
 698 0002 084B     		ldr	r3, .L59+4
 699 0004 1A60     		str	r2, [r3]
1238:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 700              		.loc 1 1238 0
 701 0006 0138     		subs	r0, r0, #1
 702              	.LVL56:
 703 0008 0002     		lsls	r0, r0, #8
 704              	.LVL57:
 705 000a 074B     		ldr	r3, .L59+8
 706 000c 1860     		str	r0, [r3]
 707              	.L58:
1241:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 708              		.loc 1 1241 0 discriminator 1
 709 000e 054B     		ldr	r3, .L59+4
 710 0010 1B68     		ldr	r3, [r3]
 711 0012 002B     		cmp	r3, #0
 712 0014 FBDB     		blt	.L58
1247:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(((uint32)CapSense_ModClk__DIV_ID << CapSense_MODCLK_CMD_DIV_SHIFT) |
 713              		.loc 1 1247 0
 714 0016 054A     		ldr	r2, .L59+12
 715 0018 024B     		ldr	r3, .L59+4
 716 001a 1A60     		str	r2, [r3]
1272:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 717              		.loc 1 1272 0
 718              		@ sp needed
 719 001c 7047     		bx	lr
 720              	.L60:
 721 001e C046     		.align	2
 722              	.L59:
 723 0020 40000040 		.word	1073741888
 724 0024 00000140 		.word	1073807360
 725 0028 00030140 		.word	1073808128
 726 002c 40FF0080 		.word	-2147418304
 727              		.cfi_endproc
 728              	.LFE13:
 729              		.size	CapSense_SsSetModClkClockDivider, .-CapSense_SsSetModClkClockDivider
 730              		.section	.text.CapSense_SsSetSnsClockDivider,"ax",%progbits
 731              		.align	2
 732              		.global	CapSense_SsSetSnsClockDivider
 733              		.code	16
 734              		.thumb_func
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 50


 735              		.type	CapSense_SsSetSnsClockDivider, %function
 736              	CapSense_SsSetSnsClockDivider:
 737              	.LFB14:
1293:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
 738              		.loc 1 1293 0
 739              		.cfi_startproc
 740              		@ args = 0, pretend = 0, frame = 0
 741              		@ frame_needed = 0, uses_anonymous_args = 0
 742              		@ link register save eliminated.
 743              	.LVL58:
1309:Generated_Source\PSoC4/CapSense_Sensing.c ****                      ((uint32)CapSense_SnsClk__DIV_ID <<
 744              		.loc 1 1309 0
 745 0000 074A     		ldr	r2, .L63
 746 0002 084B     		ldr	r3, .L63+4
 747 0004 1A60     		str	r2, [r3]
1319:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 748              		.loc 1 1319 0
 749 0006 0138     		subs	r0, r0, #1
 750              	.LVL59:
 751 0008 0002     		lsls	r0, r0, #8
 752              	.LVL60:
 753 000a 074B     		ldr	r3, .L63+8
 754 000c 1860     		str	r0, [r3]
 755              	.L62:
1322:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 756              		.loc 1 1322 0 discriminator 1
 757 000e 054B     		ldr	r3, .L63+4
 758 0010 1B68     		ldr	r3, [r3]
 759 0012 002B     		cmp	r3, #0
 760 0014 FBDB     		blt	.L62
1328:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (uint32)(((uint32)CapSense_SnsClk__DIV_ID << CapSense_SNSCLK_CMD_DIV_SHIFT) |
 761              		.loc 1 1328 0
 762 0016 054A     		ldr	r2, .L63+12
 763 0018 024B     		ldr	r3, .L63+4
 764 001a 1A60     		str	r2, [r3]
1354:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 765              		.loc 1 1354 0
 766              		@ sp needed
 767 001c 7047     		bx	lr
 768              	.L64:
 769 001e C046     		.align	2
 770              	.L63:
 771 0020 41000040 		.word	1073741889
 772 0024 00000140 		.word	1073807360
 773 0028 04030140 		.word	1073808132
 774 002c 41FF0080 		.word	-2147418303
 775              		.cfi_endproc
 776              	.LFE14:
 777              		.size	CapSense_SsSetSnsClockDivider, .-CapSense_SsSetSnsClockDivider
 778              		.section	.text.CapSense_SsSetClockDividers,"ax",%progbits
 779              		.align	2
 780              		.global	CapSense_SsSetClockDividers
 781              		.code	16
 782              		.thumb_func
 783              		.type	CapSense_SsSetClockDividers, %function
 784              	CapSense_SsSetClockDividers:
 785              	.LFB15:
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 51


1377:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Mod clock */
 786              		.loc 1 1377 0
 787              		.cfi_startproc
 788              		@ args = 0, pretend = 0, frame = 0
 789              		@ frame_needed = 0, uses_anonymous_args = 0
 790              	.LVL61:
 791 0000 10B5     		push	{r4, lr}
 792              		.cfi_def_cfa_offset 8
 793              		.cfi_offset 4, -8
 794              		.cfi_offset 14, -4
 795 0002 0400     		movs	r4, r0
1379:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 796              		.loc 1 1379 0
 797 0004 0800     		movs	r0, r1
 798              	.LVL62:
 799 0006 FFF7FEFF 		bl	CapSense_SsSetModClkClockDivider
 800              	.LVL63:
1382:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 801              		.loc 1 1382 0
 802 000a 2000     		movs	r0, r4
 803 000c FFF7FEFF 		bl	CapSense_SsSetSnsClockDivider
 804              	.LVL64:
1383:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 805              		.loc 1 1383 0
 806              		@ sp needed
 807              	.LVL65:
 808 0010 10BD     		pop	{r4, pc}
 809              		.cfi_endproc
 810              	.LFE15:
 811              		.size	CapSense_SsSetClockDividers, .-CapSense_SsSetClockDividers
 812 0012 C046     		.section	.text.CapSense_CalibrateWidget,"ax",%progbits
 813              		.align	2
 814              		.global	CapSense_CalibrateWidget
 815              		.code	16
 816              		.thumb_func
 817              		.type	CapSense_CalibrateWidget, %function
 818              	CapSense_CalibrateWidget:
 819              	.LFB16:
1429:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 820              		.loc 1 1429 0
 821              		.cfi_startproc
 822              		@ args = 0, pretend = 0, frame = 0
 823              		@ frame_needed = 0, uses_anonymous_args = 0
 824              	.LVL66:
 825 0000 10B5     		push	{r4, lr}
 826              		.cfi_def_cfa_offset 8
 827              		.cfi_offset 4, -8
 828              		.cfi_offset 14, -4
 829 0002 031E     		subs	r3, r0, #0
 830              	.LVL67:
1434:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 831              		.loc 1 1434 0
 832 0004 01D1     		bne	.L69
1430:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 833              		.loc 1 1430 0
 834 0006 0020     		movs	r0, #0
 835              	.LVL68:
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 52


 836 0008 00E0     		b	.L67
 837              	.LVL69:
 838              	.L69:
1436:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 839              		.loc 1 1436 0
 840 000a 0120     		movs	r0, #1
 841              	.LVL70:
 842              	.L67:
1454:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 843              		.loc 1 1454 0
 844 000c 0028     		cmp	r0, #0
 845 000e 03D1     		bne	.L68
1483:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 846              		.loc 1 1483 0
 847 0010 5521     		movs	r1, #85
 848 0012 1800     		movs	r0, r3
 849              	.LVL71:
 850 0014 FFF7FEFF 		bl	CapSense_CSDCalibrateWidget
 851              	.LVL72:
 852              	.L68:
1505:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 853              		.loc 1 1505 0
 854              		@ sp needed
 855 0018 10BD     		pop	{r4, pc}
 856              		.cfi_endproc
 857              	.LFE16:
 858              		.size	CapSense_CalibrateWidget, .-CapSense_CalibrateWidget
 859 001a C046     		.section	.text.CapSense_CalibrateAllWidgets,"ax",%progbits
 860              		.align	2
 861              		.global	CapSense_CalibrateAllWidgets
 862              		.code	16
 863              		.thumb_func
 864              		.type	CapSense_CalibrateAllWidgets, %function
 865              	CapSense_CalibrateAllWidgets:
 866              	.LFB17:
1542:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 867              		.loc 1 1542 0
 868              		.cfi_startproc
 869              		@ args = 0, pretend = 0, frame = 0
 870              		@ frame_needed = 0, uses_anonymous_args = 0
 871 0000 70B5     		push	{r4, r5, r6, lr}
 872              		.cfi_def_cfa_offset 16
 873              		.cfi_offset 4, -16
 874              		.cfi_offset 5, -12
 875              		.cfi_offset 6, -8
 876              		.cfi_offset 14, -4
 877              	.LVL73:
1546:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 878              		.loc 1 1546 0
 879 0002 0024     		movs	r4, #0
1543:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
 880              		.loc 1 1543 0
 881 0004 0025     		movs	r5, #0
1546:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 882              		.loc 1 1546 0
 883 0006 04E0     		b	.L71
 884              	.LVL74:
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 53


 885              	.L72:
1548:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 886              		.loc 1 1548 0 discriminator 3
 887 0008 2000     		movs	r0, r4
 888 000a FFF7FEFF 		bl	CapSense_CalibrateWidget
 889              	.LVL75:
 890 000e 0543     		orrs	r5, r0
 891              	.LVL76:
1546:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 892              		.loc 1 1546 0 discriminator 3
 893 0010 0134     		adds	r4, r4, #1
 894              	.LVL77:
 895              	.L71:
1546:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 896              		.loc 1 1546 0 is_stmt 0 discriminator 1
 897 0012 002C     		cmp	r4, #0
 898 0014 F8D0     		beq	.L72
1552:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ANYMODE_AUTOCAL) */
 899              		.loc 1 1552 0 is_stmt 1
 900 0016 2800     		movs	r0, r5
 901              		@ sp needed
 902              	.LVL78:
 903              	.LVL79:
 904 0018 70BD     		pop	{r4, r5, r6, pc}
 905              		.cfi_endproc
 906              	.LFE17:
 907              		.size	CapSense_CalibrateAllWidgets, .-CapSense_CalibrateAllWidgets
 908 001a C046     		.section	.text.CapSense_SsClearCSDSensors,"ax",%progbits
 909              		.align	2
 910              		.global	CapSense_SsClearCSDSensors
 911              		.code	16
 912              		.thumb_func
 913              		.type	CapSense_SsClearCSDSensors, %function
 914              	CapSense_SsClearCSDSensors:
 915              	.LFB22:
1956:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif  /* (CapSense_DISABLE == CapSense_CSDV2) */
1957:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1958:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1959:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
1960:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1961:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsChangeImoFreq
1962:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1963:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1964:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1965:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the IMO frequency.
1966:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1967:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1968:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The IMO frequency can have three offsets: 0%, -5% and +5%. The frequency
1969:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  trims are contained in the CapSense_immunity[value] array for each
1970:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  frequency channel.
1971:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1972:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param value The frequency channel ID.
1973:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1974:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1975:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_SsChangeImoFreq(uint32 value)
1976:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1977:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR, CapSense_immunity[value]);
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 54


1978:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1979:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1980:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1981:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsChangeClkFreq
1982:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1983:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1984:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1985:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
1986:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the corresponding divider.
1987:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1988:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1989:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
1990:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the corresponding divider.
1991:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1992:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param chId
1993:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The frequency channel ID.
1994:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1995:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1996:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_SsChangeClkFreq(uint32 chId)
1997:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1998:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 snsClkDivider;
1999:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 freqOffset1 = 0u;
2000:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 freqOffset2 = 0u;
2001:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2002:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSD_WIDGETS)
2003:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSDV2)
2004:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 conversionsNum;
2005:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2006:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2007:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2008:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2009:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2010:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 snsClkSrc;
2011:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
2012:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2013:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2014:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((0u != CapSense_TOTAL_CSD_WIDGETS) || \
2015:Generated_Source\PSoC4/CapSense_Sensing.c ****              ((CapSense_DISABLE == CapSense_CSX_COMMON_TX_CLK_EN) && (0u != CapSense_TOTAL_CSX_WIDG
2016:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt = &CapSense_dsFlash.wdgtArray[CapSense_wid
2017:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdg
2018:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2019:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2020:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch(CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[CapSense_widgetIndex]))
2021:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2022:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSD_WIDGETS)
2023:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
2024:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get sensor clock divider value */
2025:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN)
2026:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_dsRam.snsCsdClk;
2027:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2028:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2029:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get SnsClck divider for rows or columns */
2030:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].numCols <= CapSense_se
2031:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2032:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = ptrWdgt->rowSnsClk;
2033:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2034:Generated_Source\PSoC4/CapSense_Sensing.c ****                         else
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 55


2035:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2036:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = ptrWdgt->snsClk;
2037:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2038:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2039:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider = ptrWdgt->snsClk;
2040:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2041:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2042:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2043:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset1 = CapSense_CSD_MFS_DIVIDER_OFFSET_F1;
2044:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset2 = CapSense_CSD_MFS_DIVIDER_OFFSET_F2;
2045:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2046:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2047:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2048:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2049:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Get sense clk source */
2050:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2051:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get SnsClc Source for rows or columns */
2052:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].numCols <= CapSense_se
2053:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2054:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->rowSnsClkSource;
2055:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2056:Generated_Source\PSoC4/CapSense_Sensing.c ****                         else
2057:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2058:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2059:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2060:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2061:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2062:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2063:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2064:Generated_Source\PSoC4/CapSense_Sensing.c ****                     switch (snsClkSrc)
2065:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2066:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS8:
2067:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS12:
2068:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Multiply by 2 for PRS8/PRS12 mode */
2069:Generated_Source\PSoC4/CapSense_Sensing.c ****                         freqOffset1 <<= 1u;
2070:Generated_Source\PSoC4/CapSense_Sensing.c ****                         freqOffset2 <<= 1u;
2071:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2072:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2073:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2074:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2075:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2076:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
2077:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2078:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Change the divider based on the chId */
2079:Generated_Source\PSoC4/CapSense_Sensing.c ****                 switch (chId)
2080:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2081:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_1:
2082:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2083:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset1;
2084:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2085:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2086:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_2:
2087:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2088:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset2;
2089:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2090:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2091:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 56


2092:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2093:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2094:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2095:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2096:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2097:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSDV2)
2098:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Set Number Of Conversions based on scanning resolution */
2099:Generated_Source\PSoC4/CapSense_Sensing.c ****                     conversionsNum = CapSense_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)pt
2100:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CY_SET_REG32(CapSense_SEQ_NORM_CNT_PTR, (conversionsNum & CapSense_SEQ_NORM_CNT
2101:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2102:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2103:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2104:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2105:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2106:Generated_Source\PSoC4/CapSense_Sensing.c ****                     switch (snsClkSrc)
2107:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2108:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS8:
2109:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS12:
2110:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Divide by 2 for PRS8/PRS12 mode */
2111:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider >>= 1;
2112:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (snsClkDivider == 0u)
2113:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2114:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = 1u;
2115:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2116:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2117:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2118:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2119:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2120:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2121:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
2122:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2123:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Configure the new divider */
2124:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetSnsClockDivider(snsClkDivider);
2125:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2126:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2127:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* #if (0u != CapSense_TOTAL_CSD_WIDGETS) */
2128:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2129:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSX_WIDGETS)
2130:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
2131:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN)
2132:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_dsRam.snsCsxClk;
2133:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else /* (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
2134:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = ptrWdgt->snsClk;
2135:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
2136:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset1 = CapSense_CSX_MFS_DIVIDER_OFFSET_F1;
2137:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset2 = CapSense_CSX_MFS_DIVIDER_OFFSET_F2;
2138:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2139:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Change the divider based on the chId */
2140:Generated_Source\PSoC4/CapSense_Sensing.c ****                 switch (chId)
2141:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2142:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_1:
2143:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2144:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset1;
2145:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2146:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2147:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_2:
2148:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 57


2149:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset2;
2150:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2151:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2152:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2153:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2154:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2155:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2156:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2157:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2158:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Configure the new divider */
2159:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetSnsClockDivider(snsClkDivider);
2160:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2161:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2162:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* #if (0u != CapSense_TOTAL_CSX_WIDGETS) */
2163:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2164:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2165:Generated_Source\PSoC4/CapSense_Sensing.c ****             CYASSERT(0);
2166:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2167:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2168:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2169:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif  /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
2170:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2171:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2172:Generated_Source\PSoC4/CapSense_Sensing.c **** #if((CapSense_ENABLE == CapSense_CSD_EN) || \
2173:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSX_EN) && \
2174:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2)))
2175:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2176:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsInitializeSourceSenseClk
2177:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2178:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2179:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2180:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets a source for Sense Clk for all CSD widgets.
2181:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2182:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2183:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk.
2184:Generated_Source\PSoC4/CapSense_Sensing.c **** *  for all CSD widgets.
2185:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2186:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2187:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsInitializeSourceSenseClk(void)
2188:Generated_Source\PSoC4/CapSense_Sensing.c **** {
2189:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
2190:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2191:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2192:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
2193:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2194:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
2195:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2196:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
2197:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2198:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
2199:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
2200:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetWidgetSenseClkSrc(wdgtIndex, ptrWdgt);
2201:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2202:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
2203:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
2204:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
2205:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetWidgetTxClkSrc(wdgtIndex, ptrWdgt);
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 58


2206:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2207:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (((CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN)) &
2208:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2209:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2210:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2211:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN)
2212:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_DsUpdateWidgetCrc(wdgtIndex);
2213:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN) */
2214:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2215:Generated_Source\PSoC4/CapSense_Sensing.c **** }
2216:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) || \
2217:Generated_Source\PSoC4/CapSense_Sensing.c ****            (((CapSense_ENABLE == CapSense_CSX_EN) || \
2218:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_ISX_EN)) && \
2219:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2))) */
2220:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2221:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2222:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
2223:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2224:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsSetWidgetSenseClkSrc
2225:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2226:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2227:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2228:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Sets a source for the sense clock for a widget.
2229:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2230:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param wdgtIndex
2231:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2232:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param ptrWdgt
2233:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2234:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2235:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2236:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk for a
2237:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  widget.
2238:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2239:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2240:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptr
2241:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2242:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
2243:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrScale;
2244:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2245:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2246:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if(CapSense_ENABLE == CapSense_CSDV2)
2247:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 conversionsNum;
2248:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2249:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 snsClkDivider;
2250:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2251:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2252:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2253:Generated_Source\PSoC4/CapSense_Sensing.c ****             snsClkDivider = CapSense_SsCSDGetColSnsClkDivider(wdgtIndex);
2254:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2255:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if(CapSense_ENABLE == CapSense_CSDV2)
2256:Generated_Source\PSoC4/CapSense_Sensing.c ****                 conversionsNum = CapSense_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)ptrWdg
2257:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                              CapSen
2258:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2259:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (CapSense_CLK_SOURCE_DIRECT == lfsrSize)
2260:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2261:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /*
2262:Generated_Source\PSoC4/CapSense_Sensing.c ****                     * Multiplying of the snsClkDivider by 2 is needed to pass the
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 59


2263:Generated_Source\PSoC4/CapSense_Sensing.c ****                     * average PRS frequency through the argument.
2264:Generated_Source\PSoC4/CapSense_Sensing.c ****                     */
2265:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->res
2266:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2267:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2268:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2269:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /*
2270:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * Multiplying of the snsClkDivider by 2 is needed to pass the
2271:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * average PRS frequency through the argument.
2272:Generated_Source\PSoC4/CapSense_Sensing.c ****                 */
2273:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->resolut
2274:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = 0u;
2275:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2276:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2277:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrSize = (uint8)CapSense_DEFAULT_MODULATION_MODE;
2278:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale = 0u;
2279:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)wdgtIndex; /* This parameter is unused in such configurations */
2280:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2281:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2282:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR_SCALE_OFFS
2283:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2284:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2285:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArray[wdgtIn
2286:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArray[w
2287:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2288:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2289:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_SsCSDGetRowSnsClkDivider(wdgtIndex);
2290:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2291:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if(CapSense_ENABLE == CapSense_CSDV2)
2292:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2293:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_CLK_SOURCE_DIRECT == lfsrSize)
2294:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2295:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /*
2296:Generated_Source\PSoC4/CapSense_Sensing.c ****                             * Multiplying of the snsClkDivider by 2 is needed to pass the
2297:Generated_Source\PSoC4/CapSense_Sensing.c ****                             * average PRS frequency through the argument.
2298:Generated_Source\PSoC4/CapSense_Sensing.c ****                             */
2299:Generated_Source\PSoC4/CapSense_Sensing.c ****                             lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrW
2300:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2301:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2302:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2303:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /*
2304:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * Multiplying of the snsClkDivider by 2 is needed to pass the
2305:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * average PRS frequency through the argument.
2306:Generated_Source\PSoC4/CapSense_Sensing.c ****                         */
2307:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt-
2308:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrScale = 0u;
2309:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2310:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else
2311:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrSize = (uint8)CapSense_DEFAULT_MODULATION_MODE;
2312:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrScale = 0u;
2313:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2314:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->rowSnsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR
2315:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2316:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2317:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2318:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
2319:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 60


2320:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2321:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
2322:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2323:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsSetWidgetTxClkSrc
2324:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2325:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2326:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2327:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Sets a source for the Tx clock for a widget.
2328:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2329:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param wdgtIndex
2330:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2331:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param ptrWdgt
2332:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2333:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2334:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2335:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Updates snsClkSource with a source for Tx Clk for a widget.
2336:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2337:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2338:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptrWdg
2339:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2340:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
2341:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrScale;
2342:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2343:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) && \
2344:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES))
2345:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 conversionsNum;
2346:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 snsClkDivider;
2347:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2348:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2349:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)
2350:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
2351:Generated_Source\PSoC4/CapSense_Sensing.c ****                 conversionsNum = (uint32)ptrWdgt->resolution;
2352:Generated_Source\PSoC4/CapSense_Sensing.c ****                 snsClkDivider = CapSense_SsCSXGetTxClkDivider(wdgtIndex);
2353:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2354:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2355:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2356:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = (uint8)CapSense_CLK_SOURCE_DIRECT;
2357:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = 0u;
2358:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Unused function argument */
2359:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)wdgtIndex;
2360:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
2361:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2362:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrSize = (uint8)CapSense_CSX_TX_CLK_SOURCE;
2363:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale = 0u;
2364:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Unused function argument */
2365:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)wdgtIndex;
2366:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) */
2367:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2368:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR_SCALE_OFFS
2369:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2370:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2)) */
2371:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2372:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2373:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(((CapSense_ENABLE == CapSense_CSX_EN) && \
2374:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2375:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
2376:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)) ||\
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 61


2377:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSD_EN) && \
2378:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
2379:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)))
2380:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2381:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsCalcLfsrSize
2382:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2383:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2384:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2385:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is an internal function that finds a SSC polynomial size in the Auto mode.
2386:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2387:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2388:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The SSC polynomial size in the auto mode is found based on the following
2389:Generated_Source\PSoC4/CapSense_Sensing.c **** *  requirements:
2390:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - an LFSR value should be selected so that the max clock dither is limited with +/-10%.
2391:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - at least one full spread spectrum polynomial should pass during the scan time.
2392:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - the value of the number of conversions should be an integer multiple of the
2393:Generated_Source\PSoC4/CapSense_Sensing.c **** *    repeat period of the programmed LFSR_SIZE.
2394:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2395:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
2396:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2397:Generated_Source\PSoC4/CapSense_Sensing.c **** *  resolution The widget resolution.
2398:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2399:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return lfsrSize The LFSRSIZE value for the SENSE_PERIOD register.
2400:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2401:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2402:Generated_Source\PSoC4/CapSense_Sensing.c **** static uint8 CapSense_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum)
2403:Generated_Source\PSoC4/CapSense_Sensing.c **** {
2404:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 lfsrSize = 0u;
2405:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2406:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Find LFSR value */
2407:Generated_Source\PSoC4/CapSense_Sensing.c ****     if((CapSense_SNSCLK_SSC4_THRESHOLD <= snsClkDivider) &&
2408:Generated_Source\PSoC4/CapSense_Sensing.c ****        (CapSense_SNSCLK_SSC4_PERIOD <= conversionsNum) &&
2409:Generated_Source\PSoC4/CapSense_Sensing.c ****        (0uL == (conversionsNum % CapSense_SNSCLK_SSC4_PERIOD)))
2410:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2411:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC4;
2412:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2413:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC3_THRESHOLD <= snsClkDivider) &&
2414:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC3_PERIOD <= conversionsNum) &&
2415:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC3_PERIOD)))
2416:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2417:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC3;
2418:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2419:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC2_THRESHOLD <= snsClkDivider) &&
2420:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC2_PERIOD <= conversionsNum) &&
2421:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC2_PERIOD)))
2422:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2423:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC2;
2424:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2425:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC1_THRESHOLD <= snsClkDivider) &&
2426:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC1_PERIOD <= conversionsNum) &&
2427:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC1_PERIOD)))
2428:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2429:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC1;
2430:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2431:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
2432:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2433:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = (uint8)CapSense_CLK_SOURCE_DIRECT;
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 62


2434:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2435:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2436:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (lfsrSize);
2437:Generated_Source\PSoC4/CapSense_Sensing.c **** }
2438:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2439:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2440:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2441:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsCalcLfsrScale
2442:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2443:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2444:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2445:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is an internal function that calculates the LFSR scale value.
2446:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2447:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2448:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The LFSR scale value is used to increase the clock dither if the desired dither
2449:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is wider than can be achieved with the current Sense Clock Divider and current LFSR
2450:Generated_Source\PSoC4/CapSense_Sensing.c **** *  period.
2451:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2452:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This returns the LFSR scale value needed to keep the clock dither in
2453:Generated_Source\PSoC4/CapSense_Sensing.c **** *  range +/-10%.
2454:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2455:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
2456:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2457:Generated_Source\PSoC4/CapSense_Sensing.c **** *  lfsrSize The period of the LFSR sequence.
2458:Generated_Source\PSoC4/CapSense_Sensing.c **** *          For devices with CapSense_CSDV2_REF9P6UA_EN = TRUE, the
2459:Generated_Source\PSoC4/CapSense_Sensing.c **** *          mode parameters can take the following values:
2460:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2461:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC1   The length of LFSR sequence is 63 cycles.
2462:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC2   The length of LFSR sequence is 127 cycles.
2463:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC3   The length of LFSR sequence is 255 cycles.
2464:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC4   The length of LFSR sequence is 511 cycles.
2465:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2466:Generated_Source\PSoC4/CapSense_Sensing.c **** *          For devices with CapSense_CSDV2_REF9P6UA_EN = TRUE, the
2467:Generated_Source\PSoC4/CapSense_Sensing.c **** *          mode parameters can take the following values:
2468:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2469:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC1   The length of LFSR sequence is 3 cycles.
2470:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC2   The length of LFSR sequence is 7 cycles.
2471:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC3   The length of LFSR sequence is 15 cycles.
2472:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC4   The length of LFSR sequence is 31 cycles.
2473:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2474:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
2475:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the LFSR scale value needed to keep the clock dither in range +/-10%.
2476:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2477:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2478:Generated_Source\PSoC4/CapSense_Sensing.c **** static uint8 CapSense_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize)
2479:Generated_Source\PSoC4/CapSense_Sensing.c **** {
2480:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrScale;
2481:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrRange;
2482:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrDither;
2483:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2484:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Initialize the lfsrSize variable with the LFSR Range for given Lfsr Size. */
2485:Generated_Source\PSoC4/CapSense_Sensing.c ****     switch(lfsrSize)
2486:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2487:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC1:
2488:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2489:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC1_RANGE;
2490:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 63


2491:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2492:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC2:
2493:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2494:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC2_RANGE;
2495:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2496:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2497:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC3:
2498:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2499:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC3_RANGE;
2500:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2501:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2502:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC4:
2503:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2504:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC4_RANGE;
2505:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2506:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2507:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2508:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2509:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = 0u;
2510:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2511:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2512:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2513:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2514:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Calculate the LFSR Scale value that is required to keep the Clock dither
2515:Generated_Source\PSoC4/CapSense_Sensing.c ****      * as close as possible to the +/-10% limit of the used frequency.
2516:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
2517:Generated_Source\PSoC4/CapSense_Sensing.c ****     if((lfsrSize != CapSense_CLK_SOURCE_DIRECT) && (0u != lfsrRange))
2518:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2519:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calculate the LFSR Dither in percents. */
2520:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrDither  = ((lfsrRange * 100uL) / snsClkDivider);
2521:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrScale = 0uL;
2522:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2523:Generated_Source\PSoC4/CapSense_Sensing.c ****         while(lfsrDither < CapSense_LFSR_DITHER_PERCENTAGE)
2524:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2525:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale++;
2526:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrDither <<=1uL;
2527:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2528:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2529:Generated_Source\PSoC4/CapSense_Sensing.c ****         if(lfsrDither > CapSense_LFSR_DITHER_PERCENTAGE)
2530:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2531:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale--;
2532:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2533:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2534:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
2535:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2536:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrScale = 0uL;
2537:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2538:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2539:Generated_Source\PSoC4/CapSense_Sensing.c ****     return ((uint8)lfsrScale);
2540:Generated_Source\PSoC4/CapSense_Sensing.c **** }
2541:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2542:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (((CapSense_ENABLE == CapSense_CSX_EN) && \
2543:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2544:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2) && \
2545:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)) ||\
2546:Generated_Source\PSoC4/CapSense_Sensing.c ****           ((CapSense_ENABLE == CapSense_CSD_EN) && \
2547:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2) && \
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 64


2548:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))) */
2549:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2550:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2551:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
2552:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2553:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsClearCSDSensors
2554:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2555:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2556:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2557:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Resets all the CSD sensors to the non-sampling state by sequentially
2558:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  disconnecting all the sensors from the Analog MUX bus and putting them to
2559:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  an inactive state.
2560:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2561:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2562:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function goes through all the widgets and updates appropriate bits in
2563:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the IO HSIOM, PC and DR registers depending on the Inactive sensor connection
2564:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  parameter. DR register bits are set to zero when the Inactive sensor
2565:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  connection is Ground or Hi-Z.
2566:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2567:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2568:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_SsClearCSDSensors(void)
2569:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 916              		.loc 1 2569 0
 917              		.cfi_startproc
 918              		@ args = 0, pretend = 0, frame = 0
 919              		@ frame_needed = 0, uses_anonymous_args = 0
 920 0000 70B5     		push	{r4, r5, r6, lr}
 921              		.cfi_def_cfa_offset 16
 922              		.cfi_offset 4, -16
 923              		.cfi_offset 5, -12
 924              		.cfi_offset 6, -8
 925              		.cfi_offset 14, -4
 926              	.LVL80:
2570:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
2571:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 snsIndex;
2572:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2573:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
2574:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 pinIndex;
2575:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
2576:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2577:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
2578:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Declare ptr to sensor IO structure */
2579:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_FLASH_IO_STRUCT const *curDedicatedSnsIOPtr;
2580:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Pointer to Flash structure holding info of sensor to be scanned */
2581:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_FLASH_SNS_STRUCT const *curFlashSnsPtr;
2582:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
2583:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_FLASH_IO_STRUCT const *curSnsIOPtr;
2584:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2585:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
 927              		.loc 1 2585 0
 928 0002 0025     		movs	r5, #0
 929 0004 14E0     		b	.L74
 930              	.LVL81:
 931              	.L77:
2586:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2587:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_SENSE_METHOD_CSD_E ==
2588:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 65


2589:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2590:Generated_Source\PSoC4/CapSense_Sensing.c ****                 curSnsIOPtr = (CapSense_FLASH_IO_STRUCT const *)
 932              		.loc 1 2590 0
 933 0006 2C23     		movs	r3, #44
 934 0008 6B43     		muls	r3, r5
 935 000a 0B4A     		ldr	r2, .L78
 936 000c 9E58     		ldr	r6, [r3, r2]
 937              	.LVL82:
2591:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                 CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2SnsFlash;
2592:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2593:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Go through all the sensors in widget */
2594:Generated_Source\PSoC4/CapSense_Sensing.c ****                 for (snsIndex = 0u; snsIndex < (uint8)CapSense_dsFlash.wdgtArray[wdgtIndex].totalNu
 938              		.loc 1 2594 0
 939 000e 0024     		movs	r4, #0
 940 0010 06E0     		b	.L75
 941              	.LVL83:
 942              	.L76:
2595:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2596:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
2597:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Check ganged sns flag */
2598:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_GANGED_SNS_MASK == (CapSense_dsFlash.wdgtArray[wdgtIndex].stat
2599:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                  CapSense_GANGED_SNS_MASK))
2600:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2601:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /* Get sns pointer */
2602:Generated_Source\PSoC4/CapSense_Sensing.c ****                             curFlashSnsPtr = (CapSense_FLASH_SNS_STRUCT const *)
2603:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                CapSense_dsFlash.wdgtArray[wdgtIndex
2604:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                snsIndex;
2605:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2606:Generated_Source\PSoC4/CapSense_Sensing.c ****                             for(pinIndex = 0u; pinIndex < curFlashSnsPtr->numPins; pinIndex++)
2607:Generated_Source\PSoC4/CapSense_Sensing.c ****                             {
2608:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 /* Get IO pointer for dedicated pin */
2609:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 curDedicatedSnsIOPtr = &CapSense_ioList[curFlashSnsPtr->firstPinId 
2610:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2611:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 /* Disconnect dedicated pin */
2612:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 CapSense_CSDDisconnectSns(curDedicatedSnsIOPtr);
2613:Generated_Source\PSoC4/CapSense_Sensing.c ****                             }
2614:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2615:Generated_Source\PSoC4/CapSense_Sensing.c ****                         else
2616:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2617:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /* Disable sensor */
2618:Generated_Source\PSoC4/CapSense_Sensing.c ****                             CapSense_CSDDisconnectSns(&curSnsIOPtr[snsIndex]);
2619:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2620:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2621:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Disable sensor */
2622:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_CSDDisconnectSns(&curSnsIOPtr[snsIndex]);
 943              		.loc 1 2622 0 discriminator 3
 944 0012 E300     		lsls	r3, r4, #3
 945 0014 1B1B     		subs	r3, r3, r4
 946 0016 9800     		lsls	r0, r3, #2
 947 0018 3018     		adds	r0, r6, r0
 948 001a FFF7FEFF 		bl	CapSense_CSDDisconnectSns
 949              	.LVL84:
2594:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 950              		.loc 1 2594 0 discriminator 3
 951 001e 0134     		adds	r4, r4, #1
 952              	.LVL85:
 953              	.L75:
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 66


2594:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 954              		.loc 1 2594 0 is_stmt 0 discriminator 1
 955 0020 2C23     		movs	r3, #44
 956 0022 6B43     		muls	r3, r5
 957 0024 044A     		ldr	r2, .L78
 958 0026 D318     		adds	r3, r2, r3
 959 0028 1B7E     		ldrb	r3, [r3, #24]
 960 002a 9C42     		cmp	r4, r3
 961 002c F1D3     		bcc	.L76
2585:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 962              		.loc 1 2585 0 is_stmt 1 discriminator 2
 963 002e 0135     		adds	r5, r5, #1
 964              	.LVL86:
 965              	.L74:
2585:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 966              		.loc 1 2585 0 is_stmt 0 discriminator 1
 967 0030 002D     		cmp	r5, #0
 968 0032 E8D0     		beq	.L77
2623:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
2624:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2625:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2626:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2627:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 969              		.loc 1 2627 0 is_stmt 1
 970              		@ sp needed
 971              	.LVL87:
 972 0034 70BD     		pop	{r4, r5, r6, pc}
 973              	.L79:
 974 0036 C046     		.align	2
 975              	.L78:
 976 0038 00000000 		.word	CapSense_dsFlash
 977              		.cfi_endproc
 978              	.LFE22:
 979              		.size	CapSense_SsClearCSDSensors, .-CapSense_SsClearCSDSensors
 980              		.section	.text.CapSense_SsCSDGetColSnsClkDivider,"ax",%progbits
 981              		.align	2
 982              		.global	CapSense_SsCSDGetColSnsClkDivider
 983              		.code	16
 984              		.thumb_func
 985              		.type	CapSense_SsCSDGetColSnsClkDivider, %function
 986              	CapSense_SsCSDGetColSnsClkDivider:
 987              	.LFB23:
2628:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2629:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2630:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsCSDGetColSnsClkDivider
2631:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2632:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2633:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2634:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function gets the Sense Clock Divider value for one-dimension widgets
2635:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and Column Sense Clock divider value for two-dimension widgets.
2636:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2637:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2638:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function gets the Sense Clock Divider value based on the Component
2639:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  configuration. The function is applicable for one-dimension widgets and for
2640:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  two-dimension widgets.
2641:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2642:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param widgetId
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 67


2643:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2644:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2645:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
2646:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the Sense Clock Divider value for one-dimension widgets
2647:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and the Column Sense Clock divider value for two-dimension widgets.
2648:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2649:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2650:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 CapSense_SsCSDGetColSnsClkDivider(uint32 widgetId)
2651:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 988              		.loc 1 2651 0
 989              		.cfi_startproc
 990              		@ args = 0, pretend = 0, frame = 0
 991              		@ frame_needed = 0, uses_anonymous_args = 0
 992              		@ link register save eliminated.
 993              	.LVL88:
2652:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 retVal;
2653:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2654:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Get sense divider based on configuration */
2655:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE != CapSense_CSD_COMMON_SNS_CLK_EN)
2656:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2657:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2658:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
 994              		.loc 1 2658 0
 995 0000 2C23     		movs	r3, #44
 996 0002 5843     		muls	r0, r3
 997              	.LVL89:
 998 0004 024B     		ldr	r3, .L81
 999 0006 1818     		adds	r0, r3, r0
 1000 0008 4368     		ldr	r3, [r0, #4]
 1001              	.LVL90:
2659:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2660:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2661:Generated_Source\PSoC4/CapSense_Sensing.c ****             retVal = (uint32)(ptrWdgt->snsClk);
 1002              		.loc 1 2661 0
 1003 000a 5889     		ldrh	r0, [r3, #10]
 1004              	.LVL91:
2662:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2663:Generated_Source\PSoC4/CapSense_Sensing.c ****             retVal = (uint32)CapSense_dsRam.snsCsdClk;
2664:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2665:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)widgetId; /* This parameter is unused in such configurations */
2666:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2667:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2668:Generated_Source\PSoC4/CapSense_Sensing.c ****         return (retVal);
2669:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1005              		.loc 1 2669 0
 1006              		@ sp needed
 1007 000c 7047     		bx	lr
 1008              	.L82:
 1009 000e C046     		.align	2
 1010              	.L81:
 1011 0010 00000000 		.word	CapSense_dsFlash
 1012              		.cfi_endproc
 1013              	.LFE23:
 1014              		.size	CapSense_SsCSDGetColSnsClkDivider, .-CapSense_SsCSDGetColSnsClkDivider
 1015              		.section	.text.CapSense_SsCSDCalcPrsSize,"ax",%progbits
 1016              		.align	2
 1017              		.global	CapSense_SsCSDCalcPrsSize
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 68


 1018              		.code	16
 1019              		.thumb_func
 1020              		.type	CapSense_SsCSDCalcPrsSize, %function
 1021              	CapSense_SsCSDCalcPrsSize:
 1022              	.LFB24:
2670:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2671:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2672:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2673:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2674:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsCSDGetRowSnsClkDivider
2675:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2676:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2677:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2678:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function gets the Sense Clock Divider value for one-dimension widgets
2679:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  and the Column Sense Clock divider value for two-dimension widgets.
2680:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2681:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2682:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function gets the Sense Clock Divider value based on the Component
2683:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  configuration. The function is applicable for one-dimension widgets and for
2684:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  two-dimension widgets.
2685:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2686:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \param
2687:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  widgetId Specifies the ID of the widget.
2688:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2689:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \return
2690:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Returns the sense clock divider value for one-dimension widgets
2691:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  and column sense clock divider value for two-dimension widgets.
2692:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2693:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
2694:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 CapSense_SsCSDGetRowSnsClkDivider(uint32 widgetId)
2695:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2696:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 retVal;
2697:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2698:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Get sense divider based on configuration */
2699:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE != CapSense_CSD_COMMON_SNS_CLK_EN)
2700:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2701:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2702:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
2703:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2704:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2705:Generated_Source\PSoC4/CapSense_Sensing.c ****                 retVal = ptrWdgt->rowSnsClk;
2706:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2707:Generated_Source\PSoC4/CapSense_Sensing.c ****                 retVal = (uint32)CapSense_dsRam.snsCsdClk;
2708:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2709:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)widgetId; /* This parameter is unused in such configurations */
2710:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2711:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2712:Generated_Source\PSoC4/CapSense_Sensing.c ****             return (retVal);
2713:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2714:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2715:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2716:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2717:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2718:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2719:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsCSDCalcPrsSize
2720:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2721:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 69


2722:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2723:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  The function finds PRS polynomial size in the Auto mode.
2724:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2725:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2726:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  The PRS polynomial size in the Auto mode is found based on the following
2727:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  requirements:
2728:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  - at least one full spread spectrum polynomial should pass during scan time.
2729:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2730:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \param
2731:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  snsClkDivider The divider value for the sense clock.
2732:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  resolution The widget resolution.
2733:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2734:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \return prsSize PRS value for SENSE_PERIOD register.
2735:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2736:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
2737:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 CapSense_SsCSDCalcPrsSize(uint32 snsClkDivider, uint32 resolution)
2738:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1023              		.loc 1 2738 0
 1024              		.cfi_startproc
 1025              		@ args = 0, pretend = 0, frame = 0
 1026              		@ frame_needed = 0, uses_anonymous_args = 0
 1027              	.LVL92:
 1028 0000 10B5     		push	{r4, lr}
 1029              		.cfi_def_cfa_offset 8
 1030              		.cfi_offset 4, -8
 1031              		.cfi_offset 14, -4
 1032              	.LVL93:
2739:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 prsSize;
2740:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 modClkDivider = 1u;
2741:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2742:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if ((CapSense_ENABLE != CapSense_CSDV2) && \
2743:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK))
2744:Generated_Source\PSoC4/CapSense_Sensing.c ****                     modClkDivider = (uint32)CapSense_dsRam.modCsdClk;
 1033              		.loc 1 2744 0
 1034 0002 0A4B     		ldr	r3, .L87
 1035 0004 1C7F     		ldrb	r4, [r3, #28]
 1036              	.LVL94:
2745:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
2746:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2747:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((snsClkDivider * CapSense_PRS_LENGTH_12_BITS) <= (modClkDivider * ((0x00000001Lu <<
 1037              		.loc 1 2747 0
 1038 0006 0203     		lsls	r2, r0, #12
 1039 0008 121A     		subs	r2, r2, r0
 1040 000a 0123     		movs	r3, #1
 1041 000c 8B40     		lsls	r3, r3, r1
 1042 000e 013B     		subs	r3, r3, #1
 1043 0010 6343     		muls	r3, r4
 1044 0012 9A42     		cmp	r2, r3
 1045 0014 05D9     		bls	.L85
2748:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2749:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set PRS12 mode */
2750:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_PRS_12_CONFIG;
2751:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2752:Generated_Source\PSoC4/CapSense_Sensing.c ****             else if ((snsClkDivider * CapSense_PRS_LENGTH_8_BITS) <= (modClkDivider * ((0x00000001L
 1046              		.loc 1 2752 0
 1047 0016 0202     		lsls	r2, r0, #8
 1048 0018 101A     		subs	r0, r2, r0
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 70


 1049              	.LVL95:
 1050 001a 8342     		cmp	r3, r0
 1051 001c 03D3     		bcc	.L86
2753:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2754:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set PRS8 mode */
2755:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_PRS_8_CONFIG;
 1052              		.loc 1 2755 0
 1053 001e 4020     		movs	r0, #64
 1054 0020 02E0     		b	.L84
 1055              	.LVL96:
 1056              	.L85:
2750:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 1057              		.loc 1 2750 0
 1058 0022 C020     		movs	r0, #192
 1059              	.LVL97:
 1060 0024 00E0     		b	.L84
 1061              	.L86:
2756:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2757:Generated_Source\PSoC4/CapSense_Sensing.c ****             else
2758:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2759:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set Direct clock mode */
2760:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_CLK_SOURCE_DIRECT;
 1062              		.loc 1 2760 0
 1063 0026 0020     		movs	r0, #0
 1064              	.L84:
 1065              	.LVL98:
2761:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2762:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2763:Generated_Source\PSoC4/CapSense_Sensing.c ****             return (uint8)prsSize;
 1066              		.loc 1 2763 0
 1067 0028 C0B2     		uxtb	r0, r0
 1068              	.LVL99:
2764:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1069              		.loc 1 2764 0
 1070              		@ sp needed
 1071              	.LVL100:
 1072 002a 10BD     		pop	{r4, pc}
 1073              	.L88:
 1074              		.align	2
 1075              	.L87:
 1076 002c 00000000 		.word	CapSense_dsRam
 1077              		.cfi_endproc
 1078              	.LFE24:
 1079              		.size	CapSense_SsCSDCalcPrsSize, .-CapSense_SsCSDCalcPrsSize
 1080              		.section	.text.CapSense_SsSetWidgetSenseClkSrc,"ax",%progbits
 1081              		.align	2
 1082              		.code	16
 1083              		.thumb_func
 1084              		.type	CapSense_SsSetWidgetSenseClkSrc, %function
 1085              	CapSense_SsSetWidgetSenseClkSrc:
 1086              	.LFB21:
2241:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
 1087              		.loc 1 2241 0
 1088              		.cfi_startproc
 1089              		@ args = 0, pretend = 0, frame = 0
 1090              		@ frame_needed = 0, uses_anonymous_args = 0
 1091              	.LVL101:
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 71


 1092 0000 10B5     		push	{r4, lr}
 1093              		.cfi_def_cfa_offset 8
 1094              		.cfi_offset 4, -8
 1095              		.cfi_offset 14, -4
 1096 0002 0C00     		movs	r4, r1
2253:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1097              		.loc 1 2253 0
 1098 0004 FFF7FEFF 		bl	CapSense_SsCSDGetColSnsClkDivider
 1099              	.LVL102:
2273:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = 0u;
 1100              		.loc 1 2273 0
 1101 0008 4000     		lsls	r0, r0, #1
 1102              	.LVL103:
 1103 000a 2188     		ldrh	r1, [r4]
 1104 000c FFF7FEFF 		bl	CapSense_SsCSDCalcPrsSize
 1105              	.LVL104:
2282:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1106              		.loc 1 2282 0
 1107 0010 2073     		strb	r0, [r4, #12]
2317:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 1108              		.loc 1 2317 0
 1109              		@ sp needed
 1110              	.LVL105:
 1111 0012 10BD     		pop	{r4, pc}
 1112              		.cfi_endproc
 1113              	.LFE21:
 1114              		.size	CapSense_SsSetWidgetSenseClkSrc, .-CapSense_SsSetWidgetSenseClkSrc
 1115              		.section	.text.CapSense_SsInitializeSourceSenseClk,"ax",%progbits
 1116              		.align	2
 1117              		.global	CapSense_SsInitializeSourceSenseClk
 1118              		.code	16
 1119              		.thumb_func
 1120              		.type	CapSense_SsInitializeSourceSenseClk, %function
 1121              	CapSense_SsInitializeSourceSenseClk:
 1122              	.LFB20:
2188:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
 1123              		.loc 1 2188 0
 1124              		.cfi_startproc
 1125              		@ args = 0, pretend = 0, frame = 0
 1126              		@ frame_needed = 0, uses_anonymous_args = 0
 1127 0000 10B5     		push	{r4, lr}
 1128              		.cfi_def_cfa_offset 8
 1129              		.cfi_offset 4, -8
 1130              		.cfi_offset 14, -4
 1131              	.LVL106:
2192:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1132              		.loc 1 2192 0
 1133 0002 0024     		movs	r4, #0
 1134 0004 08E0     		b	.L91
 1135              	.LVL107:
 1136              	.L92:
2194:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1137              		.loc 1 2194 0
 1138 0006 2C23     		movs	r3, #44
 1139 0008 6343     		muls	r3, r4
 1140 000a 054A     		ldr	r2, .L93
 1141 000c D318     		adds	r3, r2, r3
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 72


 1142 000e 5968     		ldr	r1, [r3, #4]
 1143              	.LVL108:
2200:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 1144              		.loc 1 2200 0
 1145 0010 2000     		movs	r0, r4
 1146 0012 FFF7FEFF 		bl	CapSense_SsSetWidgetSenseClkSrc
 1147              	.LVL109:
2192:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1148              		.loc 1 2192 0
 1149 0016 0134     		adds	r4, r4, #1
 1150              	.LVL110:
 1151              	.L91:
2192:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1152              		.loc 1 2192 0 is_stmt 0 discriminator 1
 1153 0018 002C     		cmp	r4, #0
 1154 001a F4D0     		beq	.L92
2215:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) || \
 1155              		.loc 1 2215 0 is_stmt 1
 1156              		@ sp needed
 1157              	.LVL111:
 1158 001c 10BD     		pop	{r4, pc}
 1159              	.L94:
 1160 001e C046     		.align	2
 1161              	.L93:
 1162 0020 00000000 		.word	CapSense_dsFlash
 1163              		.cfi_endproc
 1164              	.LFE20:
 1165              		.size	CapSense_SsInitializeSourceSenseClk, .-CapSense_SsInitializeSourceSenseClk
 1166              		.section	.text.CapSense_SsInitialize,"ax",%progbits
 1167              		.align	2
 1168              		.global	CapSense_SsInitialize
 1169              		.code	16
 1170              		.thumb_func
 1171              		.type	CapSense_SsInitialize, %function
 1172              	CapSense_SsInitialize:
 1173              	.LFB6:
 517:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus initStatus;
 1174              		.loc 1 517 0
 1175              		.cfi_startproc
 1176              		@ args = 0, pretend = 0, frame = 0
 1177              		@ frame_needed = 0, uses_anonymous_args = 0
 1178 0000 10B5     		push	{r4, lr}
 1179              		.cfi_def_cfa_offset 8
 1180              		.cfi_offset 4, -8
 1181              		.cfi_offset 14, -4
 1182              	.LVL112:
 551:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 1183              		.loc 1 551 0
 1184 0002 FFF7FEFF 		bl	CapSense_SsTrimIdacs
 1185              	.LVL113:
 556:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) ||\
 1186              		.loc 1 556 0
 1187 0006 FFF7FEFF 		bl	CapSense_SsInitializeSourceSenseClk
 1188              	.LVL114:
 561:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1189              		.loc 1 561 0
 1190 000a FFF7FEFF 		bl	CapSense_SsSetIOsInDefaultState
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 73


 1191              	.LVL115:
 568:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_CSD_E);
 1192              		.loc 1 568 0
 1193 000e FFF7FEFF 		bl	CapSense_SsCSDInitialize
 1194              	.LVL116:
 569:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSX_EN)
 1195              		.loc 1 569 0
 1196 0012 0120     		movs	r0, #1
 1197 0014 FFF7FEFF 		bl	CapSense_SsSwitchSensingMode
 1198              	.LVL117:
 584:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1199              		.loc 1 584 0
 1200 0018 0020     		movs	r0, #0
 1201              		@ sp needed
 1202 001a 10BD     		pop	{r4, pc}
 1203              		.cfi_endproc
 1204              	.LFE6:
 1205              		.size	CapSense_SsInitialize, .-CapSense_SsInitialize
 1206              		.comm	CapSense_curSnsIOPtr,4,4
 1207              		.comm	CapSense_curRamSnsPtr,4,4
 1208              		.global	CapSense_requestScanAllWidget
 1209              		.global	CapSense_sensorIndex
 1210              		.global	CapSense_widgetIndex
 1211              		.global	CapSense_scanFreqIndex
 1212              		.global	CapSense_currentSenseMethod
 1213              		.section	.rodata
 1214              		.type	CapSense_scanFreqIndex, %object
 1215              		.size	CapSense_scanFreqIndex, 1
 1216              	CapSense_scanFreqIndex:
 1217 0000 00       		.space	1
 1218              		.bss
 1219              		.set	.LANCHOR0,. + 0
 1220              		.type	CapSense_currentSenseMethod, %object
 1221              		.size	CapSense_currentSenseMethod, 1
 1222              	CapSense_currentSenseMethod:
 1223 0000 00       		.space	1
 1224              		.type	CapSense_requestScanAllWidget, %object
 1225              		.size	CapSense_requestScanAllWidget, 1
 1226              	CapSense_requestScanAllWidget:
 1227 0001 00       		.space	1
 1228              		.type	CapSense_sensorIndex, %object
 1229              		.size	CapSense_sensorIndex, 1
 1230              	CapSense_sensorIndex:
 1231 0002 00       		.space	1
 1232              		.type	CapSense_widgetIndex, %object
 1233              		.size	CapSense_widgetIndex, 1
 1234              	CapSense_widgetIndex:
 1235 0003 00       		.space	1
 1236              		.text
 1237              	.Letext0:
 1238              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 1239              		.file 3 "Generated_Source\\PSoC4\\CapSense_Configuration.h"
 1240              		.file 4 "Generated_Source\\PSoC4\\CapSense_Structure.h"
 1241              		.file 5 "Generated_Source\\PSoC4\\CapSense_SensingCSD_LL.h"
 1242              		.file 6 "Generated_Source\\PSoC4/CyLib.h"
 1243              		.file 7 "Generated_Source\\PSoC4\\CapSense_ISR.h"
 1244              		.section	.debug_info,"",%progbits
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 74


 1245              	.Ldebug_info0:
 1246 0000 780D0000 		.4byte	0xd78
 1247 0004 0400     		.2byte	0x4
 1248 0006 00000000 		.4byte	.Ldebug_abbrev0
 1249 000a 04       		.byte	0x4
 1250 000b 01       		.uleb128 0x1
 1251 000c 9A020000 		.4byte	.LASF163
 1252 0010 0C       		.byte	0xc
 1253 0011 5B070000 		.4byte	.LASF164
 1254 0015 AF000000 		.4byte	.LASF165
 1255 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1256 001d 00000000 		.4byte	0
 1257 0021 00000000 		.4byte	.Ldebug_line0
 1258 0025 02       		.uleb128 0x2
 1259 0026 01       		.byte	0x1
 1260 0027 06       		.byte	0x6
 1261 0028 D2090000 		.4byte	.LASF0
 1262 002c 02       		.uleb128 0x2
 1263 002d 01       		.byte	0x1
 1264 002e 08       		.byte	0x8
 1265 002f A3080000 		.4byte	.LASF1
 1266 0033 02       		.uleb128 0x2
 1267 0034 02       		.byte	0x2
 1268 0035 05       		.byte	0x5
 1269 0036 92060000 		.4byte	.LASF2
 1270 003a 02       		.uleb128 0x2
 1271 003b 02       		.byte	0x2
 1272 003c 07       		.byte	0x7
 1273 003d FA090000 		.4byte	.LASF3
 1274 0041 02       		.uleb128 0x2
 1275 0042 04       		.byte	0x4
 1276 0043 05       		.byte	0x5
 1277 0044 CA060000 		.4byte	.LASF4
 1278 0048 02       		.uleb128 0x2
 1279 0049 04       		.byte	0x4
 1280 004a 07       		.byte	0x7
 1281 004b EC070000 		.4byte	.LASF5
 1282 004f 02       		.uleb128 0x2
 1283 0050 08       		.byte	0x8
 1284 0051 05       		.byte	0x5
 1285 0052 8B040000 		.4byte	.LASF6
 1286 0056 02       		.uleb128 0x2
 1287 0057 08       		.byte	0x8
 1288 0058 07       		.byte	0x7
 1289 0059 33020000 		.4byte	.LASF7
 1290 005d 03       		.uleb128 0x3
 1291 005e 04       		.byte	0x4
 1292 005f 05       		.byte	0x5
 1293 0060 696E7400 		.ascii	"int\000"
 1294 0064 02       		.uleb128 0x2
 1295 0065 04       		.byte	0x4
 1296 0066 07       		.byte	0x7
 1297 0067 FE000000 		.4byte	.LASF8
 1298 006b 04       		.uleb128 0x4
 1299 006c 540A0000 		.4byte	.LASF9
 1300 0070 02       		.byte	0x2
 1301 0071 E601     		.2byte	0x1e6
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 75


 1302 0073 2C000000 		.4byte	0x2c
 1303 0077 04       		.uleb128 0x4
 1304 0078 DA030000 		.4byte	.LASF10
 1305 007c 02       		.byte	0x2
 1306 007d E701     		.2byte	0x1e7
 1307 007f 3A000000 		.4byte	0x3a
 1308 0083 04       		.uleb128 0x4
 1309 0084 84050000 		.4byte	.LASF11
 1310 0088 02       		.byte	0x2
 1311 0089 E801     		.2byte	0x1e8
 1312 008b 48000000 		.4byte	0x48
 1313 008f 02       		.uleb128 0x2
 1314 0090 04       		.byte	0x4
 1315 0091 04       		.byte	0x4
 1316 0092 EC010000 		.4byte	.LASF12
 1317 0096 02       		.uleb128 0x2
 1318 0097 08       		.byte	0x8
 1319 0098 04       		.byte	0x4
 1320 0099 5A0A0000 		.4byte	.LASF13
 1321 009d 02       		.uleb128 0x2
 1322 009e 01       		.byte	0x1
 1323 009f 08       		.byte	0x8
 1324 00a0 B4030000 		.4byte	.LASF14
 1325 00a4 04       		.uleb128 0x4
 1326 00a5 9A080000 		.4byte	.LASF15
 1327 00a9 02       		.byte	0x2
 1328 00aa 8802     		.2byte	0x288
 1329 00ac 48000000 		.4byte	0x48
 1330 00b0 04       		.uleb128 0x4
 1331 00b1 42010000 		.4byte	.LASF16
 1332 00b5 02       		.byte	0x2
 1333 00b6 9002     		.2byte	0x290
 1334 00b8 BC000000 		.4byte	0xbc
 1335 00bc 05       		.uleb128 0x5
 1336 00bd 6B000000 		.4byte	0x6b
 1337 00c1 04       		.uleb128 0x4
 1338 00c2 0C060000 		.4byte	.LASF17
 1339 00c6 02       		.byte	0x2
 1340 00c7 9202     		.2byte	0x292
 1341 00c9 CD000000 		.4byte	0xcd
 1342 00cd 05       		.uleb128 0x5
 1343 00ce 83000000 		.4byte	0x83
 1344 00d2 04       		.uleb128 0x4
 1345 00d3 52050000 		.4byte	.LASF18
 1346 00d7 02       		.byte	0x2
 1347 00d8 A202     		.2byte	0x2a2
 1348 00da DE000000 		.4byte	0xde
 1349 00de 06       		.uleb128 0x6
 1350 00df 04       		.byte	0x4
 1351 00e0 E4000000 		.4byte	0xe4
 1352 00e4 07       		.uleb128 0x7
 1353 00e5 04       		.uleb128 0x4
 1354 00e6 EF080000 		.4byte	.LASF19
 1355 00ea 03       		.byte	0x3
 1356 00eb 0101     		.2byte	0x101
 1357 00ed 77000000 		.4byte	0x77
 1358 00f1 04       		.uleb128 0x4
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 76


 1359 00f2 29040000 		.4byte	.LASF20
 1360 00f6 03       		.byte	0x3
 1361 00f7 0501     		.2byte	0x105
 1362 00f9 6B000000 		.4byte	0x6b
 1363 00fd 08       		.uleb128 0x8
 1364 00fe 01       		.byte	0x1
 1365 00ff 2C000000 		.4byte	0x2c
 1366 0103 04       		.byte	0x4
 1367 0104 6F       		.byte	0x6f
 1368 0105 28010000 		.4byte	0x128
 1369 0109 09       		.uleb128 0x9
 1370 010a 9A000000 		.4byte	.LASF21
 1371 010e 00       		.byte	0
 1372 010f 09       		.uleb128 0x9
 1373 0110 A3070000 		.4byte	.LASF22
 1374 0114 01       		.byte	0x1
 1375 0115 09       		.uleb128 0x9
 1376 0116 EC060000 		.4byte	.LASF23
 1377 011a 02       		.byte	0x2
 1378 011b 09       		.uleb128 0x9
 1379 011c 18090000 		.4byte	.LASF24
 1380 0120 03       		.byte	0x3
 1381 0121 09       		.uleb128 0x9
 1382 0122 E4050000 		.4byte	.LASF25
 1383 0126 04       		.byte	0x4
 1384 0127 00       		.byte	0
 1385 0128 0A       		.uleb128 0xa
 1386 0129 62040000 		.4byte	.LASF26
 1387 012d 04       		.byte	0x4
 1388 012e 75       		.byte	0x75
 1389 012f FD000000 		.4byte	0xfd
 1390 0133 0B       		.uleb128 0xb
 1391 0134 0E       		.byte	0xe
 1392 0135 04       		.byte	0x4
 1393 0136 8D       		.byte	0x8d
 1394 0137 B4010000 		.4byte	0x1b4
 1395 013b 0C       		.uleb128 0xc
 1396 013c FE030000 		.4byte	.LASF27
 1397 0140 04       		.byte	0x4
 1398 0141 92       		.byte	0x92
 1399 0142 77000000 		.4byte	0x77
 1400 0146 00       		.byte	0
 1401 0147 0C       		.uleb128 0xc
 1402 0148 7A080000 		.4byte	.LASF28
 1403 014c 04       		.byte	0x4
 1404 014d 97       		.byte	0x97
 1405 014e E5000000 		.4byte	0xe5
 1406 0152 02       		.byte	0x2
 1407 0153 0C       		.uleb128 0xc
 1408 0154 AC030000 		.4byte	.LASF29
 1409 0158 04       		.byte	0x4
 1410 0159 9C       		.byte	0x9c
 1411 015a 6B000000 		.4byte	0x6b
 1412 015e 04       		.byte	0x4
 1413 015f 0C       		.uleb128 0xc
 1414 0160 3E050000 		.4byte	.LASF30
 1415 0164 04       		.byte	0x4
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 77


 1416 0165 A1       		.byte	0xa1
 1417 0166 6B000000 		.4byte	0x6b
 1418 016a 05       		.byte	0x5
 1419 016b 0C       		.uleb128 0xc
 1420 016c 71030000 		.4byte	.LASF31
 1421 0170 04       		.byte	0x4
 1422 0171 A7       		.byte	0xa7
 1423 0172 6B000000 		.4byte	0x6b
 1424 0176 06       		.byte	0x6
 1425 0177 0C       		.uleb128 0xc
 1426 0178 BA040000 		.4byte	.LASF32
 1427 017c 04       		.byte	0x4
 1428 017d AD       		.byte	0xad
 1429 017e 6B000000 		.4byte	0x6b
 1430 0182 07       		.byte	0x7
 1431 0183 0C       		.uleb128 0xc
 1432 0184 95030000 		.4byte	.LASF33
 1433 0188 04       		.byte	0x4
 1434 0189 B4       		.byte	0xb4
 1435 018a F1000000 		.4byte	0xf1
 1436 018e 08       		.byte	0x8
 1437 018f 0C       		.uleb128 0xc
 1438 0190 0D080000 		.4byte	.LASF34
 1439 0194 04       		.byte	0x4
 1440 0195 BB       		.byte	0xbb
 1441 0196 B4010000 		.4byte	0x1b4
 1442 019a 09       		.byte	0x9
 1443 019b 0C       		.uleb128 0xc
 1444 019c 81090000 		.4byte	.LASF35
 1445 01a0 04       		.byte	0x4
 1446 01a1 C3       		.byte	0xc3
 1447 01a2 77000000 		.4byte	0x77
 1448 01a6 0A       		.byte	0xa
 1449 01a7 0C       		.uleb128 0xc
 1450 01a8 43060000 		.4byte	.LASF36
 1451 01ac 04       		.byte	0x4
 1452 01ad C8       		.byte	0xc8
 1453 01ae 6B000000 		.4byte	0x6b
 1454 01b2 0C       		.byte	0xc
 1455 01b3 00       		.byte	0
 1456 01b4 0D       		.uleb128 0xd
 1457 01b5 6B000000 		.4byte	0x6b
 1458 01b9 C4010000 		.4byte	0x1c4
 1459 01bd 0E       		.uleb128 0xe
 1460 01be C4010000 		.4byte	0x1c4
 1461 01c2 00       		.byte	0
 1462 01c3 00       		.byte	0
 1463 01c4 02       		.uleb128 0x2
 1464 01c5 04       		.byte	0x4
 1465 01c6 07       		.byte	0x7
 1466 01c7 DB070000 		.4byte	.LASF37
 1467 01cb 0A       		.uleb128 0xa
 1468 01cc 5F050000 		.4byte	.LASF38
 1469 01d0 04       		.byte	0x4
 1470 01d1 C9       		.byte	0xc9
 1471 01d2 33010000 		.4byte	0x133
 1472 01d6 0B       		.uleb128 0xb
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 78


 1473 01d7 10       		.byte	0x10
 1474 01d8 04       		.byte	0x4
 1475 01d9 CE       		.byte	0xce
 1476 01da 66020000 		.4byte	0x266
 1477 01de 0C       		.uleb128 0xc
 1478 01df FE030000 		.4byte	.LASF27
 1479 01e3 04       		.byte	0x4
 1480 01e4 D3       		.byte	0xd3
 1481 01e5 77000000 		.4byte	0x77
 1482 01e9 00       		.byte	0
 1483 01ea 0C       		.uleb128 0xc
 1484 01eb 7A080000 		.4byte	.LASF28
 1485 01ef 04       		.byte	0x4
 1486 01f0 D8       		.byte	0xd8
 1487 01f1 E5000000 		.4byte	0xe5
 1488 01f5 02       		.byte	0x2
 1489 01f6 0C       		.uleb128 0xc
 1490 01f7 AC030000 		.4byte	.LASF29
 1491 01fb 04       		.byte	0x4
 1492 01fc DD       		.byte	0xdd
 1493 01fd 6B000000 		.4byte	0x6b
 1494 0201 04       		.byte	0x4
 1495 0202 0C       		.uleb128 0xc
 1496 0203 3E050000 		.4byte	.LASF30
 1497 0207 04       		.byte	0x4
 1498 0208 E2       		.byte	0xe2
 1499 0209 6B000000 		.4byte	0x6b
 1500 020d 05       		.byte	0x5
 1501 020e 0C       		.uleb128 0xc
 1502 020f 71030000 		.4byte	.LASF31
 1503 0213 04       		.byte	0x4
 1504 0214 E8       		.byte	0xe8
 1505 0215 6B000000 		.4byte	0x6b
 1506 0219 06       		.byte	0x6
 1507 021a 0C       		.uleb128 0xc
 1508 021b BA040000 		.4byte	.LASF32
 1509 021f 04       		.byte	0x4
 1510 0220 EE       		.byte	0xee
 1511 0221 6B000000 		.4byte	0x6b
 1512 0225 07       		.byte	0x7
 1513 0226 0C       		.uleb128 0xc
 1514 0227 95030000 		.4byte	.LASF33
 1515 022b 04       		.byte	0x4
 1516 022c F5       		.byte	0xf5
 1517 022d F1000000 		.4byte	0xf1
 1518 0231 08       		.byte	0x8
 1519 0232 0C       		.uleb128 0xc
 1520 0233 0D080000 		.4byte	.LASF34
 1521 0237 04       		.byte	0x4
 1522 0238 FC       		.byte	0xfc
 1523 0239 B4010000 		.4byte	0x1b4
 1524 023d 09       		.byte	0x9
 1525 023e 0F       		.uleb128 0xf
 1526 023f 81090000 		.4byte	.LASF35
 1527 0243 04       		.byte	0x4
 1528 0244 0401     		.2byte	0x104
 1529 0246 77000000 		.4byte	0x77
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 79


 1530 024a 0A       		.byte	0xa
 1531 024b 0F       		.uleb128 0xf
 1532 024c 43060000 		.4byte	.LASF36
 1533 0250 04       		.byte	0x4
 1534 0251 0901     		.2byte	0x109
 1535 0253 6B000000 		.4byte	0x6b
 1536 0257 0C       		.byte	0xc
 1537 0258 0F       		.uleb128 0xf
 1538 0259 020B0000 		.4byte	.LASF39
 1539 025d 04       		.byte	0x4
 1540 025e 0E01     		.2byte	0x10e
 1541 0260 66020000 		.4byte	0x266
 1542 0264 0E       		.byte	0xe
 1543 0265 00       		.byte	0
 1544 0266 0D       		.uleb128 0xd
 1545 0267 77000000 		.4byte	0x77
 1546 026b 76020000 		.4byte	0x276
 1547 026f 0E       		.uleb128 0xe
 1548 0270 C4010000 		.4byte	0x1c4
 1549 0274 00       		.byte	0
 1550 0275 00       		.byte	0
 1551 0276 04       		.uleb128 0x4
 1552 0277 85070000 		.4byte	.LASF40
 1553 027b 04       		.byte	0x4
 1554 027c 0F01     		.2byte	0x10f
 1555 027e D6010000 		.4byte	0x1d6
 1556 0282 10       		.uleb128 0x10
 1557 0283 10       		.byte	0x10
 1558 0284 04       		.byte	0x4
 1559 0285 1501     		.2byte	0x115
 1560 0287 99020000 		.4byte	0x299
 1561 028b 0F       		.uleb128 0xf
 1562 028c 3B090000 		.4byte	.LASF41
 1563 0290 04       		.byte	0x4
 1564 0291 1A01     		.2byte	0x11a
 1565 0293 76020000 		.4byte	0x276
 1566 0297 00       		.byte	0
 1567 0298 00       		.byte	0
 1568 0299 04       		.uleb128 0x4
 1569 029a 87010000 		.4byte	.LASF42
 1570 029e 04       		.byte	0x4
 1571 029f 1B01     		.2byte	0x11b
 1572 02a1 82020000 		.4byte	0x282
 1573 02a5 10       		.uleb128 0x10
 1574 02a6 0A       		.byte	0xa
 1575 02a7 04       		.byte	0x4
 1576 02a8 2101     		.2byte	0x121
 1577 02aa F0020000 		.4byte	0x2f0
 1578 02ae 11       		.uleb128 0x11
 1579 02af 72617700 		.ascii	"raw\000"
 1580 02b3 04       		.byte	0x4
 1581 02b4 2601     		.2byte	0x126
 1582 02b6 66020000 		.4byte	0x266
 1583 02ba 00       		.byte	0
 1584 02bb 0F       		.uleb128 0xf
 1585 02bc F5090000 		.4byte	.LASF43
 1586 02c0 04       		.byte	0x4
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 80


 1587 02c1 2B01     		.2byte	0x12b
 1588 02c3 66020000 		.4byte	0x266
 1589 02c7 02       		.byte	0x2
 1590 02c8 0F       		.uleb128 0xf
 1591 02c9 83080000 		.4byte	.LASF44
 1592 02cd 04       		.byte	0x4
 1593 02ce 3101     		.2byte	0x131
 1594 02d0 B4010000 		.4byte	0x1b4
 1595 02d4 04       		.byte	0x4
 1596 02d5 0F       		.uleb128 0xf
 1597 02d6 DE060000 		.4byte	.LASF45
 1598 02da 04       		.byte	0x4
 1599 02db 3601     		.2byte	0x136
 1600 02dd E5000000 		.4byte	0xe5
 1601 02e1 06       		.byte	0x6
 1602 02e2 0F       		.uleb128 0xf
 1603 02e3 610A0000 		.4byte	.LASF46
 1604 02e7 04       		.byte	0x4
 1605 02e8 3B01     		.2byte	0x13b
 1606 02ea F0020000 		.4byte	0x2f0
 1607 02ee 08       		.byte	0x8
 1608 02ef 00       		.byte	0
 1609 02f0 0D       		.uleb128 0xd
 1610 02f1 F1000000 		.4byte	0xf1
 1611 02f5 00030000 		.4byte	0x300
 1612 02f9 0E       		.uleb128 0xe
 1613 02fa C4010000 		.4byte	0x1c4
 1614 02fe 00       		.byte	0
 1615 02ff 00       		.byte	0
 1616 0300 04       		.uleb128 0x4
 1617 0301 32030000 		.4byte	.LASF47
 1618 0305 04       		.byte	0x4
 1619 0306 3C01     		.2byte	0x13c
 1620 0308 A5020000 		.4byte	0x2a5
 1621 030c 10       		.uleb128 0x10
 1622 030d 32       		.byte	0x32
 1623 030e 04       		.byte	0x4
 1624 030f 4201     		.2byte	0x142
 1625 0311 23030000 		.4byte	0x323
 1626 0315 0F       		.uleb128 0xf
 1627 0316 3B090000 		.4byte	.LASF41
 1628 031a 04       		.byte	0x4
 1629 031b 4701     		.2byte	0x147
 1630 031d 23030000 		.4byte	0x323
 1631 0321 00       		.byte	0
 1632 0322 00       		.byte	0
 1633 0323 0D       		.uleb128 0xd
 1634 0324 00030000 		.4byte	0x300
 1635 0328 33030000 		.4byte	0x333
 1636 032c 0E       		.uleb128 0xe
 1637 032d C4010000 		.4byte	0x1c4
 1638 0331 04       		.byte	0x4
 1639 0332 00       		.byte	0
 1640 0333 04       		.uleb128 0x4
 1641 0334 0B0B0000 		.4byte	.LASF48
 1642 0338 04       		.byte	0x4
 1643 0339 4801     		.2byte	0x148
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 81


 1644 033b 0C030000 		.4byte	0x30c
 1645 033f 10       		.uleb128 0x10
 1646 0340 68       		.byte	0x68
 1647 0341 04       		.byte	0x4
 1648 0342 4E01     		.2byte	0x14e
 1649 0344 26040000 		.4byte	0x426
 1650 0348 0F       		.uleb128 0xf
 1651 0349 25060000 		.4byte	.LASF49
 1652 034d 04       		.byte	0x4
 1653 034e 5501     		.2byte	0x155
 1654 0350 77000000 		.4byte	0x77
 1655 0354 00       		.byte	0
 1656 0355 0F       		.uleb128 0xf
 1657 0356 A10A0000 		.4byte	.LASF50
 1658 035a 04       		.byte	0x4
 1659 035b 5A01     		.2byte	0x15a
 1660 035d 77000000 		.4byte	0x77
 1661 0361 02       		.byte	0x2
 1662 0362 0F       		.uleb128 0xf
 1663 0363 17010000 		.4byte	.LASF51
 1664 0367 04       		.byte	0x4
 1665 0368 5F01     		.2byte	0x15f
 1666 036a 77000000 		.4byte	0x77
 1667 036e 04       		.byte	0x4
 1668 036f 0F       		.uleb128 0xf
 1669 0370 E3060000 		.4byte	.LASF52
 1670 0374 04       		.byte	0x4
 1671 0375 6501     		.2byte	0x165
 1672 0377 77000000 		.4byte	0x77
 1673 037b 06       		.byte	0x6
 1674 037c 0F       		.uleb128 0xf
 1675 037d 0B010000 		.4byte	.LASF53
 1676 0381 04       		.byte	0x4
 1677 0382 6A01     		.2byte	0x16a
 1678 0384 77000000 		.4byte	0x77
 1679 0388 08       		.byte	0x8
 1680 0389 0F       		.uleb128 0xf
 1681 038a 09040000 		.4byte	.LASF54
 1682 038e 04       		.byte	0x4
 1683 038f 6F01     		.2byte	0x16f
 1684 0391 CD000000 		.4byte	0xcd
 1685 0395 0C       		.byte	0xc
 1686 0396 0F       		.uleb128 0xf
 1687 0397 D3060000 		.4byte	.LASF55
 1688 039b 04       		.byte	0x4
 1689 039c 7501     		.2byte	0x175
 1690 039e 26040000 		.4byte	0x426
 1691 03a2 10       		.byte	0x10
 1692 03a3 0F       		.uleb128 0xf
 1693 03a4 50070000 		.4byte	.LASF56
 1694 03a8 04       		.byte	0x4
 1695 03a9 7C01     		.2byte	0x17c
 1696 03ab 26040000 		.4byte	0x426
 1697 03af 14       		.byte	0x14
 1698 03b0 0F       		.uleb128 0xf
 1699 03b1 39060000 		.4byte	.LASF57
 1700 03b5 04       		.byte	0x4
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 82


 1701 03b6 8C01     		.2byte	0x18c
 1702 03b8 B4010000 		.4byte	0x1b4
 1703 03bc 18       		.byte	0x18
 1704 03bd 0F       		.uleb128 0xf
 1705 03be 47050000 		.4byte	.LASF58
 1706 03c2 04       		.byte	0x4
 1707 03c3 9201     		.2byte	0x192
 1708 03c5 77000000 		.4byte	0x77
 1709 03c9 1A       		.byte	0x1a
 1710 03ca 0F       		.uleb128 0xf
 1711 03cb 28030000 		.4byte	.LASF59
 1712 03cf 04       		.byte	0x4
 1713 03d0 9701     		.2byte	0x197
 1714 03d2 6B000000 		.4byte	0x6b
 1715 03d6 1C       		.byte	0x1c
 1716 03d7 0F       		.uleb128 0xf
 1717 03d8 D5040000 		.4byte	.LASF60
 1718 03dc 04       		.byte	0x4
 1719 03dd 9C01     		.2byte	0x19c
 1720 03df 99020000 		.4byte	0x299
 1721 03e3 1E       		.byte	0x1e
 1722 03e4 0F       		.uleb128 0xf
 1723 03e5 2B020000 		.4byte	.LASF61
 1724 03e9 04       		.byte	0x4
 1725 03ea A101     		.2byte	0x1a1
 1726 03ec 33030000 		.4byte	0x333
 1727 03f0 2E       		.byte	0x2e
 1728 03f1 0F       		.uleb128 0xf
 1729 03f2 8A000000 		.4byte	.LASF62
 1730 03f6 04       		.byte	0x4
 1731 03f7 A601     		.2byte	0x1a6
 1732 03f9 6B000000 		.4byte	0x6b
 1733 03fd 60       		.byte	0x60
 1734 03fe 0F       		.uleb128 0xf
 1735 03ff 78020000 		.4byte	.LASF63
 1736 0403 04       		.byte	0x4
 1737 0404 AB01     		.2byte	0x1ab
 1738 0406 6B000000 		.4byte	0x6b
 1739 040a 61       		.byte	0x61
 1740 040b 0F       		.uleb128 0xf
 1741 040c 12060000 		.4byte	.LASF64
 1742 0410 04       		.byte	0x4
 1743 0411 B001     		.2byte	0x1b0
 1744 0413 77000000 		.4byte	0x77
 1745 0417 62       		.byte	0x62
 1746 0418 0F       		.uleb128 0xf
 1747 0419 2E050000 		.4byte	.LASF65
 1748 041d 04       		.byte	0x4
 1749 041e B501     		.2byte	0x1b5
 1750 0420 66020000 		.4byte	0x266
 1751 0424 64       		.byte	0x64
 1752 0425 00       		.byte	0
 1753 0426 0D       		.uleb128 0xd
 1754 0427 83000000 		.4byte	0x83
 1755 042b 36040000 		.4byte	0x436
 1756 042f 0E       		.uleb128 0xe
 1757 0430 C4010000 		.4byte	0x1c4
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 83


 1758 0434 00       		.byte	0
 1759 0435 00       		.byte	0
 1760 0436 04       		.uleb128 0x4
 1761 0437 9C060000 		.4byte	.LASF66
 1762 043b 04       		.byte	0x4
 1763 043c B601     		.2byte	0x1b6
 1764 043e 3F030000 		.4byte	0x33f
 1765 0442 10       		.uleb128 0x10
 1766 0443 1C       		.byte	0x1c
 1767 0444 04       		.byte	0x4
 1768 0445 BC01     		.2byte	0x1bc
 1769 0447 C1040000 		.4byte	0x4c1
 1770 044b 0F       		.uleb128 0xf
 1771 044c 7B050000 		.4byte	.LASF67
 1772 0450 04       		.byte	0x4
 1773 0451 C101     		.2byte	0x1c1
 1774 0453 C1040000 		.4byte	0x4c1
 1775 0457 00       		.byte	0
 1776 0458 0F       		.uleb128 0xf
 1777 0459 85040000 		.4byte	.LASF68
 1778 045d 04       		.byte	0x4
 1779 045e C601     		.2byte	0x1c6
 1780 0460 C1040000 		.4byte	0x4c1
 1781 0464 04       		.byte	0x4
 1782 0465 0F       		.uleb128 0xf
 1783 0466 64030000 		.4byte	.LASF69
 1784 046a 04       		.byte	0x4
 1785 046b CB01     		.2byte	0x1cb
 1786 046d C1040000 		.4byte	0x4c1
 1787 0471 08       		.byte	0x8
 1788 0472 0F       		.uleb128 0xf
 1789 0473 08070000 		.4byte	.LASF70
 1790 0477 04       		.byte	0x4
 1791 0478 D001     		.2byte	0x1d0
 1792 047a C1040000 		.4byte	0x4c1
 1793 047e 0C       		.byte	0xc
 1794 047f 0F       		.uleb128 0xf
 1795 0480 6B090000 		.4byte	.LASF71
 1796 0484 04       		.byte	0x4
 1797 0485 D501     		.2byte	0x1d5
 1798 0487 83000000 		.4byte	0x83
 1799 048b 10       		.byte	0x10
 1800 048c 0F       		.uleb128 0xf
 1801 048d B0050000 		.4byte	.LASF72
 1802 0491 04       		.byte	0x4
 1803 0492 DA01     		.2byte	0x1da
 1804 0494 83000000 		.4byte	0x83
 1805 0498 14       		.byte	0x14
 1806 0499 0F       		.uleb128 0xf
 1807 049a CF030000 		.4byte	.LASF73
 1808 049e 04       		.byte	0x4
 1809 049f DF01     		.2byte	0x1df
 1810 04a1 6B000000 		.4byte	0x6b
 1811 04a5 18       		.byte	0x18
 1812 04a6 0F       		.uleb128 0xf
 1813 04a7 E4070000 		.4byte	.LASF74
 1814 04ab 04       		.byte	0x4
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 84


 1815 04ac E401     		.2byte	0x1e4
 1816 04ae 6B000000 		.4byte	0x6b
 1817 04b2 19       		.byte	0x19
 1818 04b3 0F       		.uleb128 0xf
 1819 04b4 F2010000 		.4byte	.LASF75
 1820 04b8 04       		.byte	0x4
 1821 04b9 E901     		.2byte	0x1e9
 1822 04bb 6B000000 		.4byte	0x6b
 1823 04bf 1A       		.byte	0x1a
 1824 04c0 00       		.byte	0
 1825 04c1 06       		.uleb128 0x6
 1826 04c2 04       		.byte	0x4
 1827 04c3 C1000000 		.4byte	0xc1
 1828 04c7 04       		.uleb128 0x4
 1829 04c8 5F020000 		.4byte	.LASF76
 1830 04cc 04       		.byte	0x4
 1831 04cd EA01     		.2byte	0x1ea
 1832 04cf 42040000 		.4byte	0x442
 1833 04d3 10       		.uleb128 0x10
 1834 04d4 2C       		.byte	0x2c
 1835 04d5 04       		.byte	0x4
 1836 04d6 1D02     		.2byte	0x21d
 1837 04d8 86050000 		.4byte	0x586
 1838 04dc 0F       		.uleb128 0xf
 1839 04dd 3B0A0000 		.4byte	.LASF77
 1840 04e1 04       		.byte	0x4
 1841 04e2 2602     		.2byte	0x226
 1842 04e4 86050000 		.4byte	0x586
 1843 04e8 00       		.byte	0
 1844 04e9 0F       		.uleb128 0xf
 1845 04ea E3080000 		.4byte	.LASF78
 1846 04ee 04       		.byte	0x4
 1847 04ef 2D02     		.2byte	0x22d
 1848 04f1 8D050000 		.4byte	0x58d
 1849 04f5 04       		.byte	0x4
 1850 04f6 0F       		.uleb128 0xf
 1851 04f7 2E060000 		.4byte	.LASF79
 1852 04fb 04       		.byte	0x4
 1853 04fc 3302     		.2byte	0x233
 1854 04fe 8F050000 		.4byte	0x58f
 1855 0502 08       		.byte	0x8
 1856 0503 0F       		.uleb128 0xf
 1857 0504 8B050000 		.4byte	.LASF80
 1858 0508 04       		.byte	0x4
 1859 0509 3902     		.2byte	0x239
 1860 050b 8D050000 		.4byte	0x58d
 1861 050f 0C       		.byte	0xc
 1862 0510 0F       		.uleb128 0xf
 1863 0511 2A080000 		.4byte	.LASF81
 1864 0515 04       		.byte	0x4
 1865 0516 4002     		.2byte	0x240
 1866 0518 95050000 		.4byte	0x595
 1867 051c 10       		.byte	0x10
 1868 051d 0F       		.uleb128 0xf
 1869 051e D0080000 		.4byte	.LASF82
 1870 0522 04       		.byte	0x4
 1871 0523 4502     		.2byte	0x245
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 85


 1872 0525 83000000 		.4byte	0x83
 1873 0529 14       		.byte	0x14
 1874 052a 0F       		.uleb128 0xf
 1875 052b A0030000 		.4byte	.LASF83
 1876 052f 04       		.byte	0x4
 1877 0530 4C02     		.2byte	0x24c
 1878 0532 77000000 		.4byte	0x77
 1879 0536 18       		.byte	0x18
 1880 0537 0F       		.uleb128 0xf
 1881 0538 88020000 		.4byte	.LASF84
 1882 053c 04       		.byte	0x4
 1883 053d 5302     		.2byte	0x253
 1884 053f 6B000000 		.4byte	0x6b
 1885 0543 1A       		.byte	0x1a
 1886 0544 0F       		.uleb128 0xf
 1887 0545 99040000 		.4byte	.LASF85
 1888 0549 04       		.byte	0x4
 1889 054a 5D02     		.2byte	0x25d
 1890 054c 6B000000 		.4byte	0x6b
 1891 0550 1B       		.byte	0x1b
 1892 0551 0F       		.uleb128 0xf
 1893 0552 6D060000 		.4byte	.LASF86
 1894 0556 04       		.byte	0x4
 1895 0557 6202     		.2byte	0x262
 1896 0559 77000000 		.4byte	0x77
 1897 055d 1C       		.byte	0x1c
 1898 055e 0F       		.uleb128 0xf
 1899 055f 66080000 		.4byte	.LASF87
 1900 0563 04       		.byte	0x4
 1901 0564 6B02     		.2byte	0x26b
 1902 0566 83000000 		.4byte	0x83
 1903 056a 20       		.byte	0x20
 1904 056b 0F       		.uleb128 0xf
 1905 056c 8B080000 		.4byte	.LASF88
 1906 0570 04       		.byte	0x4
 1907 0571 7202     		.2byte	0x272
 1908 0573 8D050000 		.4byte	0x58d
 1909 0577 24       		.byte	0x24
 1910 0578 0F       		.uleb128 0xf
 1911 0579 A3010000 		.4byte	.LASF89
 1912 057d 04       		.byte	0x4
 1913 057e 7702     		.2byte	0x277
 1914 0580 6B000000 		.4byte	0x6b
 1915 0584 28       		.byte	0x28
 1916 0585 00       		.byte	0
 1917 0586 06       		.uleb128 0x6
 1918 0587 04       		.byte	0x4
 1919 0588 8C050000 		.4byte	0x58c
 1920 058c 12       		.uleb128 0x12
 1921 058d 13       		.uleb128 0x13
 1922 058e 04       		.byte	0x4
 1923 058f 06       		.uleb128 0x6
 1924 0590 04       		.byte	0x4
 1925 0591 00030000 		.4byte	0x300
 1926 0595 06       		.uleb128 0x6
 1927 0596 04       		.byte	0x4
 1928 0597 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 86


 1929 059b 04       		.uleb128 0x4
 1930 059c 7C030000 		.4byte	.LASF90
 1931 05a0 04       		.byte	0x4
 1932 05a1 7802     		.2byte	0x278
 1933 05a3 D3040000 		.4byte	0x4d3
 1934 05a7 10       		.uleb128 0x10
 1935 05a8 2C       		.byte	0x2c
 1936 05a9 04       		.byte	0x4
 1937 05aa 7E02     		.2byte	0x27e
 1938 05ac BE050000 		.4byte	0x5be
 1939 05b0 0F       		.uleb128 0xf
 1940 05b1 280B0000 		.4byte	.LASF91
 1941 05b5 04       		.byte	0x4
 1942 05b6 8302     		.2byte	0x283
 1943 05b8 BE050000 		.4byte	0x5be
 1944 05bc 00       		.byte	0
 1945 05bd 00       		.byte	0
 1946 05be 0D       		.uleb128 0xd
 1947 05bf 9B050000 		.4byte	0x59b
 1948 05c3 CE050000 		.4byte	0x5ce
 1949 05c7 0E       		.uleb128 0xe
 1950 05c8 C4010000 		.4byte	0x1c4
 1951 05cc 00       		.byte	0
 1952 05cd 00       		.byte	0
 1953 05ce 04       		.uleb128 0x4
 1954 05cf FB040000 		.4byte	.LASF92
 1955 05d3 04       		.byte	0x4
 1956 05d4 8402     		.2byte	0x284
 1957 05d6 A7050000 		.4byte	0x5a7
 1958 05da 02       		.uleb128 0x2
 1959 05db 08       		.byte	0x8
 1960 05dc 04       		.byte	0x4
 1961 05dd 00060000 		.4byte	.LASF93
 1962 05e1 14       		.uleb128 0x14
 1963 05e2 E1030000 		.4byte	.LASF94
 1964 05e6 01       		.byte	0x1
 1965 05e7 7107     		.2byte	0x771
 1966 05e9 00000000 		.4byte	.LFB18
 1967 05ed 20000000 		.4byte	.LFE18-.LFB18
 1968 05f1 01       		.uleb128 0x1
 1969 05f2 9C       		.byte	0x9c
 1970 05f3 08060000 		.4byte	0x608
 1971 05f7 15       		.uleb128 0x15
 1972 05f8 B1080000 		.4byte	.LASF97
 1973 05fc 01       		.byte	0x1
 1974 05fd 7307     		.2byte	0x773
 1975 05ff 83000000 		.4byte	0x83
 1976 0603 00000000 		.4byte	.LLST0
 1977 0607 00       		.byte	0
 1978 0608 14       		.uleb128 0x14
 1979 0609 3A080000 		.4byte	.LASF95
 1980 060d 01       		.byte	0x1
 1981 060e 9707     		.2byte	0x797
 1982 0610 00000000 		.4byte	.LFB19
 1983 0614 08000000 		.4byte	.LFE19-.LFB19
 1984 0618 01       		.uleb128 0x1
 1985 0619 9C       		.byte	0x9c
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 87


 1986 061a 28060000 		.4byte	0x628
 1987 061e 16       		.uleb128 0x16
 1988 061f 06000000 		.4byte	.LVL2
 1989 0623 E1050000 		.4byte	0x5e1
 1990 0627 00       		.byte	0
 1991 0628 14       		.uleb128 0x14
 1992 0629 3B000000 		.4byte	.LASF96
 1993 062d 01       		.byte	0x1
 1994 062e 0003     		.2byte	0x300
 1995 0630 00000000 		.4byte	.LFB8
 1996 0634 18000000 		.4byte	.LFE8-.LFB8
 1997 0638 01       		.uleb128 0x1
 1998 0639 9C       		.byte	0x9c
 1999 063a 58060000 		.4byte	0x658
 2000 063e 15       		.uleb128 0x15
 2001 063f 480A0000 		.4byte	.LASF98
 2002 0643 01       		.byte	0x1
 2003 0644 0203     		.2byte	0x302
 2004 0646 83000000 		.4byte	0x83
 2005 064a 1E000000 		.4byte	.LLST1
 2006 064e 16       		.uleb128 0x16
 2007 064f 10000000 		.4byte	.LVL5
 2008 0653 060D0000 		.4byte	0xd06
 2009 0657 00       		.byte	0
 2010 0658 17       		.uleb128 0x17
 2011 0659 56010000 		.4byte	.LASF166
 2012 065d 01       		.byte	0x1
 2013 065e E9       		.byte	0xe9
 2014 065f 83000000 		.4byte	0x83
 2015 0663 00000000 		.4byte	.LFB2
 2016 0667 10000000 		.4byte	.LFE2-.LFB2
 2017 066b 01       		.uleb128 0x1
 2018 066c 9C       		.byte	0x9c
 2019 066d 18       		.uleb128 0x18
 2020 066e 0E070000 		.4byte	.LASF100
 2021 0672 01       		.byte	0x1
 2022 0673 1D01     		.2byte	0x11d
 2023 0675 A4000000 		.4byte	0xa4
 2024 0679 00000000 		.4byte	.LFB3
 2025 067d 40000000 		.4byte	.LFE3-.LFB3
 2026 0681 01       		.uleb128 0x1
 2027 0682 9C       		.byte	0x9c
 2028 0683 B1060000 		.4byte	0x6b1
 2029 0687 19       		.uleb128 0x19
 2030 0688 B70A0000 		.4byte	.LASF105
 2031 068c 01       		.byte	0x1
 2032 068d 1D01     		.2byte	0x11d
 2033 068f 83000000 		.4byte	0x83
 2034 0693 31000000 		.4byte	.LLST2
 2035 0697 15       		.uleb128 0x15
 2036 0698 AA0A0000 		.4byte	.LASF99
 2037 069c 01       		.byte	0x1
 2038 069d 1F01     		.2byte	0x11f
 2039 069f A4000000 		.4byte	0xa4
 2040 06a3 52000000 		.4byte	.LLST3
 2041 06a7 16       		.uleb128 0x16
 2042 06a8 38000000 		.4byte	.LVL8
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 88


 2043 06ac 120D0000 		.4byte	0xd12
 2044 06b0 00       		.byte	0
 2045 06b1 18       		.uleb128 0x18
 2046 06b2 11050000 		.4byte	.LASF101
 2047 06b6 01       		.byte	0x1
 2048 06b7 7001     		.2byte	0x170
 2049 06b9 A4000000 		.4byte	0xa4
 2050 06bd 00000000 		.4byte	.LFB4
 2051 06c1 2C000000 		.4byte	.LFE4-.LFB4
 2052 06c5 01       		.uleb128 0x1
 2053 06c6 9C       		.byte	0x9c
 2054 06c7 E5060000 		.4byte	0x6e5
 2055 06cb 15       		.uleb128 0x15
 2056 06cc 30000000 		.4byte	.LASF102
 2057 06d0 01       		.byte	0x1
 2058 06d1 7201     		.2byte	0x172
 2059 06d3 A4000000 		.4byte	0xa4
 2060 06d7 70000000 		.4byte	.LLST4
 2061 06db 16       		.uleb128 0x16
 2062 06dc 16000000 		.4byte	.LVL11
 2063 06e0 1E0D0000 		.4byte	0xd1e
 2064 06e4 00       		.byte	0
 2065 06e5 18       		.uleb128 0x18
 2066 06e6 53090000 		.4byte	.LASF103
 2067 06ea 01       		.byte	0x1
 2068 06eb AE01     		.2byte	0x1ae
 2069 06ed A4000000 		.4byte	0xa4
 2070 06f1 00000000 		.4byte	.LFB5
 2071 06f5 3C000000 		.4byte	.LFE5-.LFB5
 2072 06f9 01       		.uleb128 0x1
 2073 06fa 9C       		.byte	0x9c
 2074 06fb 3D070000 		.4byte	0x73d
 2075 06ff 15       		.uleb128 0x15
 2076 0700 30000000 		.4byte	.LASF102
 2077 0704 01       		.byte	0x1
 2078 0705 B001     		.2byte	0x1b0
 2079 0707 A4000000 		.4byte	0xa4
 2080 070b 8F000000 		.4byte	.LLST5
 2081 070f 15       		.uleb128 0x15
 2082 0710 D1050000 		.4byte	.LASF104
 2083 0714 01       		.byte	0x1
 2084 0715 B201     		.2byte	0x1b2
 2085 0717 83000000 		.4byte	0x83
 2086 071b DD000000 		.4byte	.LLST6
 2087 071f 1A       		.uleb128 0x1a
 2088 0720 18000000 		.4byte	.LVL16
 2089 0724 6D060000 		.4byte	0x66d
 2090 0728 33070000 		.4byte	0x733
 2091 072c 1B       		.uleb128 0x1b
 2092 072d 01       		.uleb128 0x1
 2093 072e 50       		.byte	0x50
 2094 072f 02       		.uleb128 0x2
 2095 0730 74       		.byte	0x74
 2096 0731 00       		.sleb128 0
 2097 0732 00       		.byte	0
 2098 0733 16       		.uleb128 0x16
 2099 0734 26000000 		.4byte	.LVL17
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 89


 2100 0738 B1060000 		.4byte	0x6b1
 2101 073c 00       		.byte	0
 2102 073d 1C       		.uleb128 0x1c
 2103 073e BB080000 		.4byte	.LASF112
 2104 0742 01       		.byte	0x1
 2105 0743 8F02     		.2byte	0x28f
 2106 0745 00000000 		.4byte	.LFB7
 2107 0749 9C000000 		.4byte	.LFE7-.LFB7
 2108 074d 01       		.uleb128 0x1
 2109 074e 9C       		.byte	0x9c
 2110 074f 07080000 		.4byte	0x807
 2111 0753 19       		.uleb128 0x19
 2112 0754 B70A0000 		.4byte	.LASF105
 2113 0758 01       		.byte	0x1
 2114 0759 8F02     		.2byte	0x28f
 2115 075b 83000000 		.4byte	0x83
 2116 075f F0000000 		.4byte	.LLST7
 2117 0763 19       		.uleb128 0x19
 2118 0764 22000000 		.4byte	.LASF106
 2119 0768 01       		.byte	0x1
 2120 0769 8F02     		.2byte	0x28f
 2121 076b 83000000 		.4byte	0x83
 2122 076f 11010000 		.4byte	.LLST8
 2123 0773 19       		.uleb128 0x19
 2124 0774 35090000 		.4byte	.LASF107
 2125 0778 01       		.byte	0x1
 2126 0779 8F02     		.2byte	0x28f
 2127 077b 83000000 		.4byte	0x83
 2128 077f 32010000 		.4byte	.LLST9
 2129 0783 1D       		.uleb128 0x1d
 2130 0784 B2010000 		.4byte	.LASF108
 2131 0788 01       		.byte	0x1
 2132 0789 9102     		.2byte	0x291
 2133 078b 83000000 		.4byte	0x83
 2134 078f 01       		.byte	0x1
 2135 0790 15       		.uleb128 0x15
 2136 0791 49090000 		.4byte	.LASF109
 2137 0795 01       		.byte	0x1
 2138 0796 9202     		.2byte	0x292
 2139 0798 83000000 		.4byte	0x83
 2140 079c 5E010000 		.4byte	.LLST10
 2141 07a0 15       		.uleb128 0x15
 2142 07a1 33010000 		.4byte	.LASF110
 2143 07a5 01       		.byte	0x1
 2144 07a6 9302     		.2byte	0x293
 2145 07a8 6B000000 		.4byte	0x6b
 2146 07ac 7D010000 		.4byte	.LLST11
 2147 07b0 15       		.uleb128 0x15
 2148 07b1 DD080000 		.4byte	.LASF111
 2149 07b5 01       		.byte	0x1
 2150 07b6 9402     		.2byte	0x294
 2151 07b8 07080000 		.4byte	0x807
 2152 07bc A6010000 		.4byte	.LLST12
 2153 07c0 16       		.uleb128 0x16
 2154 07c1 1C000000 		.4byte	.LVL26
 2155 07c5 2A0D0000 		.4byte	0xd2a
 2156 07c9 16       		.uleb128 0x16
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 90


 2157 07ca 3C000000 		.4byte	.LVL27
 2158 07ce 350D0000 		.4byte	0xd35
 2159 07d2 16       		.uleb128 0x16
 2160 07d3 4E000000 		.4byte	.LVL28
 2161 07d7 2A0D0000 		.4byte	0xd2a
 2162 07db 16       		.uleb128 0x16
 2163 07dc 6E000000 		.4byte	.LVL29
 2164 07e0 350D0000 		.4byte	0xd35
 2165 07e4 16       		.uleb128 0x16
 2166 07e5 74000000 		.4byte	.LVL30
 2167 07e9 2A0D0000 		.4byte	0xd2a
 2168 07ed 16       		.uleb128 0x16
 2169 07ee 86000000 		.4byte	.LVL31
 2170 07f2 350D0000 		.4byte	0xd35
 2171 07f6 1E       		.uleb128 0x1e
 2172 07f7 8E000000 		.4byte	.LVL32
 2173 07fb 400D0000 		.4byte	0xd40
 2174 07ff 1B       		.uleb128 0x1b
 2175 0800 01       		.uleb128 0x1
 2176 0801 50       		.byte	0x50
 2177 0802 02       		.uleb128 0x2
 2178 0803 74       		.byte	0x74
 2179 0804 00       		.sleb128 0
 2180 0805 00       		.byte	0
 2181 0806 00       		.byte	0
 2182 0807 06       		.uleb128 0x6
 2183 0808 04       		.byte	0x4
 2184 0809 0D080000 		.4byte	0x80d
 2185 080d 1F       		.uleb128 0x1f
 2186 080e C7040000 		.4byte	0x4c7
 2187 0812 1C       		.uleb128 0x1c
 2188 0813 88090000 		.4byte	.LASF113
 2189 0817 01       		.byte	0x1
 2190 0818 8B03     		.2byte	0x38b
 2191 081a 00000000 		.4byte	.LFB9
 2192 081e 3C000000 		.4byte	.LFE9-.LFB9
 2193 0822 01       		.uleb128 0x1
 2194 0823 9C       		.byte	0x9c
 2195 0824 4B080000 		.4byte	0x84b
 2196 0828 19       		.uleb128 0x19
 2197 0829 51010000 		.4byte	.LASF114
 2198 082d 01       		.byte	0x1
 2199 082e 8B03     		.2byte	0x38b
 2200 0830 28010000 		.4byte	0x128
 2201 0834 B9010000 		.4byte	.LLST13
 2202 0838 16       		.uleb128 0x16
 2203 0839 14000000 		.4byte	.LVL39
 2204 083d 28060000 		.4byte	0x628
 2205 0841 16       		.uleb128 0x16
 2206 0842 1C000000 		.4byte	.LVL40
 2207 0846 4C0D0000 		.4byte	0xd4c
 2208 084a 00       		.byte	0
 2209 084b 1C       		.uleb128 0x1c
 2210 084c 55000000 		.4byte	.LASF115
 2211 0850 01       		.byte	0x1
 2212 0851 EE03     		.2byte	0x3ee
 2213 0853 00000000 		.4byte	.LFB10
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 91


 2214 0857 40000000 		.4byte	.LFE10-.LFB10
 2215 085b 01       		.uleb128 0x1
 2216 085c 9C       		.byte	0x9c
 2217 085d 92080000 		.4byte	0x892
 2218 0861 15       		.uleb128 0x15
 2219 0862 DD080000 		.4byte	.LASF111
 2220 0866 01       		.byte	0x1
 2221 0867 F003     		.2byte	0x3f0
 2222 0869 07080000 		.4byte	0x807
 2223 086d DA010000 		.4byte	.LLST14
 2224 0871 15       		.uleb128 0x15
 2225 0872 E2010000 		.4byte	.LASF116
 2226 0876 01       		.byte	0x1
 2227 0877 F103     		.2byte	0x3f1
 2228 0879 83000000 		.4byte	0x83
 2229 087d ED010000 		.4byte	.LLST15
 2230 0881 15       		.uleb128 0x15
 2231 0882 2A010000 		.4byte	.LASF117
 2232 0886 01       		.byte	0x1
 2233 0887 F203     		.2byte	0x3f2
 2234 0889 83000000 		.4byte	0x83
 2235 088d 0C020000 		.4byte	.LLST16
 2236 0891 00       		.byte	0
 2237 0892 20       		.uleb128 0x20
 2238 0893 1D0A0000 		.4byte	.LASF167
 2239 0897 01       		.byte	0x1
 2240 0898 6404     		.2byte	0x464
 2241 089a 00000000 		.4byte	.LFB11
 2242 089e 02000000 		.4byte	.LFE11-.LFB11
 2243 08a2 01       		.uleb128 0x1
 2244 08a3 9C       		.byte	0x9c
 2245 08a4 1C       		.uleb128 0x1c
 2246 08a5 79060000 		.4byte	.LASF118
 2247 08a9 01       		.byte	0x1
 2248 08aa B104     		.2byte	0x4b1
 2249 08ac 00000000 		.4byte	.LFB12
 2250 08b0 08000000 		.4byte	.LFE12-.LFB12
 2251 08b4 01       		.uleb128 0x1
 2252 08b5 9C       		.byte	0x9c
 2253 08b6 DC080000 		.4byte	0x8dc
 2254 08ba 19       		.uleb128 0x19
 2255 08bb 05080000 		.4byte	.LASF119
 2256 08bf 01       		.byte	0x1
 2257 08c0 B104     		.2byte	0x4b1
 2258 08c2 D2000000 		.4byte	0xd2
 2259 08c6 35020000 		.4byte	.LLST17
 2260 08ca 1E       		.uleb128 0x1e
 2261 08cb 06000000 		.4byte	.LVL54
 2262 08cf 580D0000 		.4byte	0xd58
 2263 08d3 1B       		.uleb128 0x1b
 2264 08d4 01       		.uleb128 0x1
 2265 08d5 50       		.byte	0x50
 2266 08d6 03       		.uleb128 0x3
 2267 08d7 F3       		.byte	0xf3
 2268 08d8 01       		.uleb128 0x1
 2269 08d9 50       		.byte	0x50
 2270 08da 00       		.byte	0
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 92


 2271 08db 00       		.byte	0
 2272 08dc 1C       		.uleb128 0x1c
 2273 08dd 66010000 		.4byte	.LASF120
 2274 08e1 01       		.byte	0x1
 2275 08e2 C804     		.2byte	0x4c8
 2276 08e4 00000000 		.4byte	.LFB13
 2277 08e8 30000000 		.4byte	.LFE13-.LFB13
 2278 08ec 01       		.uleb128 0x1
 2279 08ed 9C       		.byte	0x9c
 2280 08ee 03090000 		.4byte	0x903
 2281 08f2 19       		.uleb128 0x19
 2282 08f3 6A030000 		.4byte	.LASF121
 2283 08f7 01       		.byte	0x1
 2284 08f8 C804     		.2byte	0x4c8
 2285 08fa 83000000 		.4byte	0x83
 2286 08fe 56020000 		.4byte	.LLST18
 2287 0902 00       		.byte	0
 2288 0903 1C       		.uleb128 0x1c
 2289 0904 44040000 		.4byte	.LASF122
 2290 0908 01       		.byte	0x1
 2291 0909 0C05     		.2byte	0x50c
 2292 090b 00000000 		.4byte	.LFB14
 2293 090f 30000000 		.4byte	.LFE14-.LFB14
 2294 0913 01       		.uleb128 0x1
 2295 0914 9C       		.byte	0x9c
 2296 0915 2A090000 		.4byte	0x92a
 2297 0919 19       		.uleb128 0x19
 2298 091a 81090000 		.4byte	.LASF35
 2299 091e 01       		.byte	0x1
 2300 091f 0C05     		.2byte	0x50c
 2301 0921 83000000 		.4byte	0x83
 2302 0925 84020000 		.4byte	.LLST19
 2303 0929 00       		.byte	0
 2304 092a 1C       		.uleb128 0x1c
 2305 092b B5050000 		.4byte	.LASF123
 2306 092f 01       		.byte	0x1
 2307 0930 6005     		.2byte	0x560
 2308 0932 00000000 		.4byte	.LFB15
 2309 0936 12000000 		.4byte	.LFE15-.LFB15
 2310 093a 01       		.uleb128 0x1
 2311 093b 9C       		.byte	0x9c
 2312 093c 86090000 		.4byte	0x986
 2313 0940 19       		.uleb128 0x19
 2314 0941 81090000 		.4byte	.LASF35
 2315 0945 01       		.byte	0x1
 2316 0946 6005     		.2byte	0x560
 2317 0948 83000000 		.4byte	0x83
 2318 094c B2020000 		.4byte	.LLST20
 2319 0950 19       		.uleb128 0x19
 2320 0951 6A030000 		.4byte	.LASF121
 2321 0955 01       		.byte	0x1
 2322 0956 6005     		.2byte	0x560
 2323 0958 83000000 		.4byte	0x83
 2324 095c DE020000 		.4byte	.LLST21
 2325 0960 1A       		.uleb128 0x1a
 2326 0961 0A000000 		.4byte	.LVL63
 2327 0965 DC080000 		.4byte	0x8dc
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 93


 2328 0969 75090000 		.4byte	0x975
 2329 096d 1B       		.uleb128 0x1b
 2330 096e 01       		.uleb128 0x1
 2331 096f 50       		.byte	0x50
 2332 0970 03       		.uleb128 0x3
 2333 0971 F3       		.byte	0xf3
 2334 0972 01       		.uleb128 0x1
 2335 0973 51       		.byte	0x51
 2336 0974 00       		.byte	0
 2337 0975 1E       		.uleb128 0x1e
 2338 0976 10000000 		.4byte	.LVL64
 2339 097a 03090000 		.4byte	0x903
 2340 097e 1B       		.uleb128 0x1b
 2341 097f 01       		.uleb128 0x1
 2342 0980 50       		.byte	0x50
 2343 0981 02       		.uleb128 0x2
 2344 0982 74       		.byte	0x74
 2345 0983 00       		.sleb128 0
 2346 0984 00       		.byte	0
 2347 0985 00       		.byte	0
 2348 0986 18       		.uleb128 0x18
 2349 0987 10040000 		.4byte	.LASF124
 2350 098b 01       		.byte	0x1
 2351 098c 9405     		.2byte	0x594
 2352 098e A4000000 		.4byte	0xa4
 2353 0992 00000000 		.4byte	.LFB16
 2354 0996 1A000000 		.4byte	.LFE16-.LFB16
 2355 099a 01       		.uleb128 0x1
 2356 099b 9C       		.byte	0x9c
 2357 099c D8090000 		.4byte	0x9d8
 2358 09a0 19       		.uleb128 0x19
 2359 09a1 B70A0000 		.4byte	.LASF105
 2360 09a5 01       		.byte	0x1
 2361 09a6 9405     		.2byte	0x594
 2362 09a8 83000000 		.4byte	0x83
 2363 09ac FF020000 		.4byte	.LLST22
 2364 09b0 15       		.uleb128 0x15
 2365 09b1 C5040000 		.4byte	.LASF125
 2366 09b5 01       		.byte	0x1
 2367 09b6 9605     		.2byte	0x596
 2368 09b8 A4000000 		.4byte	0xa4
 2369 09bc 41030000 		.4byte	.LLST23
 2370 09c0 1E       		.uleb128 0x1e
 2371 09c1 18000000 		.4byte	.LVL72
 2372 09c5 630D0000 		.4byte	0xd63
 2373 09c9 1B       		.uleb128 0x1b
 2374 09ca 01       		.uleb128 0x1
 2375 09cb 50       		.byte	0x50
 2376 09cc 03       		.uleb128 0x3
 2377 09cd F3       		.byte	0xf3
 2378 09ce 01       		.uleb128 0x1
 2379 09cf 50       		.byte	0x50
 2380 09d0 1B       		.uleb128 0x1b
 2381 09d1 01       		.uleb128 0x1
 2382 09d2 51       		.byte	0x51
 2383 09d3 02       		.uleb128 0x2
 2384 09d4 08       		.byte	0x8
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 94


 2385 09d5 55       		.byte	0x55
 2386 09d6 00       		.byte	0
 2387 09d7 00       		.byte	0
 2388 09d8 18       		.uleb128 0x18
 2389 09d9 DE040000 		.4byte	.LASF126
 2390 09dd 01       		.byte	0x1
 2391 09de 0506     		.2byte	0x605
 2392 09e0 A4000000 		.4byte	0xa4
 2393 09e4 00000000 		.4byte	.LFB17
 2394 09e8 1A000000 		.4byte	.LFE17-.LFB17
 2395 09ec 01       		.uleb128 0x1
 2396 09ed 9C       		.byte	0x9c
 2397 09ee 230A0000 		.4byte	0xa23
 2398 09f2 15       		.uleb128 0x15
 2399 09f3 C5040000 		.4byte	.LASF125
 2400 09f7 01       		.byte	0x1
 2401 09f8 0706     		.2byte	0x607
 2402 09fa A4000000 		.4byte	0xa4
 2403 09fe 6B030000 		.4byte	.LLST24
 2404 0a02 15       		.uleb128 0x15
 2405 0a03 D1050000 		.4byte	.LASF104
 2406 0a07 01       		.byte	0x1
 2407 0a08 0806     		.2byte	0x608
 2408 0a0a 83000000 		.4byte	0x83
 2409 0a0e 95030000 		.4byte	.LLST25
 2410 0a12 1E       		.uleb128 0x1e
 2411 0a13 0E000000 		.4byte	.LVL75
 2412 0a17 86090000 		.4byte	0x986
 2413 0a1b 1B       		.uleb128 0x1b
 2414 0a1c 01       		.uleb128 0x1
 2415 0a1d 50       		.byte	0x50
 2416 0a1e 02       		.uleb128 0x2
 2417 0a1f 74       		.byte	0x74
 2418 0a20 00       		.sleb128 0
 2419 0a21 00       		.byte	0
 2420 0a22 00       		.byte	0
 2421 0a23 1C       		.uleb128 0x1c
 2422 0a24 F8010000 		.4byte	.LASF127
 2423 0a28 01       		.byte	0x1
 2424 0a29 080A     		.2byte	0xa08
 2425 0a2b 00000000 		.4byte	.LFB22
 2426 0a2f 3C000000 		.4byte	.LFE22-.LFB22
 2427 0a33 01       		.uleb128 0x1
 2428 0a34 9C       		.byte	0x9c
 2429 0a35 840A0000 		.4byte	0xa84
 2430 0a39 15       		.uleb128 0x15
 2431 0a3a D1050000 		.4byte	.LASF104
 2432 0a3e 01       		.byte	0x1
 2433 0a3f 0A0A     		.2byte	0xa0a
 2434 0a41 83000000 		.4byte	0x83
 2435 0a45 B4030000 		.4byte	.LLST26
 2436 0a49 15       		.uleb128 0x15
 2437 0a4a DB050000 		.4byte	.LASF128
 2438 0a4e 01       		.byte	0x1
 2439 0a4f 0B0A     		.2byte	0xa0b
 2440 0a51 83000000 		.4byte	0x83
 2441 0a55 D3030000 		.4byte	.LLST27
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 95


 2442 0a59 15       		.uleb128 0x15
 2443 0a5a 75090000 		.4byte	.LASF129
 2444 0a5e 01       		.byte	0x1
 2445 0a5f 170A     		.2byte	0xa17
 2446 0a61 07080000 		.4byte	0x807
 2447 0a65 F2030000 		.4byte	.LLST28
 2448 0a69 1E       		.uleb128 0x1e
 2449 0a6a 1E000000 		.4byte	.LVL84
 2450 0a6e 6F0D0000 		.4byte	0xd6f
 2451 0a72 1B       		.uleb128 0x1b
 2452 0a73 01       		.uleb128 0x1
 2453 0a74 50       		.byte	0x50
 2454 0a75 0C       		.uleb128 0xc
 2455 0a76 74       		.byte	0x74
 2456 0a77 00       		.sleb128 0
 2457 0a78 33       		.byte	0x33
 2458 0a79 24       		.byte	0x24
 2459 0a7a 74       		.byte	0x74
 2460 0a7b 00       		.sleb128 0
 2461 0a7c 1C       		.byte	0x1c
 2462 0a7d 32       		.byte	0x32
 2463 0a7e 24       		.byte	0x24
 2464 0a7f 76       		.byte	0x76
 2465 0a80 00       		.sleb128 0
 2466 0a81 22       		.byte	0x22
 2467 0a82 00       		.byte	0
 2468 0a83 00       		.byte	0
 2469 0a84 18       		.uleb128 0x18
 2470 0a85 00000000 		.4byte	.LASF130
 2471 0a89 01       		.byte	0x1
 2472 0a8a 5A0A     		.2byte	0xa5a
 2473 0a8c 83000000 		.4byte	0x83
 2474 0a90 00000000 		.4byte	.LFB23
 2475 0a94 14000000 		.4byte	.LFE23-.LFB23
 2476 0a98 01       		.uleb128 0x1
 2477 0a99 9C       		.byte	0x9c
 2478 0a9a CB0A0000 		.4byte	0xacb
 2479 0a9e 19       		.uleb128 0x19
 2480 0a9f B70A0000 		.4byte	.LASF105
 2481 0aa3 01       		.byte	0x1
 2482 0aa4 5A0A     		.2byte	0xa5a
 2483 0aa6 83000000 		.4byte	0x83
 2484 0aaa 05040000 		.4byte	.LLST29
 2485 0aae 21       		.uleb128 0x21
 2486 0aaf FE070000 		.4byte	.LASF131
 2487 0ab3 01       		.byte	0x1
 2488 0ab4 5C0A     		.2byte	0xa5c
 2489 0ab6 83000000 		.4byte	0x83
 2490 0aba 01       		.uleb128 0x1
 2491 0abb 50       		.byte	0x50
 2492 0abc 21       		.uleb128 0x21
 2493 0abd BA010000 		.4byte	.LASF132
 2494 0ac1 01       		.byte	0x1
 2495 0ac2 600A     		.2byte	0xa60
 2496 0ac4 CB0A0000 		.4byte	0xacb
 2497 0ac8 01       		.uleb128 0x1
 2498 0ac9 53       		.byte	0x53
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 96


 2499 0aca 00       		.byte	0
 2500 0acb 06       		.uleb128 0x6
 2501 0acc 04       		.byte	0x4
 2502 0acd CB010000 		.4byte	0x1cb
 2503 0ad1 18       		.uleb128 0x18
 2504 0ad2 4A030000 		.4byte	.LASF133
 2505 0ad6 01       		.byte	0x1
 2506 0ad7 B10A     		.2byte	0xab1
 2507 0ad9 6B000000 		.4byte	0x6b
 2508 0add 00000000 		.4byte	.LFB24
 2509 0ae1 30000000 		.4byte	.LFE24-.LFB24
 2510 0ae5 01       		.uleb128 0x1
 2511 0ae6 9C       		.byte	0x9c
 2512 0ae7 2A0B0000 		.4byte	0xb2a
 2513 0aeb 19       		.uleb128 0x19
 2514 0aec 850A0000 		.4byte	.LASF134
 2515 0af0 01       		.byte	0x1
 2516 0af1 B10A     		.2byte	0xab1
 2517 0af3 83000000 		.4byte	0x83
 2518 0af7 26040000 		.4byte	.LLST30
 2519 0afb 22       		.uleb128 0x22
 2520 0afc FE030000 		.4byte	.LASF27
 2521 0b00 01       		.byte	0x1
 2522 0b01 B10A     		.2byte	0xab1
 2523 0b03 83000000 		.4byte	0x83
 2524 0b07 01       		.uleb128 0x1
 2525 0b08 51       		.byte	0x51
 2526 0b09 15       		.uleb128 0x15
 2527 0b0a 7D040000 		.4byte	.LASF135
 2528 0b0e 01       		.byte	0x1
 2529 0b0f B30A     		.2byte	0xab3
 2530 0b11 83000000 		.4byte	0x83
 2531 0b15 60040000 		.4byte	.LLST31
 2532 0b19 15       		.uleb128 0x15
 2533 0b1a 930A0000 		.4byte	.LASF136
 2534 0b1e 01       		.byte	0x1
 2535 0b1f B40A     		.2byte	0xab4
 2536 0b21 83000000 		.4byte	0x83
 2537 0b25 73040000 		.4byte	.LLST32
 2538 0b29 00       		.byte	0
 2539 0b2a 14       		.uleb128 0x14
 2540 0b2b C2010000 		.4byte	.LASF137
 2541 0b2f 01       		.byte	0x1
 2542 0b30 C008     		.2byte	0x8c0
 2543 0b32 00000000 		.4byte	.LFB21
 2544 0b36 14000000 		.4byte	.LFE21-.LFB21
 2545 0b3a 01       		.uleb128 0x1
 2546 0b3b 9C       		.byte	0x9c
 2547 0b3c AA0B0000 		.4byte	0xbaa
 2548 0b40 19       		.uleb128 0x19
 2549 0b41 D1050000 		.4byte	.LASF104
 2550 0b45 01       		.byte	0x1
 2551 0b46 C008     		.2byte	0x8c0
 2552 0b48 83000000 		.4byte	0x83
 2553 0b4c 92040000 		.4byte	.LLST33
 2554 0b50 19       		.uleb128 0x19
 2555 0b51 BA010000 		.4byte	.LASF132
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 97


 2556 0b55 01       		.byte	0x1
 2557 0b56 C008     		.2byte	0x8c0
 2558 0b58 CB0A0000 		.4byte	0xacb
 2559 0b5c B3040000 		.4byte	.LLST34
 2560 0b60 21       		.uleb128 0x21
 2561 0b61 91020000 		.4byte	.LASF138
 2562 0b65 01       		.byte	0x1
 2563 0b66 C208     		.2byte	0x8c2
 2564 0b68 6B000000 		.4byte	0x6b
 2565 0b6c 01       		.uleb128 0x1
 2566 0b6d 50       		.byte	0x50
 2567 0b6e 1D       		.uleb128 0x1d
 2568 0b6f 47010000 		.4byte	.LASF139
 2569 0b73 01       		.byte	0x1
 2570 0b74 C308     		.2byte	0x8c3
 2571 0b76 6B000000 		.4byte	0x6b
 2572 0b7a 00       		.byte	0
 2573 0b7b 15       		.uleb128 0x15
 2574 0b7c 850A0000 		.4byte	.LASF134
 2575 0b80 01       		.byte	0x1
 2576 0b81 C908     		.2byte	0x8c9
 2577 0b83 83000000 		.4byte	0x83
 2578 0b87 DF040000 		.4byte	.LLST35
 2579 0b8b 1A       		.uleb128 0x1a
 2580 0b8c 08000000 		.4byte	.LVL102
 2581 0b90 840A0000 		.4byte	0xa84
 2582 0b94 A00B0000 		.4byte	0xba0
 2583 0b98 1B       		.uleb128 0x1b
 2584 0b99 01       		.uleb128 0x1
 2585 0b9a 50       		.byte	0x50
 2586 0b9b 03       		.uleb128 0x3
 2587 0b9c F3       		.byte	0xf3
 2588 0b9d 01       		.uleb128 0x1
 2589 0b9e 50       		.byte	0x50
 2590 0b9f 00       		.byte	0
 2591 0ba0 16       		.uleb128 0x16
 2592 0ba1 10000000 		.4byte	.LVL104
 2593 0ba5 D10A0000 		.4byte	0xad1
 2594 0ba9 00       		.byte	0
 2595 0baa 1C       		.uleb128 0x1c
 2596 0bab DE0A0000 		.4byte	.LASF140
 2597 0baf 01       		.byte	0x1
 2598 0bb0 8B08     		.2byte	0x88b
 2599 0bb2 00000000 		.4byte	.LFB20
 2600 0bb6 24000000 		.4byte	.LFE20-.LFB20
 2601 0bba 01       		.uleb128 0x1
 2602 0bbb 9C       		.byte	0x9c
 2603 0bbc F10B0000 		.4byte	0xbf1
 2604 0bc0 15       		.uleb128 0x15
 2605 0bc1 D1050000 		.4byte	.LASF104
 2606 0bc5 01       		.byte	0x1
 2607 0bc6 8D08     		.2byte	0x88d
 2608 0bc8 83000000 		.4byte	0x83
 2609 0bcc F2040000 		.4byte	.LLST36
 2610 0bd0 15       		.uleb128 0x15
 2611 0bd1 BA010000 		.4byte	.LASF132
 2612 0bd5 01       		.byte	0x1
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 98


 2613 0bd6 8E08     		.2byte	0x88e
 2614 0bd8 CB0A0000 		.4byte	0xacb
 2615 0bdc 11050000 		.4byte	.LLST37
 2616 0be0 1E       		.uleb128 0x1e
 2617 0be1 16000000 		.4byte	.LVL109
 2618 0be5 2A0B0000 		.4byte	0xb2a
 2619 0be9 1B       		.uleb128 0x1b
 2620 0bea 01       		.uleb128 0x1
 2621 0beb 50       		.byte	0x50
 2622 0bec 02       		.uleb128 0x2
 2623 0bed 74       		.byte	0x74
 2624 0bee 00       		.sleb128 0
 2625 0bef 00       		.byte	0
 2626 0bf0 00       		.byte	0
 2627 0bf1 18       		.uleb128 0x18
 2628 0bf2 6F0A0000 		.4byte	.LASF141
 2629 0bf6 01       		.byte	0x1
 2630 0bf7 0402     		.2byte	0x204
 2631 0bf9 A4000000 		.4byte	0xa4
 2632 0bfd 00000000 		.4byte	.LFB6
 2633 0c01 1C000000 		.4byte	.LFE6-.LFB6
 2634 0c05 01       		.uleb128 0x1
 2635 0c06 9C       		.byte	0x9c
 2636 0c07 4C0C0000 		.4byte	0xc4c
 2637 0c0b 1D       		.uleb128 0x1d
 2638 0c0c 1F010000 		.4byte	.LASF142
 2639 0c10 01       		.byte	0x1
 2640 0c11 0602     		.2byte	0x206
 2641 0c13 A4000000 		.4byte	0xa4
 2642 0c17 00       		.byte	0
 2643 0c18 16       		.uleb128 0x16
 2644 0c19 06000000 		.4byte	.LVL113
 2645 0c1d 08060000 		.4byte	0x608
 2646 0c21 16       		.uleb128 0x16
 2647 0c22 0A000000 		.4byte	.LVL114
 2648 0c26 AA0B0000 		.4byte	0xbaa
 2649 0c2a 16       		.uleb128 0x16
 2650 0c2b 0E000000 		.4byte	.LVL115
 2651 0c2f 4B080000 		.4byte	0x84b
 2652 0c33 16       		.uleb128 0x16
 2653 0c34 12000000 		.4byte	.LVL116
 2654 0c38 4C0D0000 		.4byte	0xd4c
 2655 0c3c 1E       		.uleb128 0x1e
 2656 0c3d 18000000 		.4byte	.LVL117
 2657 0c41 12080000 		.4byte	0x812
 2658 0c45 1B       		.uleb128 0x1b
 2659 0c46 01       		.uleb128 0x1
 2660 0c47 50       		.byte	0x50
 2661 0c48 01       		.uleb128 0x1
 2662 0c49 31       		.byte	0x31
 2663 0c4a 00       		.byte	0
 2664 0c4b 00       		.byte	0
 2665 0c4c 23       		.uleb128 0x23
 2666 0c4d 1F050000 		.4byte	.LASF143
 2667 0c51 04       		.byte	0x4
 2668 0c52 1804     		.2byte	0x418
 2669 0c54 36040000 		.4byte	0x436
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 99


 2670 0c58 23       		.uleb128 0x23
 2671 0c59 3F070000 		.4byte	.LASF144
 2672 0c5d 04       		.byte	0x4
 2673 0c5e 1904     		.2byte	0x419
 2674 0c60 640C0000 		.4byte	0xc64
 2675 0c64 1F       		.uleb128 0x1f
 2676 0c65 CE050000 		.4byte	0x5ce
 2677 0c69 0D       		.uleb128 0xd
 2678 0c6a 0D080000 		.4byte	0x80d
 2679 0c6e 790C0000 		.4byte	0xc79
 2680 0c72 0E       		.uleb128 0xe
 2681 0c73 C4010000 		.4byte	0x1c4
 2682 0c77 04       		.byte	0x4
 2683 0c78 00       		.byte	0
 2684 0c79 23       		.uleb128 0x23
 2685 0c7a 0D0A0000 		.4byte	.LASF145
 2686 0c7e 04       		.byte	0x4
 2687 0c7f 1A04     		.2byte	0x41a
 2688 0c81 850C0000 		.4byte	0xc85
 2689 0c85 1F       		.uleb128 0x1f
 2690 0c86 690C0000 		.4byte	0xc69
 2691 0c8a 24       		.uleb128 0x24
 2692 0c8b 75000000 		.4byte	.LASF146
 2693 0c8f 01       		.byte	0x1
 2694 0c90 BB       		.byte	0xbb
 2695 0c91 BC000000 		.4byte	0xbc
 2696 0c95 05       		.uleb128 0x5
 2697 0c96 03       		.byte	0x3
 2698 0c97 00000000 		.4byte	CapSense_widgetIndex
 2699 0c9b 24       		.uleb128 0x24
 2700 0c9c 4A020000 		.4byte	.LASF147
 2701 0ca0 01       		.byte	0x1
 2702 0ca1 BC       		.byte	0xbc
 2703 0ca2 BC000000 		.4byte	0xbc
 2704 0ca6 05       		.uleb128 0x5
 2705 0ca7 03       		.byte	0x3
 2706 0ca8 00000000 		.4byte	CapSense_sensorIndex
 2707 0cac 24       		.uleb128 0x24
 2708 0cad C00A0000 		.4byte	.LASF148
 2709 0cb1 01       		.byte	0x1
 2710 0cb2 BD       		.byte	0xbd
 2711 0cb3 6B000000 		.4byte	0x6b
 2712 0cb7 05       		.uleb128 0x5
 2713 0cb8 03       		.byte	0x3
 2714 0cb9 00000000 		.4byte	CapSense_requestScanAllWidget
 2715 0cbd 24       		.uleb128 0x24
 2716 0cbe BC090000 		.4byte	.LASF149
 2717 0cc2 01       		.byte	0x1
 2718 0cc3 C0       		.byte	0xc0
 2719 0cc4 8F050000 		.4byte	0x58f
 2720 0cc8 05       		.uleb128 0x5
 2721 0cc9 03       		.byte	0x3
 2722 0cca 00000000 		.4byte	CapSense_curRamSnsPtr
 2723 0cce 24       		.uleb128 0x24
 2724 0ccf BF070000 		.4byte	.LASF150
 2725 0cd3 01       		.byte	0x1
 2726 0cd4 AE       		.byte	0xae
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 100


 2727 0cd5 28010000 		.4byte	0x128
 2728 0cd9 05       		.uleb128 0x5
 2729 0cda 03       		.byte	0x3
 2730 0cdb 00000000 		.4byte	CapSense_currentSenseMethod
 2731 0cdf 24       		.uleb128 0x24
 2732 0ce0 DE090000 		.4byte	.LASF151
 2733 0ce4 01       		.byte	0x1
 2734 0ce5 B7       		.byte	0xb7
 2735 0ce6 F00C0000 		.4byte	0xcf0
 2736 0cea 05       		.uleb128 0x5
 2737 0ceb 03       		.byte	0x3
 2738 0cec 00000000 		.4byte	CapSense_scanFreqIndex
 2739 0cf0 1F       		.uleb128 0x1f
 2740 0cf1 6B000000 		.4byte	0x6b
 2741 0cf5 24       		.uleb128 0x24
 2742 0cf6 9B050000 		.4byte	.LASF152
 2743 0cfa 01       		.byte	0x1
 2744 0cfb CF       		.byte	0xcf
 2745 0cfc 07080000 		.4byte	0x807
 2746 0d00 05       		.uleb128 0x5
 2747 0d01 03       		.byte	0x3
 2748 0d02 00000000 		.4byte	CapSense_curSnsIOPtr
 2749 0d06 25       		.uleb128 0x25
 2750 0d07 50060000 		.4byte	.LASF153
 2751 0d0b 50060000 		.4byte	.LASF153
 2752 0d0f 05       		.byte	0x5
 2753 0d10 D401     		.2byte	0x1d4
 2754 0d12 25       		.uleb128 0x25
 2755 0d13 13020000 		.4byte	.LASF154
 2756 0d17 13020000 		.4byte	.LASF154
 2757 0d1b 05       		.byte	0x5
 2758 0d1c B701     		.2byte	0x1b7
 2759 0d1e 25       		.uleb128 0x25
 2760 0d1f 07090000 		.4byte	.LASF155
 2761 0d23 07090000 		.4byte	.LASF155
 2762 0d27 05       		.byte	0x5
 2763 0d28 B901     		.2byte	0x1b9
 2764 0d2a 26       		.uleb128 0x26
 2765 0d2b A5090000 		.4byte	.LASF156
 2766 0d2f A5090000 		.4byte	.LASF156
 2767 0d33 06       		.byte	0x6
 2768 0d34 E5       		.byte	0xe5
 2769 0d35 26       		.uleb128 0x26
 2770 0d36 B9030000 		.4byte	.LASF157
 2771 0d3a B9030000 		.4byte	.LASF157
 2772 0d3e 06       		.byte	0x6
 2773 0d3f E6       		.byte	0xe6
 2774 0d40 25       		.uleb128 0x25
 2775 0d41 4F080000 		.4byte	.LASF158
 2776 0d45 4F080000 		.4byte	.LASF158
 2777 0d49 05       		.byte	0x5
 2778 0d4a C001     		.2byte	0x1c0
 2779 0d4c 25       		.uleb128 0x25
 2780 0d4d A1040000 		.4byte	.LASF159
 2781 0d51 A1040000 		.4byte	.LASF159
 2782 0d55 05       		.byte	0x5
 2783 0d56 D001     		.2byte	0x1d0
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 101


 2784 0d58 26       		.uleb128 0x26
 2785 0d59 15080000 		.4byte	.LASF160
 2786 0d5d 15080000 		.4byte	.LASF160
 2787 0d61 07       		.byte	0x7
 2788 0d62 18       		.byte	0x18
 2789 0d63 25       		.uleb128 0x25
 2790 0d64 23070000 		.4byte	.LASF161
 2791 0d68 23070000 		.4byte	.LASF161
 2792 0d6c 05       		.byte	0x5
 2793 0d6d BD01     		.2byte	0x1bd
 2794 0d6f 25       		.uleb128 0x25
 2795 0d70 B0060000 		.4byte	.LASF162
 2796 0d74 B0060000 		.4byte	.LASF162
 2797 0d78 05       		.byte	0x5
 2798 0d79 C101     		.2byte	0x1c1
 2799 0d7b 00       		.byte	0
 2800              		.section	.debug_abbrev,"",%progbits
 2801              	.Ldebug_abbrev0:
 2802 0000 01       		.uleb128 0x1
 2803 0001 11       		.uleb128 0x11
 2804 0002 01       		.byte	0x1
 2805 0003 25       		.uleb128 0x25
 2806 0004 0E       		.uleb128 0xe
 2807 0005 13       		.uleb128 0x13
 2808 0006 0B       		.uleb128 0xb
 2809 0007 03       		.uleb128 0x3
 2810 0008 0E       		.uleb128 0xe
 2811 0009 1B       		.uleb128 0x1b
 2812 000a 0E       		.uleb128 0xe
 2813 000b 55       		.uleb128 0x55
 2814 000c 17       		.uleb128 0x17
 2815 000d 11       		.uleb128 0x11
 2816 000e 01       		.uleb128 0x1
 2817 000f 10       		.uleb128 0x10
 2818 0010 17       		.uleb128 0x17
 2819 0011 00       		.byte	0
 2820 0012 00       		.byte	0
 2821 0013 02       		.uleb128 0x2
 2822 0014 24       		.uleb128 0x24
 2823 0015 00       		.byte	0
 2824 0016 0B       		.uleb128 0xb
 2825 0017 0B       		.uleb128 0xb
 2826 0018 3E       		.uleb128 0x3e
 2827 0019 0B       		.uleb128 0xb
 2828 001a 03       		.uleb128 0x3
 2829 001b 0E       		.uleb128 0xe
 2830 001c 00       		.byte	0
 2831 001d 00       		.byte	0
 2832 001e 03       		.uleb128 0x3
 2833 001f 24       		.uleb128 0x24
 2834 0020 00       		.byte	0
 2835 0021 0B       		.uleb128 0xb
 2836 0022 0B       		.uleb128 0xb
 2837 0023 3E       		.uleb128 0x3e
 2838 0024 0B       		.uleb128 0xb
 2839 0025 03       		.uleb128 0x3
 2840 0026 08       		.uleb128 0x8
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 102


 2841 0027 00       		.byte	0
 2842 0028 00       		.byte	0
 2843 0029 04       		.uleb128 0x4
 2844 002a 16       		.uleb128 0x16
 2845 002b 00       		.byte	0
 2846 002c 03       		.uleb128 0x3
 2847 002d 0E       		.uleb128 0xe
 2848 002e 3A       		.uleb128 0x3a
 2849 002f 0B       		.uleb128 0xb
 2850 0030 3B       		.uleb128 0x3b
 2851 0031 05       		.uleb128 0x5
 2852 0032 49       		.uleb128 0x49
 2853 0033 13       		.uleb128 0x13
 2854 0034 00       		.byte	0
 2855 0035 00       		.byte	0
 2856 0036 05       		.uleb128 0x5
 2857 0037 35       		.uleb128 0x35
 2858 0038 00       		.byte	0
 2859 0039 49       		.uleb128 0x49
 2860 003a 13       		.uleb128 0x13
 2861 003b 00       		.byte	0
 2862 003c 00       		.byte	0
 2863 003d 06       		.uleb128 0x6
 2864 003e 0F       		.uleb128 0xf
 2865 003f 00       		.byte	0
 2866 0040 0B       		.uleb128 0xb
 2867 0041 0B       		.uleb128 0xb
 2868 0042 49       		.uleb128 0x49
 2869 0043 13       		.uleb128 0x13
 2870 0044 00       		.byte	0
 2871 0045 00       		.byte	0
 2872 0046 07       		.uleb128 0x7
 2873 0047 15       		.uleb128 0x15
 2874 0048 00       		.byte	0
 2875 0049 27       		.uleb128 0x27
 2876 004a 19       		.uleb128 0x19
 2877 004b 00       		.byte	0
 2878 004c 00       		.byte	0
 2879 004d 08       		.uleb128 0x8
 2880 004e 04       		.uleb128 0x4
 2881 004f 01       		.byte	0x1
 2882 0050 0B       		.uleb128 0xb
 2883 0051 0B       		.uleb128 0xb
 2884 0052 49       		.uleb128 0x49
 2885 0053 13       		.uleb128 0x13
 2886 0054 3A       		.uleb128 0x3a
 2887 0055 0B       		.uleb128 0xb
 2888 0056 3B       		.uleb128 0x3b
 2889 0057 0B       		.uleb128 0xb
 2890 0058 01       		.uleb128 0x1
 2891 0059 13       		.uleb128 0x13
 2892 005a 00       		.byte	0
 2893 005b 00       		.byte	0
 2894 005c 09       		.uleb128 0x9
 2895 005d 28       		.uleb128 0x28
 2896 005e 00       		.byte	0
 2897 005f 03       		.uleb128 0x3
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 103


 2898 0060 0E       		.uleb128 0xe
 2899 0061 1C       		.uleb128 0x1c
 2900 0062 0B       		.uleb128 0xb
 2901 0063 00       		.byte	0
 2902 0064 00       		.byte	0
 2903 0065 0A       		.uleb128 0xa
 2904 0066 16       		.uleb128 0x16
 2905 0067 00       		.byte	0
 2906 0068 03       		.uleb128 0x3
 2907 0069 0E       		.uleb128 0xe
 2908 006a 3A       		.uleb128 0x3a
 2909 006b 0B       		.uleb128 0xb
 2910 006c 3B       		.uleb128 0x3b
 2911 006d 0B       		.uleb128 0xb
 2912 006e 49       		.uleb128 0x49
 2913 006f 13       		.uleb128 0x13
 2914 0070 00       		.byte	0
 2915 0071 00       		.byte	0
 2916 0072 0B       		.uleb128 0xb
 2917 0073 13       		.uleb128 0x13
 2918 0074 01       		.byte	0x1
 2919 0075 0B       		.uleb128 0xb
 2920 0076 0B       		.uleb128 0xb
 2921 0077 3A       		.uleb128 0x3a
 2922 0078 0B       		.uleb128 0xb
 2923 0079 3B       		.uleb128 0x3b
 2924 007a 0B       		.uleb128 0xb
 2925 007b 01       		.uleb128 0x1
 2926 007c 13       		.uleb128 0x13
 2927 007d 00       		.byte	0
 2928 007e 00       		.byte	0
 2929 007f 0C       		.uleb128 0xc
 2930 0080 0D       		.uleb128 0xd
 2931 0081 00       		.byte	0
 2932 0082 03       		.uleb128 0x3
 2933 0083 0E       		.uleb128 0xe
 2934 0084 3A       		.uleb128 0x3a
 2935 0085 0B       		.uleb128 0xb
 2936 0086 3B       		.uleb128 0x3b
 2937 0087 0B       		.uleb128 0xb
 2938 0088 49       		.uleb128 0x49
 2939 0089 13       		.uleb128 0x13
 2940 008a 38       		.uleb128 0x38
 2941 008b 0B       		.uleb128 0xb
 2942 008c 00       		.byte	0
 2943 008d 00       		.byte	0
 2944 008e 0D       		.uleb128 0xd
 2945 008f 01       		.uleb128 0x1
 2946 0090 01       		.byte	0x1
 2947 0091 49       		.uleb128 0x49
 2948 0092 13       		.uleb128 0x13
 2949 0093 01       		.uleb128 0x1
 2950 0094 13       		.uleb128 0x13
 2951 0095 00       		.byte	0
 2952 0096 00       		.byte	0
 2953 0097 0E       		.uleb128 0xe
 2954 0098 21       		.uleb128 0x21
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 104


 2955 0099 00       		.byte	0
 2956 009a 49       		.uleb128 0x49
 2957 009b 13       		.uleb128 0x13
 2958 009c 2F       		.uleb128 0x2f
 2959 009d 0B       		.uleb128 0xb
 2960 009e 00       		.byte	0
 2961 009f 00       		.byte	0
 2962 00a0 0F       		.uleb128 0xf
 2963 00a1 0D       		.uleb128 0xd
 2964 00a2 00       		.byte	0
 2965 00a3 03       		.uleb128 0x3
 2966 00a4 0E       		.uleb128 0xe
 2967 00a5 3A       		.uleb128 0x3a
 2968 00a6 0B       		.uleb128 0xb
 2969 00a7 3B       		.uleb128 0x3b
 2970 00a8 05       		.uleb128 0x5
 2971 00a9 49       		.uleb128 0x49
 2972 00aa 13       		.uleb128 0x13
 2973 00ab 38       		.uleb128 0x38
 2974 00ac 0B       		.uleb128 0xb
 2975 00ad 00       		.byte	0
 2976 00ae 00       		.byte	0
 2977 00af 10       		.uleb128 0x10
 2978 00b0 13       		.uleb128 0x13
 2979 00b1 01       		.byte	0x1
 2980 00b2 0B       		.uleb128 0xb
 2981 00b3 0B       		.uleb128 0xb
 2982 00b4 3A       		.uleb128 0x3a
 2983 00b5 0B       		.uleb128 0xb
 2984 00b6 3B       		.uleb128 0x3b
 2985 00b7 05       		.uleb128 0x5
 2986 00b8 01       		.uleb128 0x1
 2987 00b9 13       		.uleb128 0x13
 2988 00ba 00       		.byte	0
 2989 00bb 00       		.byte	0
 2990 00bc 11       		.uleb128 0x11
 2991 00bd 0D       		.uleb128 0xd
 2992 00be 00       		.byte	0
 2993 00bf 03       		.uleb128 0x3
 2994 00c0 08       		.uleb128 0x8
 2995 00c1 3A       		.uleb128 0x3a
 2996 00c2 0B       		.uleb128 0xb
 2997 00c3 3B       		.uleb128 0x3b
 2998 00c4 05       		.uleb128 0x5
 2999 00c5 49       		.uleb128 0x49
 3000 00c6 13       		.uleb128 0x13
 3001 00c7 38       		.uleb128 0x38
 3002 00c8 0B       		.uleb128 0xb
 3003 00c9 00       		.byte	0
 3004 00ca 00       		.byte	0
 3005 00cb 12       		.uleb128 0x12
 3006 00cc 26       		.uleb128 0x26
 3007 00cd 00       		.byte	0
 3008 00ce 00       		.byte	0
 3009 00cf 00       		.byte	0
 3010 00d0 13       		.uleb128 0x13
 3011 00d1 0F       		.uleb128 0xf
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 105


 3012 00d2 00       		.byte	0
 3013 00d3 0B       		.uleb128 0xb
 3014 00d4 0B       		.uleb128 0xb
 3015 00d5 00       		.byte	0
 3016 00d6 00       		.byte	0
 3017 00d7 14       		.uleb128 0x14
 3018 00d8 2E       		.uleb128 0x2e
 3019 00d9 01       		.byte	0x1
 3020 00da 03       		.uleb128 0x3
 3021 00db 0E       		.uleb128 0xe
 3022 00dc 3A       		.uleb128 0x3a
 3023 00dd 0B       		.uleb128 0xb
 3024 00de 3B       		.uleb128 0x3b
 3025 00df 05       		.uleb128 0x5
 3026 00e0 27       		.uleb128 0x27
 3027 00e1 19       		.uleb128 0x19
 3028 00e2 11       		.uleb128 0x11
 3029 00e3 01       		.uleb128 0x1
 3030 00e4 12       		.uleb128 0x12
 3031 00e5 06       		.uleb128 0x6
 3032 00e6 40       		.uleb128 0x40
 3033 00e7 18       		.uleb128 0x18
 3034 00e8 9742     		.uleb128 0x2117
 3035 00ea 19       		.uleb128 0x19
 3036 00eb 01       		.uleb128 0x1
 3037 00ec 13       		.uleb128 0x13
 3038 00ed 00       		.byte	0
 3039 00ee 00       		.byte	0
 3040 00ef 15       		.uleb128 0x15
 3041 00f0 34       		.uleb128 0x34
 3042 00f1 00       		.byte	0
 3043 00f2 03       		.uleb128 0x3
 3044 00f3 0E       		.uleb128 0xe
 3045 00f4 3A       		.uleb128 0x3a
 3046 00f5 0B       		.uleb128 0xb
 3047 00f6 3B       		.uleb128 0x3b
 3048 00f7 05       		.uleb128 0x5
 3049 00f8 49       		.uleb128 0x49
 3050 00f9 13       		.uleb128 0x13
 3051 00fa 02       		.uleb128 0x2
 3052 00fb 17       		.uleb128 0x17
 3053 00fc 00       		.byte	0
 3054 00fd 00       		.byte	0
 3055 00fe 16       		.uleb128 0x16
 3056 00ff 898201   		.uleb128 0x4109
 3057 0102 00       		.byte	0
 3058 0103 11       		.uleb128 0x11
 3059 0104 01       		.uleb128 0x1
 3060 0105 31       		.uleb128 0x31
 3061 0106 13       		.uleb128 0x13
 3062 0107 00       		.byte	0
 3063 0108 00       		.byte	0
 3064 0109 17       		.uleb128 0x17
 3065 010a 2E       		.uleb128 0x2e
 3066 010b 00       		.byte	0
 3067 010c 3F       		.uleb128 0x3f
 3068 010d 19       		.uleb128 0x19
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 106


 3069 010e 03       		.uleb128 0x3
 3070 010f 0E       		.uleb128 0xe
 3071 0110 3A       		.uleb128 0x3a
 3072 0111 0B       		.uleb128 0xb
 3073 0112 3B       		.uleb128 0x3b
 3074 0113 0B       		.uleb128 0xb
 3075 0114 27       		.uleb128 0x27
 3076 0115 19       		.uleb128 0x19
 3077 0116 49       		.uleb128 0x49
 3078 0117 13       		.uleb128 0x13
 3079 0118 11       		.uleb128 0x11
 3080 0119 01       		.uleb128 0x1
 3081 011a 12       		.uleb128 0x12
 3082 011b 06       		.uleb128 0x6
 3083 011c 40       		.uleb128 0x40
 3084 011d 18       		.uleb128 0x18
 3085 011e 9742     		.uleb128 0x2117
 3086 0120 19       		.uleb128 0x19
 3087 0121 00       		.byte	0
 3088 0122 00       		.byte	0
 3089 0123 18       		.uleb128 0x18
 3090 0124 2E       		.uleb128 0x2e
 3091 0125 01       		.byte	0x1
 3092 0126 3F       		.uleb128 0x3f
 3093 0127 19       		.uleb128 0x19
 3094 0128 03       		.uleb128 0x3
 3095 0129 0E       		.uleb128 0xe
 3096 012a 3A       		.uleb128 0x3a
 3097 012b 0B       		.uleb128 0xb
 3098 012c 3B       		.uleb128 0x3b
 3099 012d 05       		.uleb128 0x5
 3100 012e 27       		.uleb128 0x27
 3101 012f 19       		.uleb128 0x19
 3102 0130 49       		.uleb128 0x49
 3103 0131 13       		.uleb128 0x13
 3104 0132 11       		.uleb128 0x11
 3105 0133 01       		.uleb128 0x1
 3106 0134 12       		.uleb128 0x12
 3107 0135 06       		.uleb128 0x6
 3108 0136 40       		.uleb128 0x40
 3109 0137 18       		.uleb128 0x18
 3110 0138 9742     		.uleb128 0x2117
 3111 013a 19       		.uleb128 0x19
 3112 013b 01       		.uleb128 0x1
 3113 013c 13       		.uleb128 0x13
 3114 013d 00       		.byte	0
 3115 013e 00       		.byte	0
 3116 013f 19       		.uleb128 0x19
 3117 0140 05       		.uleb128 0x5
 3118 0141 00       		.byte	0
 3119 0142 03       		.uleb128 0x3
 3120 0143 0E       		.uleb128 0xe
 3121 0144 3A       		.uleb128 0x3a
 3122 0145 0B       		.uleb128 0xb
 3123 0146 3B       		.uleb128 0x3b
 3124 0147 05       		.uleb128 0x5
 3125 0148 49       		.uleb128 0x49
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 107


 3126 0149 13       		.uleb128 0x13
 3127 014a 02       		.uleb128 0x2
 3128 014b 17       		.uleb128 0x17
 3129 014c 00       		.byte	0
 3130 014d 00       		.byte	0
 3131 014e 1A       		.uleb128 0x1a
 3132 014f 898201   		.uleb128 0x4109
 3133 0152 01       		.byte	0x1
 3134 0153 11       		.uleb128 0x11
 3135 0154 01       		.uleb128 0x1
 3136 0155 31       		.uleb128 0x31
 3137 0156 13       		.uleb128 0x13
 3138 0157 01       		.uleb128 0x1
 3139 0158 13       		.uleb128 0x13
 3140 0159 00       		.byte	0
 3141 015a 00       		.byte	0
 3142 015b 1B       		.uleb128 0x1b
 3143 015c 8A8201   		.uleb128 0x410a
 3144 015f 00       		.byte	0
 3145 0160 02       		.uleb128 0x2
 3146 0161 18       		.uleb128 0x18
 3147 0162 9142     		.uleb128 0x2111
 3148 0164 18       		.uleb128 0x18
 3149 0165 00       		.byte	0
 3150 0166 00       		.byte	0
 3151 0167 1C       		.uleb128 0x1c
 3152 0168 2E       		.uleb128 0x2e
 3153 0169 01       		.byte	0x1
 3154 016a 3F       		.uleb128 0x3f
 3155 016b 19       		.uleb128 0x19
 3156 016c 03       		.uleb128 0x3
 3157 016d 0E       		.uleb128 0xe
 3158 016e 3A       		.uleb128 0x3a
 3159 016f 0B       		.uleb128 0xb
 3160 0170 3B       		.uleb128 0x3b
 3161 0171 05       		.uleb128 0x5
 3162 0172 27       		.uleb128 0x27
 3163 0173 19       		.uleb128 0x19
 3164 0174 11       		.uleb128 0x11
 3165 0175 01       		.uleb128 0x1
 3166 0176 12       		.uleb128 0x12
 3167 0177 06       		.uleb128 0x6
 3168 0178 40       		.uleb128 0x40
 3169 0179 18       		.uleb128 0x18
 3170 017a 9742     		.uleb128 0x2117
 3171 017c 19       		.uleb128 0x19
 3172 017d 01       		.uleb128 0x1
 3173 017e 13       		.uleb128 0x13
 3174 017f 00       		.byte	0
 3175 0180 00       		.byte	0
 3176 0181 1D       		.uleb128 0x1d
 3177 0182 34       		.uleb128 0x34
 3178 0183 00       		.byte	0
 3179 0184 03       		.uleb128 0x3
 3180 0185 0E       		.uleb128 0xe
 3181 0186 3A       		.uleb128 0x3a
 3182 0187 0B       		.uleb128 0xb
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 108


 3183 0188 3B       		.uleb128 0x3b
 3184 0189 05       		.uleb128 0x5
 3185 018a 49       		.uleb128 0x49
 3186 018b 13       		.uleb128 0x13
 3187 018c 1C       		.uleb128 0x1c
 3188 018d 0B       		.uleb128 0xb
 3189 018e 00       		.byte	0
 3190 018f 00       		.byte	0
 3191 0190 1E       		.uleb128 0x1e
 3192 0191 898201   		.uleb128 0x4109
 3193 0194 01       		.byte	0x1
 3194 0195 11       		.uleb128 0x11
 3195 0196 01       		.uleb128 0x1
 3196 0197 31       		.uleb128 0x31
 3197 0198 13       		.uleb128 0x13
 3198 0199 00       		.byte	0
 3199 019a 00       		.byte	0
 3200 019b 1F       		.uleb128 0x1f
 3201 019c 26       		.uleb128 0x26
 3202 019d 00       		.byte	0
 3203 019e 49       		.uleb128 0x49
 3204 019f 13       		.uleb128 0x13
 3205 01a0 00       		.byte	0
 3206 01a1 00       		.byte	0
 3207 01a2 20       		.uleb128 0x20
 3208 01a3 2E       		.uleb128 0x2e
 3209 01a4 00       		.byte	0
 3210 01a5 3F       		.uleb128 0x3f
 3211 01a6 19       		.uleb128 0x19
 3212 01a7 03       		.uleb128 0x3
 3213 01a8 0E       		.uleb128 0xe
 3214 01a9 3A       		.uleb128 0x3a
 3215 01aa 0B       		.uleb128 0xb
 3216 01ab 3B       		.uleb128 0x3b
 3217 01ac 05       		.uleb128 0x5
 3218 01ad 27       		.uleb128 0x27
 3219 01ae 19       		.uleb128 0x19
 3220 01af 11       		.uleb128 0x11
 3221 01b0 01       		.uleb128 0x1
 3222 01b1 12       		.uleb128 0x12
 3223 01b2 06       		.uleb128 0x6
 3224 01b3 40       		.uleb128 0x40
 3225 01b4 18       		.uleb128 0x18
 3226 01b5 9742     		.uleb128 0x2117
 3227 01b7 19       		.uleb128 0x19
 3228 01b8 00       		.byte	0
 3229 01b9 00       		.byte	0
 3230 01ba 21       		.uleb128 0x21
 3231 01bb 34       		.uleb128 0x34
 3232 01bc 00       		.byte	0
 3233 01bd 03       		.uleb128 0x3
 3234 01be 0E       		.uleb128 0xe
 3235 01bf 3A       		.uleb128 0x3a
 3236 01c0 0B       		.uleb128 0xb
 3237 01c1 3B       		.uleb128 0x3b
 3238 01c2 05       		.uleb128 0x5
 3239 01c3 49       		.uleb128 0x49
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 109


 3240 01c4 13       		.uleb128 0x13
 3241 01c5 02       		.uleb128 0x2
 3242 01c6 18       		.uleb128 0x18
 3243 01c7 00       		.byte	0
 3244 01c8 00       		.byte	0
 3245 01c9 22       		.uleb128 0x22
 3246 01ca 05       		.uleb128 0x5
 3247 01cb 00       		.byte	0
 3248 01cc 03       		.uleb128 0x3
 3249 01cd 0E       		.uleb128 0xe
 3250 01ce 3A       		.uleb128 0x3a
 3251 01cf 0B       		.uleb128 0xb
 3252 01d0 3B       		.uleb128 0x3b
 3253 01d1 05       		.uleb128 0x5
 3254 01d2 49       		.uleb128 0x49
 3255 01d3 13       		.uleb128 0x13
 3256 01d4 02       		.uleb128 0x2
 3257 01d5 18       		.uleb128 0x18
 3258 01d6 00       		.byte	0
 3259 01d7 00       		.byte	0
 3260 01d8 23       		.uleb128 0x23
 3261 01d9 34       		.uleb128 0x34
 3262 01da 00       		.byte	0
 3263 01db 03       		.uleb128 0x3
 3264 01dc 0E       		.uleb128 0xe
 3265 01dd 3A       		.uleb128 0x3a
 3266 01de 0B       		.uleb128 0xb
 3267 01df 3B       		.uleb128 0x3b
 3268 01e0 05       		.uleb128 0x5
 3269 01e1 49       		.uleb128 0x49
 3270 01e2 13       		.uleb128 0x13
 3271 01e3 3F       		.uleb128 0x3f
 3272 01e4 19       		.uleb128 0x19
 3273 01e5 3C       		.uleb128 0x3c
 3274 01e6 19       		.uleb128 0x19
 3275 01e7 00       		.byte	0
 3276 01e8 00       		.byte	0
 3277 01e9 24       		.uleb128 0x24
 3278 01ea 34       		.uleb128 0x34
 3279 01eb 00       		.byte	0
 3280 01ec 03       		.uleb128 0x3
 3281 01ed 0E       		.uleb128 0xe
 3282 01ee 3A       		.uleb128 0x3a
 3283 01ef 0B       		.uleb128 0xb
 3284 01f0 3B       		.uleb128 0x3b
 3285 01f1 0B       		.uleb128 0xb
 3286 01f2 49       		.uleb128 0x49
 3287 01f3 13       		.uleb128 0x13
 3288 01f4 3F       		.uleb128 0x3f
 3289 01f5 19       		.uleb128 0x19
 3290 01f6 02       		.uleb128 0x2
 3291 01f7 18       		.uleb128 0x18
 3292 01f8 00       		.byte	0
 3293 01f9 00       		.byte	0
 3294 01fa 25       		.uleb128 0x25
 3295 01fb 2E       		.uleb128 0x2e
 3296 01fc 00       		.byte	0
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 110


 3297 01fd 3F       		.uleb128 0x3f
 3298 01fe 19       		.uleb128 0x19
 3299 01ff 3C       		.uleb128 0x3c
 3300 0200 19       		.uleb128 0x19
 3301 0201 6E       		.uleb128 0x6e
 3302 0202 0E       		.uleb128 0xe
 3303 0203 03       		.uleb128 0x3
 3304 0204 0E       		.uleb128 0xe
 3305 0205 3A       		.uleb128 0x3a
 3306 0206 0B       		.uleb128 0xb
 3307 0207 3B       		.uleb128 0x3b
 3308 0208 05       		.uleb128 0x5
 3309 0209 00       		.byte	0
 3310 020a 00       		.byte	0
 3311 020b 26       		.uleb128 0x26
 3312 020c 2E       		.uleb128 0x2e
 3313 020d 00       		.byte	0
 3314 020e 3F       		.uleb128 0x3f
 3315 020f 19       		.uleb128 0x19
 3316 0210 3C       		.uleb128 0x3c
 3317 0211 19       		.uleb128 0x19
 3318 0212 6E       		.uleb128 0x6e
 3319 0213 0E       		.uleb128 0xe
 3320 0214 03       		.uleb128 0x3
 3321 0215 0E       		.uleb128 0xe
 3322 0216 3A       		.uleb128 0x3a
 3323 0217 0B       		.uleb128 0xb
 3324 0218 3B       		.uleb128 0x3b
 3325 0219 0B       		.uleb128 0xb
 3326 021a 00       		.byte	0
 3327 021b 00       		.byte	0
 3328 021c 00       		.byte	0
 3329              		.section	.debug_loc,"",%progbits
 3330              	.Ldebug_loc0:
 3331              	.LLST0:
 3332 0000 0A000000 		.4byte	.LVL0
 3333 0004 12000000 		.4byte	.LVL1
 3334 0008 0100     		.2byte	0x1
 3335 000a 51       		.byte	0x51
 3336 000b 12000000 		.4byte	.LVL1
 3337 000f 20000000 		.4byte	.LFE18
 3338 0013 0100     		.2byte	0x1
 3339 0015 53       		.byte	0x53
 3340 0016 00000000 		.4byte	0
 3341 001a 00000000 		.4byte	0
 3342              	.LLST1:
 3343 001e 06000000 		.4byte	.LVL3
 3344 0022 0F000000 		.4byte	.LVL5-1
 3345 0026 0100     		.2byte	0x1
 3346 0028 53       		.byte	0x53
 3347 0029 00000000 		.4byte	0
 3348 002d 00000000 		.4byte	0
 3349              	.LLST2:
 3350 0031 00000000 		.4byte	.LVL6
 3351 0035 37000000 		.4byte	.LVL8-1
 3352 0039 0100     		.2byte	0x1
 3353 003b 50       		.byte	0x50
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 111


 3354 003c 37000000 		.4byte	.LVL8-1
 3355 0040 40000000 		.4byte	.LFE3
 3356 0044 0400     		.2byte	0x4
 3357 0046 F3       		.byte	0xf3
 3358 0047 01       		.uleb128 0x1
 3359 0048 50       		.byte	0x50
 3360 0049 9F       		.byte	0x9f
 3361 004a 00000000 		.4byte	0
 3362 004e 00000000 		.4byte	0
 3363              	.LLST3:
 3364 0052 30000000 		.4byte	.LVL7
 3365 0056 3A000000 		.4byte	.LVL9
 3366 005a 0100     		.2byte	0x1
 3367 005c 54       		.byte	0x54
 3368 005d 3A000000 		.4byte	.LVL9
 3369 0061 40000000 		.4byte	.LFE3
 3370 0065 0100     		.2byte	0x1
 3371 0067 50       		.byte	0x50
 3372 0068 00000000 		.4byte	0
 3373 006c 00000000 		.4byte	0
 3374              	.LLST4:
 3375 0070 02000000 		.4byte	.LVL10
 3376 0074 22000000 		.4byte	.LVL12
 3377 0078 0200     		.2byte	0x2
 3378 007a 30       		.byte	0x30
 3379 007b 9F       		.byte	0x9f
 3380 007c 22000000 		.4byte	.LVL12
 3381 0080 2C000000 		.4byte	.LFE4
 3382 0084 0100     		.2byte	0x1
 3383 0086 50       		.byte	0x50
 3384 0087 00000000 		.4byte	0
 3385 008b 00000000 		.4byte	0
 3386              	.LLST5:
 3387 008f 02000000 		.4byte	.LVL13
 3388 0093 12000000 		.4byte	.LVL14
 3389 0097 0300     		.2byte	0x3
 3390 0099 09       		.byte	0x9
 3391 009a FF       		.byte	0xff
 3392 009b 9F       		.byte	0x9f
 3393 009c 12000000 		.4byte	.LVL14
 3394 00a0 14000000 		.4byte	.LVL15
 3395 00a4 0100     		.2byte	0x1
 3396 00a6 50       		.byte	0x50
 3397 00a7 18000000 		.4byte	.LVL16
 3398 00ab 25000000 		.4byte	.LVL17-1
 3399 00af 0100     		.2byte	0x1
 3400 00b1 50       		.byte	0x50
 3401 00b2 26000000 		.4byte	.LVL17
 3402 00b6 30000000 		.4byte	.LVL19
 3403 00ba 0100     		.2byte	0x1
 3404 00bc 50       		.byte	0x50
 3405 00bd 30000000 		.4byte	.LVL19
 3406 00c1 32000000 		.4byte	.LVL20
 3407 00c5 0300     		.2byte	0x3
 3408 00c7 09       		.byte	0x9
 3409 00c8 FF       		.byte	0xff
 3410 00c9 9F       		.byte	0x9f
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 112


 3411 00ca 32000000 		.4byte	.LVL20
 3412 00ce 3C000000 		.4byte	.LFE5
 3413 00d2 0100     		.2byte	0x1
 3414 00d4 50       		.byte	0x50
 3415 00d5 00000000 		.4byte	0
 3416 00d9 00000000 		.4byte	0
 3417              	.LLST6:
 3418 00dd 12000000 		.4byte	.LVL14
 3419 00e1 30000000 		.4byte	.LVL19
 3420 00e5 0100     		.2byte	0x1
 3421 00e7 54       		.byte	0x54
 3422 00e8 00000000 		.4byte	0
 3423 00ec 00000000 		.4byte	0
 3424              	.LLST7:
 3425 00f0 00000000 		.4byte	.LVL21
 3426 00f4 08000000 		.4byte	.LVL22
 3427 00f8 0100     		.2byte	0x1
 3428 00fa 50       		.byte	0x50
 3429 00fb 08000000 		.4byte	.LVL22
 3430 00ff 9C000000 		.4byte	.LFE7
 3431 0103 0400     		.2byte	0x4
 3432 0105 F3       		.byte	0xf3
 3433 0106 01       		.uleb128 0x1
 3434 0107 50       		.byte	0x50
 3435 0108 9F       		.byte	0x9f
 3436 0109 00000000 		.4byte	0
 3437 010d 00000000 		.4byte	0
 3438              	.LLST8:
 3439 0111 00000000 		.4byte	.LVL21
 3440 0115 10000000 		.4byte	.LVL23
 3441 0119 0100     		.2byte	0x1
 3442 011b 51       		.byte	0x51
 3443 011c 10000000 		.4byte	.LVL23
 3444 0120 9C000000 		.4byte	.LFE7
 3445 0124 0400     		.2byte	0x4
 3446 0126 F3       		.byte	0xf3
 3447 0127 01       		.uleb128 0x1
 3448 0128 51       		.byte	0x51
 3449 0129 9F       		.byte	0x9f
 3450 012a 00000000 		.4byte	0
 3451 012e 00000000 		.4byte	0
 3452              	.LLST9:
 3453 0132 00000000 		.4byte	.LVL21
 3454 0136 18000000 		.4byte	.LVL25
 3455 013a 0100     		.2byte	0x1
 3456 013c 52       		.byte	0x52
 3457 013d 18000000 		.4byte	.LVL25
 3458 0141 96000000 		.4byte	.LVL37
 3459 0145 0100     		.2byte	0x1
 3460 0147 56       		.byte	0x56
 3461 0148 96000000 		.4byte	.LVL37
 3462 014c 9C000000 		.4byte	.LFE7
 3463 0150 0400     		.2byte	0x4
 3464 0152 F3       		.byte	0xf3
 3465 0153 01       		.uleb128 0x1
 3466 0154 52       		.byte	0x52
 3467 0155 9F       		.byte	0x9f
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 113


 3468 0156 00000000 		.4byte	0
 3469 015a 00000000 		.4byte	0
 3470              	.LLST10:
 3471 015e 14000000 		.4byte	.LVL24
 3472 0162 18000000 		.4byte	.LVL25
 3473 0166 0200     		.2byte	0x2
 3474 0168 30       		.byte	0x30
 3475 0169 9F       		.byte	0x9f
 3476 016a 18000000 		.4byte	.LVL25
 3477 016e 96000000 		.4byte	.LVL36
 3478 0172 0100     		.2byte	0x1
 3479 0174 55       		.byte	0x55
 3480 0175 00000000 		.4byte	0
 3481 0179 00000000 		.4byte	0
 3482              	.LLST11:
 3483 017d 1C000000 		.4byte	.LVL26
 3484 0181 3B000000 		.4byte	.LVL27-1
 3485 0185 0100     		.2byte	0x1
 3486 0187 50       		.byte	0x50
 3487 0188 4E000000 		.4byte	.LVL28
 3488 018c 6D000000 		.4byte	.LVL29-1
 3489 0190 0100     		.2byte	0x1
 3490 0192 50       		.byte	0x50
 3491 0193 74000000 		.4byte	.LVL30
 3492 0197 85000000 		.4byte	.LVL31-1
 3493 019b 0100     		.2byte	0x1
 3494 019d 50       		.byte	0x50
 3495 019e 00000000 		.4byte	0
 3496 01a2 00000000 		.4byte	0
 3497              	.LLST12:
 3498 01a6 14000000 		.4byte	.LVL24
 3499 01aa 96000000 		.4byte	.LVL35
 3500 01ae 0100     		.2byte	0x1
 3501 01b0 54       		.byte	0x54
 3502 01b1 00000000 		.4byte	0
 3503 01b5 00000000 		.4byte	0
 3504              	.LLST13:
 3505 01b9 00000000 		.4byte	.LVL38
 3506 01bd 13000000 		.4byte	.LVL39-1
 3507 01c1 0100     		.2byte	0x1
 3508 01c3 50       		.byte	0x50
 3509 01c4 13000000 		.4byte	.LVL39-1
 3510 01c8 3C000000 		.4byte	.LFE9
 3511 01cc 0400     		.2byte	0x4
 3512 01ce F3       		.byte	0xf3
 3513 01cf 01       		.uleb128 0x1
 3514 01d0 50       		.byte	0x50
 3515 01d1 9F       		.byte	0x9f
 3516 01d2 00000000 		.4byte	0
 3517 01d6 00000000 		.4byte	0
 3518              	.LLST14:
 3519 01da 08000000 		.4byte	.LVL42
 3520 01de 40000000 		.4byte	.LFE10
 3521 01e2 0100     		.2byte	0x1
 3522 01e4 53       		.byte	0x53
 3523 01e5 00000000 		.4byte	0
 3524 01e9 00000000 		.4byte	0
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 114


 3525              	.LLST15:
 3526 01ed 02000000 		.4byte	.LVL41
 3527 01f1 08000000 		.4byte	.LVL42
 3528 01f5 0200     		.2byte	0x2
 3529 01f7 30       		.byte	0x30
 3530 01f8 9F       		.byte	0x9f
 3531 01f9 08000000 		.4byte	.LVL42
 3532 01fd 40000000 		.4byte	.LFE10
 3533 0201 0100     		.2byte	0x1
 3534 0203 50       		.byte	0x50
 3535 0204 00000000 		.4byte	0
 3536 0208 00000000 		.4byte	0
 3537              	.LLST16:
 3538 020c 0C000000 		.4byte	.LVL43
 3539 0210 1E000000 		.4byte	.LVL46
 3540 0214 0100     		.2byte	0x1
 3541 0216 52       		.byte	0x52
 3542 0217 20000000 		.4byte	.LVL47
 3543 021b 26000000 		.4byte	.LVL48
 3544 021f 0100     		.2byte	0x1
 3545 0221 51       		.byte	0x51
 3546 0222 26000000 		.4byte	.LVL48
 3547 0226 36000000 		.4byte	.LVL52
 3548 022a 0100     		.2byte	0x1
 3549 022c 52       		.byte	0x52
 3550 022d 00000000 		.4byte	0
 3551 0231 00000000 		.4byte	0
 3552              	.LLST17:
 3553 0235 00000000 		.4byte	.LVL53
 3554 0239 05000000 		.4byte	.LVL54-1
 3555 023d 0100     		.2byte	0x1
 3556 023f 50       		.byte	0x50
 3557 0240 05000000 		.4byte	.LVL54-1
 3558 0244 08000000 		.4byte	.LFE12
 3559 0248 0400     		.2byte	0x4
 3560 024a F3       		.byte	0xf3
 3561 024b 01       		.uleb128 0x1
 3562 024c 50       		.byte	0x50
 3563 024d 9F       		.byte	0x9f
 3564 024e 00000000 		.4byte	0
 3565 0252 00000000 		.4byte	0
 3566              	.LLST18:
 3567 0256 00000000 		.4byte	.LVL55
 3568 025a 08000000 		.4byte	.LVL56
 3569 025e 0100     		.2byte	0x1
 3570 0260 50       		.byte	0x50
 3571 0261 08000000 		.4byte	.LVL56
 3572 0265 0A000000 		.4byte	.LVL57
 3573 0269 0300     		.2byte	0x3
 3574 026b 70       		.byte	0x70
 3575 026c 01       		.sleb128 1
 3576 026d 9F       		.byte	0x9f
 3577 026e 0A000000 		.4byte	.LVL57
 3578 0272 30000000 		.4byte	.LFE13
 3579 0276 0400     		.2byte	0x4
 3580 0278 F3       		.byte	0xf3
 3581 0279 01       		.uleb128 0x1
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 115


 3582 027a 50       		.byte	0x50
 3583 027b 9F       		.byte	0x9f
 3584 027c 00000000 		.4byte	0
 3585 0280 00000000 		.4byte	0
 3586              	.LLST19:
 3587 0284 00000000 		.4byte	.LVL58
 3588 0288 08000000 		.4byte	.LVL59
 3589 028c 0100     		.2byte	0x1
 3590 028e 50       		.byte	0x50
 3591 028f 08000000 		.4byte	.LVL59
 3592 0293 0A000000 		.4byte	.LVL60
 3593 0297 0300     		.2byte	0x3
 3594 0299 70       		.byte	0x70
 3595 029a 01       		.sleb128 1
 3596 029b 9F       		.byte	0x9f
 3597 029c 0A000000 		.4byte	.LVL60
 3598 02a0 30000000 		.4byte	.LFE14
 3599 02a4 0400     		.2byte	0x4
 3600 02a6 F3       		.byte	0xf3
 3601 02a7 01       		.uleb128 0x1
 3602 02a8 50       		.byte	0x50
 3603 02a9 9F       		.byte	0x9f
 3604 02aa 00000000 		.4byte	0
 3605 02ae 00000000 		.4byte	0
 3606              	.LLST20:
 3607 02b2 00000000 		.4byte	.LVL61
 3608 02b6 06000000 		.4byte	.LVL62
 3609 02ba 0100     		.2byte	0x1
 3610 02bc 50       		.byte	0x50
 3611 02bd 06000000 		.4byte	.LVL62
 3612 02c1 10000000 		.4byte	.LVL65
 3613 02c5 0100     		.2byte	0x1
 3614 02c7 54       		.byte	0x54
 3615 02c8 10000000 		.4byte	.LVL65
 3616 02cc 12000000 		.4byte	.LFE15
 3617 02d0 0400     		.2byte	0x4
 3618 02d2 F3       		.byte	0xf3
 3619 02d3 01       		.uleb128 0x1
 3620 02d4 50       		.byte	0x50
 3621 02d5 9F       		.byte	0x9f
 3622 02d6 00000000 		.4byte	0
 3623 02da 00000000 		.4byte	0
 3624              	.LLST21:
 3625 02de 00000000 		.4byte	.LVL61
 3626 02e2 09000000 		.4byte	.LVL63-1
 3627 02e6 0100     		.2byte	0x1
 3628 02e8 51       		.byte	0x51
 3629 02e9 09000000 		.4byte	.LVL63-1
 3630 02ed 12000000 		.4byte	.LFE15
 3631 02f1 0400     		.2byte	0x4
 3632 02f3 F3       		.byte	0xf3
 3633 02f4 01       		.uleb128 0x1
 3634 02f5 51       		.byte	0x51
 3635 02f6 9F       		.byte	0x9f
 3636 02f7 00000000 		.4byte	0
 3637 02fb 00000000 		.4byte	0
 3638              	.LLST22:
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 116


 3639 02ff 00000000 		.4byte	.LVL66
 3640 0303 08000000 		.4byte	.LVL68
 3641 0307 0100     		.2byte	0x1
 3642 0309 50       		.byte	0x50
 3643 030a 08000000 		.4byte	.LVL68
 3644 030e 0A000000 		.4byte	.LVL69
 3645 0312 0100     		.2byte	0x1
 3646 0314 53       		.byte	0x53
 3647 0315 0A000000 		.4byte	.LVL69
 3648 0319 0C000000 		.4byte	.LVL70
 3649 031d 0100     		.2byte	0x1
 3650 031f 50       		.byte	0x50
 3651 0320 0C000000 		.4byte	.LVL70
 3652 0324 17000000 		.4byte	.LVL72-1
 3653 0328 0100     		.2byte	0x1
 3654 032a 53       		.byte	0x53
 3655 032b 17000000 		.4byte	.LVL72-1
 3656 032f 1A000000 		.4byte	.LFE16
 3657 0333 0400     		.2byte	0x4
 3658 0335 F3       		.byte	0xf3
 3659 0336 01       		.uleb128 0x1
 3660 0337 50       		.byte	0x50
 3661 0338 9F       		.byte	0x9f
 3662 0339 00000000 		.4byte	0
 3663 033d 00000000 		.4byte	0
 3664              	.LLST23:
 3665 0341 04000000 		.4byte	.LVL67
 3666 0345 0C000000 		.4byte	.LVL70
 3667 0349 0200     		.2byte	0x2
 3668 034b 30       		.byte	0x30
 3669 034c 9F       		.byte	0x9f
 3670 034d 0C000000 		.4byte	.LVL70
 3671 0351 14000000 		.4byte	.LVL71
 3672 0355 0100     		.2byte	0x1
 3673 0357 50       		.byte	0x50
 3674 0358 18000000 		.4byte	.LVL72
 3675 035c 1A000000 		.4byte	.LFE16
 3676 0360 0100     		.2byte	0x1
 3677 0362 50       		.byte	0x50
 3678 0363 00000000 		.4byte	0
 3679 0367 00000000 		.4byte	0
 3680              	.LLST24:
 3681 036b 02000000 		.4byte	.LVL73
 3682 036f 08000000 		.4byte	.LVL74
 3683 0373 0200     		.2byte	0x2
 3684 0375 30       		.byte	0x30
 3685 0376 9F       		.byte	0x9f
 3686 0377 08000000 		.4byte	.LVL74
 3687 037b 18000000 		.4byte	.LVL79
 3688 037f 0100     		.2byte	0x1
 3689 0381 55       		.byte	0x55
 3690 0382 18000000 		.4byte	.LVL79
 3691 0386 1A000000 		.4byte	.LFE17
 3692 038a 0100     		.2byte	0x1
 3693 038c 50       		.byte	0x50
 3694 038d 00000000 		.4byte	0
 3695 0391 00000000 		.4byte	0
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 117


 3696              	.LLST25:
 3697 0395 02000000 		.4byte	.LVL73
 3698 0399 08000000 		.4byte	.LVL74
 3699 039d 0200     		.2byte	0x2
 3700 039f 30       		.byte	0x30
 3701 03a0 9F       		.byte	0x9f
 3702 03a1 08000000 		.4byte	.LVL74
 3703 03a5 18000000 		.4byte	.LVL78
 3704 03a9 0100     		.2byte	0x1
 3705 03ab 54       		.byte	0x54
 3706 03ac 00000000 		.4byte	0
 3707 03b0 00000000 		.4byte	0
 3708              	.LLST26:
 3709 03b4 02000000 		.4byte	.LVL80
 3710 03b8 06000000 		.4byte	.LVL81
 3711 03bc 0200     		.2byte	0x2
 3712 03be 30       		.byte	0x30
 3713 03bf 9F       		.byte	0x9f
 3714 03c0 06000000 		.4byte	.LVL81
 3715 03c4 34000000 		.4byte	.LVL87
 3716 03c8 0100     		.2byte	0x1
 3717 03ca 55       		.byte	0x55
 3718 03cb 00000000 		.4byte	0
 3719 03cf 00000000 		.4byte	0
 3720              	.LLST27:
 3721 03d3 0E000000 		.4byte	.LVL82
 3722 03d7 12000000 		.4byte	.LVL83
 3723 03db 0200     		.2byte	0x2
 3724 03dd 30       		.byte	0x30
 3725 03de 9F       		.byte	0x9f
 3726 03df 12000000 		.4byte	.LVL83
 3727 03e3 30000000 		.4byte	.LVL86
 3728 03e7 0100     		.2byte	0x1
 3729 03e9 54       		.byte	0x54
 3730 03ea 00000000 		.4byte	0
 3731 03ee 00000000 		.4byte	0
 3732              	.LLST28:
 3733 03f2 0E000000 		.4byte	.LVL82
 3734 03f6 30000000 		.4byte	.LVL86
 3735 03fa 0100     		.2byte	0x1
 3736 03fc 56       		.byte	0x56
 3737 03fd 00000000 		.4byte	0
 3738 0401 00000000 		.4byte	0
 3739              	.LLST29:
 3740 0405 00000000 		.4byte	.LVL88
 3741 0409 04000000 		.4byte	.LVL89
 3742 040d 0100     		.2byte	0x1
 3743 040f 50       		.byte	0x50
 3744 0410 04000000 		.4byte	.LVL89
 3745 0414 14000000 		.4byte	.LFE23
 3746 0418 0400     		.2byte	0x4
 3747 041a F3       		.byte	0xf3
 3748 041b 01       		.uleb128 0x1
 3749 041c 50       		.byte	0x50
 3750 041d 9F       		.byte	0x9f
 3751 041e 00000000 		.4byte	0
 3752 0422 00000000 		.4byte	0
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 118


 3753              	.LLST30:
 3754 0426 00000000 		.4byte	.LVL92
 3755 042a 1A000000 		.4byte	.LVL95
 3756 042e 0100     		.2byte	0x1
 3757 0430 50       		.byte	0x50
 3758 0431 1A000000 		.4byte	.LVL95
 3759 0435 22000000 		.4byte	.LVL96
 3760 0439 0400     		.2byte	0x4
 3761 043b F3       		.byte	0xf3
 3762 043c 01       		.uleb128 0x1
 3763 043d 50       		.byte	0x50
 3764 043e 9F       		.byte	0x9f
 3765 043f 22000000 		.4byte	.LVL96
 3766 0443 24000000 		.4byte	.LVL97
 3767 0447 0100     		.2byte	0x1
 3768 0449 50       		.byte	0x50
 3769 044a 24000000 		.4byte	.LVL97
 3770 044e 30000000 		.4byte	.LFE24
 3771 0452 0400     		.2byte	0x4
 3772 0454 F3       		.byte	0xf3
 3773 0455 01       		.uleb128 0x1
 3774 0456 50       		.byte	0x50
 3775 0457 9F       		.byte	0x9f
 3776 0458 00000000 		.4byte	0
 3777 045c 00000000 		.4byte	0
 3778              	.LLST31:
 3779 0460 28000000 		.4byte	.LVL98
 3780 0464 2A000000 		.4byte	.LVL99
 3781 0468 0100     		.2byte	0x1
 3782 046a 50       		.byte	0x50
 3783 046b 00000000 		.4byte	0
 3784 046f 00000000 		.4byte	0
 3785              	.LLST32:
 3786 0473 02000000 		.4byte	.LVL93
 3787 0477 06000000 		.4byte	.LVL94
 3788 047b 0200     		.2byte	0x2
 3789 047d 31       		.byte	0x31
 3790 047e 9F       		.byte	0x9f
 3791 047f 06000000 		.4byte	.LVL94
 3792 0483 2A000000 		.4byte	.LVL100
 3793 0487 0100     		.2byte	0x1
 3794 0489 54       		.byte	0x54
 3795 048a 00000000 		.4byte	0
 3796 048e 00000000 		.4byte	0
 3797              	.LLST33:
 3798 0492 00000000 		.4byte	.LVL101
 3799 0496 07000000 		.4byte	.LVL102-1
 3800 049a 0100     		.2byte	0x1
 3801 049c 50       		.byte	0x50
 3802 049d 07000000 		.4byte	.LVL102-1
 3803 04a1 14000000 		.4byte	.LFE21
 3804 04a5 0400     		.2byte	0x4
 3805 04a7 F3       		.byte	0xf3
 3806 04a8 01       		.uleb128 0x1
 3807 04a9 50       		.byte	0x50
 3808 04aa 9F       		.byte	0x9f
 3809 04ab 00000000 		.4byte	0
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 119


 3810 04af 00000000 		.4byte	0
 3811              	.LLST34:
 3812 04b3 00000000 		.4byte	.LVL101
 3813 04b7 07000000 		.4byte	.LVL102-1
 3814 04bb 0100     		.2byte	0x1
 3815 04bd 51       		.byte	0x51
 3816 04be 07000000 		.4byte	.LVL102-1
 3817 04c2 12000000 		.4byte	.LVL105
 3818 04c6 0100     		.2byte	0x1
 3819 04c8 54       		.byte	0x54
 3820 04c9 12000000 		.4byte	.LVL105
 3821 04cd 14000000 		.4byte	.LFE21
 3822 04d1 0400     		.2byte	0x4
 3823 04d3 F3       		.byte	0xf3
 3824 04d4 01       		.uleb128 0x1
 3825 04d5 51       		.byte	0x51
 3826 04d6 9F       		.byte	0x9f
 3827 04d7 00000000 		.4byte	0
 3828 04db 00000000 		.4byte	0
 3829              	.LLST35:
 3830 04df 08000000 		.4byte	.LVL102
 3831 04e3 0A000000 		.4byte	.LVL103
 3832 04e7 0100     		.2byte	0x1
 3833 04e9 50       		.byte	0x50
 3834 04ea 00000000 		.4byte	0
 3835 04ee 00000000 		.4byte	0
 3836              	.LLST36:
 3837 04f2 02000000 		.4byte	.LVL106
 3838 04f6 06000000 		.4byte	.LVL107
 3839 04fa 0200     		.2byte	0x2
 3840 04fc 30       		.byte	0x30
 3841 04fd 9F       		.byte	0x9f
 3842 04fe 06000000 		.4byte	.LVL107
 3843 0502 1C000000 		.4byte	.LVL111
 3844 0506 0100     		.2byte	0x1
 3845 0508 54       		.byte	0x54
 3846 0509 00000000 		.4byte	0
 3847 050d 00000000 		.4byte	0
 3848              	.LLST37:
 3849 0511 10000000 		.4byte	.LVL108
 3850 0515 15000000 		.4byte	.LVL109-1
 3851 0519 0100     		.2byte	0x1
 3852 051b 51       		.byte	0x51
 3853 051c 00000000 		.4byte	0
 3854 0520 00000000 		.4byte	0
 3855              		.section	.debug_aranges,"",%progbits
 3856 0000 CC000000 		.4byte	0xcc
 3857 0004 0200     		.2byte	0x2
 3858 0006 00000000 		.4byte	.Ldebug_info0
 3859 000a 04       		.byte	0x4
 3860 000b 00       		.byte	0
 3861 000c 0000     		.2byte	0
 3862 000e 0000     		.2byte	0
 3863 0010 00000000 		.4byte	.LFB18
 3864 0014 20000000 		.4byte	.LFE18-.LFB18
 3865 0018 00000000 		.4byte	.LFB19
 3866 001c 08000000 		.4byte	.LFE19-.LFB19
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 120


 3867 0020 00000000 		.4byte	.LFB8
 3868 0024 18000000 		.4byte	.LFE8-.LFB8
 3869 0028 00000000 		.4byte	.LFB2
 3870 002c 10000000 		.4byte	.LFE2-.LFB2
 3871 0030 00000000 		.4byte	.LFB3
 3872 0034 40000000 		.4byte	.LFE3-.LFB3
 3873 0038 00000000 		.4byte	.LFB4
 3874 003c 2C000000 		.4byte	.LFE4-.LFB4
 3875 0040 00000000 		.4byte	.LFB5
 3876 0044 3C000000 		.4byte	.LFE5-.LFB5
 3877 0048 00000000 		.4byte	.LFB7
 3878 004c 9C000000 		.4byte	.LFE7-.LFB7
 3879 0050 00000000 		.4byte	.LFB9
 3880 0054 3C000000 		.4byte	.LFE9-.LFB9
 3881 0058 00000000 		.4byte	.LFB10
 3882 005c 40000000 		.4byte	.LFE10-.LFB10
 3883 0060 00000000 		.4byte	.LFB11
 3884 0064 02000000 		.4byte	.LFE11-.LFB11
 3885 0068 00000000 		.4byte	.LFB12
 3886 006c 08000000 		.4byte	.LFE12-.LFB12
 3887 0070 00000000 		.4byte	.LFB13
 3888 0074 30000000 		.4byte	.LFE13-.LFB13
 3889 0078 00000000 		.4byte	.LFB14
 3890 007c 30000000 		.4byte	.LFE14-.LFB14
 3891 0080 00000000 		.4byte	.LFB15
 3892 0084 12000000 		.4byte	.LFE15-.LFB15
 3893 0088 00000000 		.4byte	.LFB16
 3894 008c 1A000000 		.4byte	.LFE16-.LFB16
 3895 0090 00000000 		.4byte	.LFB17
 3896 0094 1A000000 		.4byte	.LFE17-.LFB17
 3897 0098 00000000 		.4byte	.LFB22
 3898 009c 3C000000 		.4byte	.LFE22-.LFB22
 3899 00a0 00000000 		.4byte	.LFB23
 3900 00a4 14000000 		.4byte	.LFE23-.LFB23
 3901 00a8 00000000 		.4byte	.LFB24
 3902 00ac 30000000 		.4byte	.LFE24-.LFB24
 3903 00b0 00000000 		.4byte	.LFB21
 3904 00b4 14000000 		.4byte	.LFE21-.LFB21
 3905 00b8 00000000 		.4byte	.LFB20
 3906 00bc 24000000 		.4byte	.LFE20-.LFB20
 3907 00c0 00000000 		.4byte	.LFB6
 3908 00c4 1C000000 		.4byte	.LFE6-.LFB6
 3909 00c8 00000000 		.4byte	0
 3910 00cc 00000000 		.4byte	0
 3911              		.section	.debug_ranges,"",%progbits
 3912              	.Ldebug_ranges0:
 3913 0000 00000000 		.4byte	.LFB18
 3914 0004 20000000 		.4byte	.LFE18
 3915 0008 00000000 		.4byte	.LFB19
 3916 000c 08000000 		.4byte	.LFE19
 3917 0010 00000000 		.4byte	.LFB8
 3918 0014 18000000 		.4byte	.LFE8
 3919 0018 00000000 		.4byte	.LFB2
 3920 001c 10000000 		.4byte	.LFE2
 3921 0020 00000000 		.4byte	.LFB3
 3922 0024 40000000 		.4byte	.LFE3
 3923 0028 00000000 		.4byte	.LFB4
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 121


 3924 002c 2C000000 		.4byte	.LFE4
 3925 0030 00000000 		.4byte	.LFB5
 3926 0034 3C000000 		.4byte	.LFE5
 3927 0038 00000000 		.4byte	.LFB7
 3928 003c 9C000000 		.4byte	.LFE7
 3929 0040 00000000 		.4byte	.LFB9
 3930 0044 3C000000 		.4byte	.LFE9
 3931 0048 00000000 		.4byte	.LFB10
 3932 004c 40000000 		.4byte	.LFE10
 3933 0050 00000000 		.4byte	.LFB11
 3934 0054 02000000 		.4byte	.LFE11
 3935 0058 00000000 		.4byte	.LFB12
 3936 005c 08000000 		.4byte	.LFE12
 3937 0060 00000000 		.4byte	.LFB13
 3938 0064 30000000 		.4byte	.LFE13
 3939 0068 00000000 		.4byte	.LFB14
 3940 006c 30000000 		.4byte	.LFE14
 3941 0070 00000000 		.4byte	.LFB15
 3942 0074 12000000 		.4byte	.LFE15
 3943 0078 00000000 		.4byte	.LFB16
 3944 007c 1A000000 		.4byte	.LFE16
 3945 0080 00000000 		.4byte	.LFB17
 3946 0084 1A000000 		.4byte	.LFE17
 3947 0088 00000000 		.4byte	.LFB22
 3948 008c 3C000000 		.4byte	.LFE22
 3949 0090 00000000 		.4byte	.LFB23
 3950 0094 14000000 		.4byte	.LFE23
 3951 0098 00000000 		.4byte	.LFB24
 3952 009c 30000000 		.4byte	.LFE24
 3953 00a0 00000000 		.4byte	.LFB21
 3954 00a4 14000000 		.4byte	.LFE21
 3955 00a8 00000000 		.4byte	.LFB20
 3956 00ac 24000000 		.4byte	.LFE20
 3957 00b0 00000000 		.4byte	.LFB6
 3958 00b4 1C000000 		.4byte	.LFE6
 3959 00b8 00000000 		.4byte	0
 3960 00bc 00000000 		.4byte	0
 3961              		.section	.debug_line,"",%progbits
 3962              	.Ldebug_line0:
 3963 0000 B5030000 		.section	.debug_str,"MS",%progbits,1
 3963      0200BA00 
 3963      00000201 
 3963      FB0E0D00 
 3963      01010101 
 3964              	.LASF130:
 3965 0000 43617053 		.ascii	"CapSense_SsCSDGetColSnsClkDivider\000"
 3965      656E7365 
 3965      5F537343 
 3965      53444765 
 3965      74436F6C 
 3966              	.LASF106:
 3967 0022 73656E73 		.ascii	"sensorElement\000"
 3967      6F72456C 
 3967      656D656E 
 3967      7400
 3968              	.LASF102:
 3969 0030 7363616E 		.ascii	"scanStatus\000"
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 122


 3969      53746174 
 3969      757300
 3970              	.LASF96:
 3971 003b 43617053 		.ascii	"CapSense_SsCSDDisableMode\000"
 3971      656E7365 
 3971      5F537343 
 3971      53444469 
 3971      7361626C 
 3972              	.LASF115:
 3973 0055 43617053 		.ascii	"CapSense_SsSetIOsInDefaultState\000"
 3973      656E7365 
 3973      5F537353 
 3973      6574494F 
 3973      73496E44 
 3974              	.LASF146:
 3975 0075 43617053 		.ascii	"CapSense_widgetIndex\000"
 3975      656E7365 
 3975      5F776964 
 3975      67657449 
 3975      6E646578 
 3976              	.LASF62:
 3977 008a 736E7254 		.ascii	"snrTestWidgetId\000"
 3977      65737457 
 3977      69646765 
 3977      74496400 
 3978              	.LASF21:
 3979 009a 43617053 		.ascii	"CapSense_UNDEFINED_E\000"
 3979      656E7365 
 3979      5F554E44 
 3979      4546494E 
 3979      45445F45 
 3980              	.LASF165:
 3981 00af 433A5C55 		.ascii	"C:\\Users\\janusdg-win\\UCU\\POC\\LABALAST\\LABs_BL"
 3981      73657273 
 3981      5C6A616E 
 3981      75736467 
 3981      2D77696E 
 3982 00dc 455C4C61 		.ascii	"E\\Lab_4_1_BLE_Automation_IO.cydsn\000"
 3982      625F345F 
 3982      315F424C 
 3982      455F4175 
 3982      746F6D61 
 3983              	.LASF8:
 3984 00fe 756E7369 		.ascii	"unsigned int\000"
 3984      676E6564 
 3984      20696E74 
 3984      00
 3985              	.LASF53:
 3986 010b 7363616E 		.ascii	"scanCounter\000"
 3986      436F756E 
 3986      74657200 
 3987              	.LASF51:
 3988 0117 6877436C 		.ascii	"hwClock\000"
 3988      6F636B00 
 3989              	.LASF142:
 3990 011f 696E6974 		.ascii	"initStatus\000"
 3990      53746174 
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 123


 3990      757300
 3991              	.LASF117:
 3992 012a 72656756 		.ascii	"regValue\000"
 3992      616C7565 
 3992      00
 3993              	.LASF110:
 3994 0133 696E7465 		.ascii	"interruptState\000"
 3994      72727570 
 3994      74537461 
 3994      746500
 3995              	.LASF16:
 3996 0142 72656738 		.ascii	"reg8\000"
 3996      00
 3997              	.LASF139:
 3998 0147 6C667372 		.ascii	"lfsrScale\000"
 3998      5363616C 
 3998      6500
 3999              	.LASF114:
 4000 0151 6D6F6465 		.ascii	"mode\000"
 4000      00
 4001              	.LASF166:
 4002 0156 43617053 		.ascii	"CapSense_IsBusy\000"
 4002      656E7365 
 4002      5F497342 
 4002      75737900 
 4003              	.LASF120:
 4004 0166 43617053 		.ascii	"CapSense_SsSetModClkClockDivider\000"
 4004      656E7365 
 4004      5F537353 
 4004      65744D6F 
 4004      64436C6B 
 4005              	.LASF42:
 4006 0187 43617053 		.ascii	"CapSense_RAM_WD_LIST_STRUCT\000"
 4006      656E7365 
 4006      5F52414D 
 4006      5F57445F 
 4006      4C495354 
 4007              	.LASF89:
 4008 01a3 69697246 		.ascii	"iirFilterCoeff\000"
 4008      696C7465 
 4008      72436F65 
 4008      666600
 4009              	.LASF108:
 4010 01b2 656C7464 		.ascii	"eltdNum\000"
 4010      4E756D00 
 4011              	.LASF132:
 4012 01ba 70747257 		.ascii	"ptrWdgt\000"
 4012      64677400 
 4013              	.LASF137:
 4014 01c2 43617053 		.ascii	"CapSense_SsSetWidgetSenseClkSrc\000"
 4014      656E7365 
 4014      5F537353 
 4014      65745769 
 4014      64676574 
 4015              	.LASF116:
 4016 01e2 6C6F6F70 		.ascii	"loopIndex\000"
 4016      496E6465 
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 124


 4016      7800
 4017              	.LASF12:
 4018 01ec 666C6F61 		.ascii	"float\000"
 4018      7400
 4019              	.LASF75:
 4020 01f2 73686966 		.ascii	"shift\000"
 4020      7400
 4021              	.LASF127:
 4022 01f8 43617053 		.ascii	"CapSense_SsClearCSDSensors\000"
 4022      656E7365 
 4022      5F537343 
 4022      6C656172 
 4022      43534453 
 4023              	.LASF154:
 4024 0213 43617053 		.ascii	"CapSense_CSDSetupWidget\000"
 4024      656E7365 
 4024      5F435344 
 4024      53657475 
 4024      70576964 
 4025              	.LASF61:
 4026 022b 736E734C 		.ascii	"snsList\000"
 4026      69737400 
 4027              	.LASF7:
 4028 0233 6C6F6E67 		.ascii	"long long unsigned int\000"
 4028      206C6F6E 
 4028      6720756E 
 4028      7369676E 
 4028      65642069 
 4029              	.LASF147:
 4030 024a 43617053 		.ascii	"CapSense_sensorIndex\000"
 4030      656E7365 
 4030      5F73656E 
 4030      736F7249 
 4030      6E646578 
 4031              	.LASF76:
 4032 025f 43617053 		.ascii	"CapSense_FLASH_IO_STRUCT\000"
 4032      656E7365 
 4032      5F464C41 
 4032      53485F49 
 4032      4F5F5354 
 4033              	.LASF63:
 4034 0278 736E7254 		.ascii	"snrTestSensorId\000"
 4034      65737453 
 4034      656E736F 
 4034      72496400 
 4035              	.LASF84:
 4036 0288 77646774 		.ascii	"wdgtType\000"
 4036      54797065 
 4036      00
 4037              	.LASF138:
 4038 0291 6C667372 		.ascii	"lfsrSize\000"
 4038      53697A65 
 4038      00
 4039              	.LASF163:
 4040 029a 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4040      43313120 
 4040      352E342E 
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 125


 4040      31203230 
 4040      31363036 
 4041 02cd 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 4041      20726576 
 4041      6973696F 
 4041      6E203233 
 4041      37373135 
 4042 0300 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 4042      66756E63 
 4042      74696F6E 
 4042      2D736563 
 4042      74696F6E 
 4043              	.LASF59:
 4044 0328 6D6F6443 		.ascii	"modCsdClk\000"
 4044      7364436C 
 4044      6B00
 4045              	.LASF47:
 4046 0332 43617053 		.ascii	"CapSense_RAM_SNS_STRUCT\000"
 4046      656E7365 
 4046      5F52414D 
 4046      5F534E53 
 4046      5F535452 
 4047              	.LASF133:
 4048 034a 43617053 		.ascii	"CapSense_SsCSDCalcPrsSize\000"
 4048      656E7365 
 4048      5F537343 
 4048      53444361 
 4048      6C635072 
 4049              	.LASF69:
 4050 0364 64725074 		.ascii	"drPtr\000"
 4050      7200
 4051              	.LASF121:
 4052 036a 6D6F6443 		.ascii	"modClk\000"
 4052      6C6B00
 4053              	.LASF31:
 4054 0371 68797374 		.ascii	"hysteresis\000"
 4054      65726573 
 4054      697300
 4055              	.LASF90:
 4056 037c 43617053 		.ascii	"CapSense_FLASH_WD_STRUCT\000"
 4056      656E7365 
 4056      5F464C41 
 4056      53485F57 
 4056      445F5354 
 4057              	.LASF33:
 4058 0395 6C6F7742 		.ascii	"lowBslnRst\000"
 4058      736C6E52 
 4058      737400
 4059              	.LASF83:
 4060 03a0 746F7461 		.ascii	"totalNumSns\000"
 4060      6C4E756D 
 4060      536E7300 
 4061              	.LASF29:
 4062 03ac 6E6F6973 		.ascii	"noiseTh\000"
 4062      65546800 
 4063              	.LASF14:
 4064 03b4 63686172 		.ascii	"char\000"
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 126


 4064      00
 4065              	.LASF157:
 4066 03b9 43794578 		.ascii	"CyExitCriticalSection\000"
 4066      69744372 
 4066      69746963 
 4066      616C5365 
 4066      6374696F 
 4067              	.LASF73:
 4068 03cf 6873696F 		.ascii	"hsiomShift\000"
 4068      6D536869 
 4068      667400
 4069              	.LASF10:
 4070 03da 75696E74 		.ascii	"uint16\000"
 4070      313600
 4071              	.LASF94:
 4072 03e1 43617053 		.ascii	"CapSense_SsTrimIdacsSourcing\000"
 4072      656E7365 
 4072      5F537354 
 4072      72696D49 
 4072      64616373 
 4073              	.LASF27:
 4074 03fe 7265736F 		.ascii	"resolution\000"
 4074      6C757469 
 4074      6F6E00
 4075              	.LASF54:
 4076 0409 73746174 		.ascii	"status\000"
 4076      757300
 4077              	.LASF124:
 4078 0410 43617053 		.ascii	"CapSense_CalibrateWidget\000"
 4078      656E7365 
 4078      5F43616C 
 4078      69627261 
 4078      74655769 
 4079              	.LASF20:
 4080 0429 43617053 		.ascii	"CapSense_LOW_BSLN_RST_TYPE\000"
 4080      656E7365 
 4080      5F4C4F57 
 4080      5F42534C 
 4080      4E5F5253 
 4081              	.LASF122:
 4082 0444 43617053 		.ascii	"CapSense_SsSetSnsClockDivider\000"
 4082      656E7365 
 4082      5F537353 
 4082      6574536E 
 4082      73436C6F 
 4083              	.LASF26:
 4084 0462 43617053 		.ascii	"CapSense_SENSE_METHOD_ENUM\000"
 4084      656E7365 
 4084      5F53454E 
 4084      53455F4D 
 4084      4554484F 
 4085              	.LASF135:
 4086 047d 70727353 		.ascii	"prsSize\000"
 4086      697A6500 
 4087              	.LASF68:
 4088 0485 70635074 		.ascii	"pcPtr\000"
 4088      7200
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 127


 4089              	.LASF6:
 4090 048b 6C6F6E67 		.ascii	"long long int\000"
 4090      206C6F6E 
 4090      6720696E 
 4090      7400
 4091              	.LASF85:
 4092 0499 6E756D43 		.ascii	"numCols\000"
 4092      6F6C7300 
 4093              	.LASF159:
 4094 04a1 43617053 		.ascii	"CapSense_SsCSDInitialize\000"
 4094      656E7365 
 4094      5F537343 
 4094      5344496E 
 4094      69746961 
 4095              	.LASF32:
 4096 04ba 6F6E4465 		.ascii	"onDebounce\000"
 4096      626F756E 
 4096      636500
 4097              	.LASF125:
 4098 04c5 63616C69 		.ascii	"calibrateStatus\000"
 4098      62726174 
 4098      65537461 
 4098      74757300 
 4099              	.LASF60:
 4100 04d5 77646774 		.ascii	"wdgtList\000"
 4100      4C697374 
 4100      00
 4101              	.LASF126:
 4102 04de 43617053 		.ascii	"CapSense_CalibrateAllWidgets\000"
 4102      656E7365 
 4102      5F43616C 
 4102      69627261 
 4102      7465416C 
 4103              	.LASF92:
 4104 04fb 43617053 		.ascii	"CapSense_FLASH_STRUCT\000"
 4104      656E7365 
 4104      5F464C41 
 4104      53485F53 
 4104      54525543 
 4105              	.LASF101:
 4106 0511 43617053 		.ascii	"CapSense_Scan\000"
 4106      656E7365 
 4106      5F536361 
 4106      6E00
 4107              	.LASF143:
 4108 051f 43617053 		.ascii	"CapSense_dsRam\000"
 4108      656E7365 
 4108      5F647352 
 4108      616D00
 4109              	.LASF65:
 4110 052e 736E7254 		.ascii	"snrTestRawCount\000"
 4110      65737452 
 4110      6177436F 
 4110      756E7400 
 4111              	.LASF30:
 4112 053e 6E4E6F69 		.ascii	"nNoiseTh\000"
 4112      73655468 
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 128


 4112      00
 4113              	.LASF58:
 4114 0547 63736430 		.ascii	"csd0Config\000"
 4114      436F6E66 
 4114      696700
 4115              	.LASF18:
 4116 0552 63796973 		.ascii	"cyisraddress\000"
 4116      72616464 
 4116      72657373 
 4116      00
 4117              	.LASF38:
 4118 055f 43617053 		.ascii	"CapSense_RAM_WD_BASE_STRUCT\000"
 4118      656E7365 
 4118      5F52414D 
 4118      5F57445F 
 4118      42415345 
 4119              	.LASF67:
 4120 057b 6873696F 		.ascii	"hsiomPtr\000"
 4120      6D507472 
 4120      00
 4121              	.LASF11:
 4122 0584 75696E74 		.ascii	"uint32\000"
 4122      333200
 4123              	.LASF80:
 4124 058b 70747232 		.ascii	"ptr2FltrHistory\000"
 4124      466C7472 
 4124      48697374 
 4124      6F727900 
 4125              	.LASF152:
 4126 059b 43617053 		.ascii	"CapSense_curSnsIOPtr\000"
 4126      656E7365 
 4126      5F637572 
 4126      536E7349 
 4126      4F507472 
 4127              	.LASF72:
 4128 05b0 6D61736B 		.ascii	"mask\000"
 4128      00
 4129              	.LASF123:
 4130 05b5 43617053 		.ascii	"CapSense_SsSetClockDividers\000"
 4130      656E7365 
 4130      5F537353 
 4130      6574436C 
 4130      6F636B44 
 4131              	.LASF104:
 4132 05d1 77646774 		.ascii	"wdgtIndex\000"
 4132      496E6465 
 4132      7800
 4133              	.LASF128:
 4134 05db 736E7349 		.ascii	"snsIndex\000"
 4134      6E646578 
 4134      00
 4135              	.LASF25:
 4136 05e4 43617053 		.ascii	"CapSense_SENSE_METHOD_ISX_E\000"
 4136      656E7365 
 4136      5F53454E 
 4136      53455F4D 
 4136      4554484F 
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 129


 4137              	.LASF93:
 4138 0600 6C6F6E67 		.ascii	"long double\000"
 4138      20646F75 
 4138      626C6500 
 4139              	.LASF17:
 4140 060c 72656733 		.ascii	"reg32\000"
 4140      3200
 4141              	.LASF64:
 4142 0612 736E7254 		.ascii	"snrTestScanCounter\000"
 4142      65737453 
 4142      63616E43 
 4142      6F756E74 
 4142      657200
 4143              	.LASF49:
 4144 0625 636F6E66 		.ascii	"configId\000"
 4144      69674964 
 4144      00
 4145              	.LASF79:
 4146 062e 70747232 		.ascii	"ptr2SnsRam\000"
 4146      536E7352 
 4146      616D00
 4147              	.LASF57:
 4148 0639 736E7353 		.ascii	"snsStatus\000"
 4148      74617475 
 4148      7300
 4149              	.LASF36:
 4150 0643 736E7343 		.ascii	"snsClkSource\000"
 4150      6C6B536F 
 4150      75726365 
 4150      00
 4151              	.LASF153:
 4152 0650 43617053 		.ascii	"CapSense_SsCSDElectrodeCheck\000"
 4152      656E7365 
 4152      5F537343 
 4152      5344456C 
 4152      65637472 
 4153              	.LASF86:
 4154 066d 78526573 		.ascii	"xResolution\000"
 4154      6F6C7574 
 4154      696F6E00 
 4155              	.LASF118:
 4156 0679 43617053 		.ascii	"CapSense_SsIsrInitialize\000"
 4156      656E7365 
 4156      5F537349 
 4156      7372496E 
 4156      69746961 
 4157              	.LASF2:
 4158 0692 73686F72 		.ascii	"short int\000"
 4158      7420696E 
 4158      7400
 4159              	.LASF66:
 4160 069c 43617053 		.ascii	"CapSense_RAM_STRUCT\000"
 4160      656E7365 
 4160      5F52414D 
 4160      5F535452 
 4160      55435400 
 4161              	.LASF162:
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 130


 4162 06b0 43617053 		.ascii	"CapSense_CSDDisconnectSns\000"
 4162      656E7365 
 4162      5F435344 
 4162      44697363 
 4162      6F6E6E65 
 4163              	.LASF4:
 4164 06ca 6C6F6E67 		.ascii	"long int\000"
 4164      20696E74 
 4164      00
 4165              	.LASF55:
 4166 06d3 77646774 		.ascii	"wdgtEnable\000"
 4166      456E6162 
 4166      6C6500
 4167              	.LASF45:
 4168 06de 64696666 		.ascii	"diff\000"
 4168      00
 4169              	.LASF52:
 4170 06e3 74756E65 		.ascii	"tunerCmd\000"
 4170      72436D64 
 4170      00
 4171              	.LASF23:
 4172 06ec 43617053 		.ascii	"CapSense_SENSE_METHOD_CSX_E\000"
 4172      656E7365 
 4172      5F53454E 
 4172      53455F4D 
 4172      4554484F 
 4173              	.LASF70:
 4174 0708 70735074 		.ascii	"psPtr\000"
 4174      7200
 4175              	.LASF100:
 4176 070e 43617053 		.ascii	"CapSense_SetupWidget\000"
 4176      656E7365 
 4176      5F536574 
 4176      75705769 
 4176      64676574 
 4177              	.LASF161:
 4178 0723 43617053 		.ascii	"CapSense_CSDCalibrateWidget\000"
 4178      656E7365 
 4178      5F435344 
 4178      43616C69 
 4178      62726174 
 4179              	.LASF144:
 4180 073f 43617053 		.ascii	"CapSense_dsFlash\000"
 4180      656E7365 
 4180      5F647346 
 4180      6C617368 
 4180      00
 4181              	.LASF56:
 4182 0750 77646774 		.ascii	"wdgtStatus\000"
 4182      53746174 
 4182      757300
 4183              	.LASF164:
 4184 075b 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_Sensing.c\000"
 4184      72617465 
 4184      645F536F 
 4184      75726365 
 4184      5C50536F 
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 131


 4185              	.LASF40:
 4186 0785 43617053 		.ascii	"CapSense_RAM_WD_SLIDER_STRUCT\000"
 4186      656E7365 
 4186      5F52414D 
 4186      5F57445F 
 4186      534C4944 
 4187              	.LASF22:
 4188 07a3 43617053 		.ascii	"CapSense_SENSE_METHOD_CSD_E\000"
 4188      656E7365 
 4188      5F53454E 
 4188      53455F4D 
 4188      4554484F 
 4189              	.LASF150:
 4190 07bf 43617053 		.ascii	"CapSense_currentSenseMethod\000"
 4190      656E7365 
 4190      5F637572 
 4190      72656E74 
 4190      53656E73 
 4191              	.LASF37:
 4192 07db 73697A65 		.ascii	"sizetype\000"
 4192      74797065 
 4192      00
 4193              	.LASF74:
 4194 07e4 64725368 		.ascii	"drShift\000"
 4194      69667400 
 4195              	.LASF5:
 4196 07ec 6C6F6E67 		.ascii	"long unsigned int\000"
 4196      20756E73 
 4196      69676E65 
 4196      6420696E 
 4196      7400
 4197              	.LASF131:
 4198 07fe 72657456 		.ascii	"retVal\000"
 4198      616C00
 4199              	.LASF119:
 4200 0805 61646472 		.ascii	"address\000"
 4200      65737300 
 4201              	.LASF34:
 4202 080d 69646163 		.ascii	"idacMod\000"
 4202      4D6F6400 
 4203              	.LASF160:
 4204 0815 43617053 		.ascii	"CapSense_ISR_StartEx\000"
 4204      656E7365 
 4204      5F495352 
 4204      5F537461 
 4204      72744578 
 4205              	.LASF81:
 4206 082a 70747232 		.ascii	"ptr2DebounceArr\000"
 4206      4465626F 
 4206      756E6365 
 4206      41727200 
 4207              	.LASF95:
 4208 083a 43617053 		.ascii	"CapSense_SsTrimIdacs\000"
 4208      656E7365 
 4208      5F537354 
 4208      72696D49 
 4208      64616373 
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 132


 4209              	.LASF158:
 4210 084f 43617053 		.ascii	"CapSense_CSDConnectSns\000"
 4210      656E7365 
 4210      5F435344 
 4210      436F6E6E 
 4210      65637453 
 4211              	.LASF87:
 4212 0866 7843656E 		.ascii	"xCentroidMultiplier\000"
 4212      74726F69 
 4212      644D756C 
 4212      7469706C 
 4212      69657200 
 4213              	.LASF28:
 4214 087a 66696E67 		.ascii	"fingerTh\000"
 4214      65725468 
 4214      00
 4215              	.LASF44:
 4216 0883 62736C6E 		.ascii	"bslnExt\000"
 4216      45787400 
 4217              	.LASF88:
 4218 088b 70747232 		.ascii	"ptr2PosHistory\000"
 4218      506F7348 
 4218      6973746F 
 4218      727900
 4219              	.LASF15:
 4220 089a 63797374 		.ascii	"cystatus\000"
 4220      61747573 
 4220      00
 4221              	.LASF1:
 4222 08a3 756E7369 		.ascii	"unsigned char\000"
 4222      676E6564 
 4222      20636861 
 4222      7200
 4223              	.LASF97:
 4224 08b1 7472696D 		.ascii	"trimValue\000"
 4224      56616C75 
 4224      6500
 4225              	.LASF112:
 4226 08bb 43617053 		.ascii	"CapSense_SetPinState\000"
 4226      656E7365 
 4226      5F536574 
 4226      50696E53 
 4226      74617465 
 4227              	.LASF82:
 4228 08d0 73746174 		.ascii	"staticConfig\000"
 4228      6963436F 
 4228      6E666967 
 4228      00
 4229              	.LASF111:
 4230 08dd 696F5074 		.ascii	"ioPtr\000"
 4230      7200
 4231              	.LASF78:
 4232 08e3 70747232 		.ascii	"ptr2WdgtRam\000"
 4232      57646774 
 4232      52616D00 
 4233              	.LASF19:
 4234 08ef 43617053 		.ascii	"CapSense_THRESHOLD_TYPE\000"
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 133


 4234      656E7365 
 4234      5F544852 
 4234      4553484F 
 4234      4C445F54 
 4235              	.LASF155:
 4236 0907 43617053 		.ascii	"CapSense_CSDScan\000"
 4236      656E7365 
 4236      5F435344 
 4236      5363616E 
 4236      00
 4237              	.LASF24:
 4238 0918 43617053 		.ascii	"CapSense_SENSE_METHOD_BIST_E\000"
 4238      656E7365 
 4238      5F53454E 
 4238      53455F4D 
 4238      4554484F 
 4239              	.LASF107:
 4240 0935 73746174 		.ascii	"state\000"
 4240      6500
 4241              	.LASF41:
 4242 093b 6C696E65 		.ascii	"linearslider0\000"
 4242      6172736C 
 4242      69646572 
 4242      3000
 4243              	.LASF109:
 4244 0949 656C7464 		.ascii	"eltdIndex\000"
 4244      496E6465 
 4244      7800
 4245              	.LASF103:
 4246 0953 43617053 		.ascii	"CapSense_ScanAllWidgets\000"
 4246      656E7365 
 4246      5F536361 
 4246      6E416C6C 
 4246      57696467 
 4247              	.LASF71:
 4248 096b 6873696F 		.ascii	"hsiomMask\000"
 4248      6D4D6173 
 4248      6B00
 4249              	.LASF129:
 4250 0975 63757253 		.ascii	"curSnsIOPtr\000"
 4250      6E73494F 
 4250      50747200 
 4251              	.LASF35:
 4252 0981 736E7343 		.ascii	"snsClk\000"
 4252      6C6B00
 4253              	.LASF113:
 4254 0988 43617053 		.ascii	"CapSense_SsSwitchSensingMode\000"
 4254      656E7365 
 4254      5F537353 
 4254      77697463 
 4254      6853656E 
 4255              	.LASF156:
 4256 09a5 4379456E 		.ascii	"CyEnterCriticalSection\000"
 4256      74657243 
 4256      72697469 
 4256      63616C53 
 4256      65637469 
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 134


 4257              	.LASF149:
 4258 09bc 43617053 		.ascii	"CapSense_curRamSnsPtr\000"
 4258      656E7365 
 4258      5F637572 
 4258      52616D53 
 4258      6E735074 
 4259              	.LASF0:
 4260 09d2 7369676E 		.ascii	"signed char\000"
 4260      65642063 
 4260      68617200 
 4261              	.LASF151:
 4262 09de 43617053 		.ascii	"CapSense_scanFreqIndex\000"
 4262      656E7365 
 4262      5F736361 
 4262      6E467265 
 4262      71496E64 
 4263              	.LASF43:
 4264 09f5 62736C6E 		.ascii	"bsln\000"
 4264      00
 4265              	.LASF3:
 4266 09fa 73686F72 		.ascii	"short unsigned int\000"
 4266      7420756E 
 4266      7369676E 
 4266      65642069 
 4266      6E7400
 4267              	.LASF145:
 4268 0a0d 43617053 		.ascii	"CapSense_ioList\000"
 4268      656E7365 
 4268      5F696F4C 
 4268      69737400 
 4269              	.LASF167:
 4270 0a1d 43617053 		.ascii	"CapSense_SsPostAllWidgetsScan\000"
 4270      656E7365 
 4270      5F537350 
 4270      6F737441 
 4270      6C6C5769 
 4271              	.LASF77:
 4272 0a3b 70747232 		.ascii	"ptr2SnsFlash\000"
 4272      536E7346 
 4272      6C617368 
 4272      00
 4273              	.LASF98:
 4274 0a48 6E657752 		.ascii	"newRegValue\000"
 4274      65675661 
 4274      6C756500 
 4275              	.LASF9:
 4276 0a54 75696E74 		.ascii	"uint8\000"
 4276      3800
 4277              	.LASF13:
 4278 0a5a 646F7562 		.ascii	"double\000"
 4278      6C6500
 4279              	.LASF46:
 4280 0a61 6E656742 		.ascii	"negBslnRstCnt\000"
 4280      736C6E52 
 4280      7374436E 
 4280      7400
 4281              	.LASF141:
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cctwqEFg.s 			page 135


 4282 0a6f 43617053 		.ascii	"CapSense_SsInitialize\000"
 4282      656E7365 
 4282      5F537349 
 4282      6E697469 
 4282      616C697A 
 4283              	.LASF134:
 4284 0a85 736E7343 		.ascii	"snsClkDivider\000"
 4284      6C6B4469 
 4284      76696465 
 4284      7200
 4285              	.LASF136:
 4286 0a93 6D6F6443 		.ascii	"modClkDivider\000"
 4286      6C6B4469 
 4286      76696465 
 4286      7200
 4287              	.LASF50:
 4288 0aa1 64657669 		.ascii	"deviceId\000"
 4288      63654964 
 4288      00
 4289              	.LASF99:
 4290 0aaa 77696467 		.ascii	"widgetStatus\000"
 4290      65745374 
 4290      61747573 
 4290      00
 4291              	.LASF105:
 4292 0ab7 77696467 		.ascii	"widgetId\000"
 4292      65744964 
 4292      00
 4293              	.LASF148:
 4294 0ac0 43617053 		.ascii	"CapSense_requestScanAllWidget\000"
 4294      656E7365 
 4294      5F726571 
 4294      75657374 
 4294      5363616E 
 4295              	.LASF140:
 4296 0ade 43617053 		.ascii	"CapSense_SsInitializeSourceSenseClk\000"
 4296      656E7365 
 4296      5F537349 
 4296      6E697469 
 4296      616C697A 
 4297              	.LASF39:
 4298 0b02 706F7369 		.ascii	"position\000"
 4298      74696F6E 
 4298      00
 4299              	.LASF48:
 4300 0b0b 43617053 		.ascii	"CapSense_RAM_SNS_LIST_STRUCT\000"
 4300      656E7365 
 4300      5F52414D 
 4300      5F534E53 
 4300      5F4C4953 
 4301              	.LASF91:
 4302 0b28 77646774 		.ascii	"wdgtArray\000"
 4302      41727261 
 4302      7900
 4303              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
