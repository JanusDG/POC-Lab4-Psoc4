ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccAKEX6L.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"PWM.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.PWM_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	PWM_Enable
  22              		.code	16
  23              		.thumb_func
  24              		.type	PWM_Enable, %function
  25              	PWM_Enable:
  26              	.LFB4:
  27              		.file 1 "Generated_Source\\PSoC4\\PWM.c"
   1:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/PWM.c **** * File Name: PWM.c
   3:Generated_Source\PSoC4/PWM.c **** * Version 3.30
   4:Generated_Source\PSoC4/PWM.c **** *
   5:Generated_Source\PSoC4/PWM.c **** * Description:
   6:Generated_Source\PSoC4/PWM.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:Generated_Source\PSoC4/PWM.c **** *  comparitors. Each instance of this user module is capable of generating
   8:Generated_Source\PSoC4/PWM.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:Generated_Source\PSoC4/PWM.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:Generated_Source\PSoC4/PWM.c **** *  The compare value output may be configured to be active when the present
  11:Generated_Source\PSoC4/PWM.c **** *  counter is less than or less than/equal to the compare value.
  12:Generated_Source\PSoC4/PWM.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:Generated_Source\PSoC4/PWM.c **** *  width wide when the counter is equal to zero.
  14:Generated_Source\PSoC4/PWM.c **** *
  15:Generated_Source\PSoC4/PWM.c **** * Note:
  16:Generated_Source\PSoC4/PWM.c **** *
  17:Generated_Source\PSoC4/PWM.c **** *******************************************************************************
  18:Generated_Source\PSoC4/PWM.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC4/PWM.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC4/PWM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC4/PWM.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC4/PWM.c **** ********************************************************************************/
  23:Generated_Source\PSoC4/PWM.c **** 
  24:Generated_Source\PSoC4/PWM.c **** #include "PWM.h"
  25:Generated_Source\PSoC4/PWM.c **** 
  26:Generated_Source\PSoC4/PWM.c **** /* Error message for removed <resource> through optimization */
  27:Generated_Source\PSoC4/PWM.c **** #ifdef PWM_PWMUDB_genblk1_ctrlreg__REMOVED
  28:Generated_Source\PSoC4/PWM.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:Generated_Source\PSoC4/PWM.c ****          constant 1 for reset. This will prevent the component from operating.
  30:Generated_Source\PSoC4/PWM.c **** #endif /* PWM_PWMUDB_genblk1_ctrlreg__REMOVED */
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccAKEX6L.s 			page 2


  31:Generated_Source\PSoC4/PWM.c **** 
  32:Generated_Source\PSoC4/PWM.c **** uint8 PWM_initVar = 0u;
  33:Generated_Source\PSoC4/PWM.c **** 
  34:Generated_Source\PSoC4/PWM.c **** 
  35:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
  36:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Start
  37:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
  38:Generated_Source\PSoC4/PWM.c **** *
  39:Generated_Source\PSoC4/PWM.c **** * Summary:
  40:Generated_Source\PSoC4/PWM.c **** *  The start function initializes the pwm with the default values, the
  41:Generated_Source\PSoC4/PWM.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:Generated_Source\PSoC4/PWM.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:Generated_Source\PSoC4/PWM.c **** *
  44:Generated_Source\PSoC4/PWM.c **** * Parameters:
  45:Generated_Source\PSoC4/PWM.c **** *  None
  46:Generated_Source\PSoC4/PWM.c **** *
  47:Generated_Source\PSoC4/PWM.c **** * Return:
  48:Generated_Source\PSoC4/PWM.c **** *  None
  49:Generated_Source\PSoC4/PWM.c **** *
  50:Generated_Source\PSoC4/PWM.c **** * Global variables:
  51:Generated_Source\PSoC4/PWM.c **** *  PWM_initVar: Is modified when this function is called for the
  52:Generated_Source\PSoC4/PWM.c **** *   first time. Is used to ensure that initialization happens only once.
  53:Generated_Source\PSoC4/PWM.c **** *
  54:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
  55:Generated_Source\PSoC4/PWM.c **** void PWM_Start(void) 
  56:Generated_Source\PSoC4/PWM.c **** {
  57:Generated_Source\PSoC4/PWM.c ****     /* If not Initialized then initialize all required hardware and software */
  58:Generated_Source\PSoC4/PWM.c ****     if(PWM_initVar == 0u)
  59:Generated_Source\PSoC4/PWM.c ****     {
  60:Generated_Source\PSoC4/PWM.c ****         PWM_Init();
  61:Generated_Source\PSoC4/PWM.c ****         PWM_initVar = 1u;
  62:Generated_Source\PSoC4/PWM.c ****     }
  63:Generated_Source\PSoC4/PWM.c ****     PWM_Enable();
  64:Generated_Source\PSoC4/PWM.c **** 
  65:Generated_Source\PSoC4/PWM.c **** }
  66:Generated_Source\PSoC4/PWM.c **** 
  67:Generated_Source\PSoC4/PWM.c **** 
  68:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
  69:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Init
  70:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
  71:Generated_Source\PSoC4/PWM.c **** *
  72:Generated_Source\PSoC4/PWM.c **** * Summary:
  73:Generated_Source\PSoC4/PWM.c **** *  Initialize component's parameters to the parameters set by user in the
  74:Generated_Source\PSoC4/PWM.c **** *  customizer of the component placed onto schematic. Usually called in
  75:Generated_Source\PSoC4/PWM.c **** *  PWM_Start().
  76:Generated_Source\PSoC4/PWM.c **** *
  77:Generated_Source\PSoC4/PWM.c **** * Parameters:
  78:Generated_Source\PSoC4/PWM.c **** *  None
  79:Generated_Source\PSoC4/PWM.c **** *
  80:Generated_Source\PSoC4/PWM.c **** * Return:
  81:Generated_Source\PSoC4/PWM.c **** *  None
  82:Generated_Source\PSoC4/PWM.c **** *
  83:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
  84:Generated_Source\PSoC4/PWM.c **** void PWM_Init(void) 
  85:Generated_Source\PSoC4/PWM.c **** {
  86:Generated_Source\PSoC4/PWM.c ****     #if (PWM_UsingFixedFunction || PWM_UseControl)
  87:Generated_Source\PSoC4/PWM.c ****         uint8 ctrl;
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccAKEX6L.s 			page 3


  88:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UsingFixedFunction || PWM_UseControl) */
  89:Generated_Source\PSoC4/PWM.c **** 
  90:Generated_Source\PSoC4/PWM.c ****     #if(!PWM_UsingFixedFunction)
  91:Generated_Source\PSoC4/PWM.c ****         #if(PWM_UseStatus)
  92:Generated_Source\PSoC4/PWM.c ****             /* Interrupt State Backup for Critical Region*/
  93:Generated_Source\PSoC4/PWM.c ****             uint8 PWM_interruptState;
  94:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UseStatus) */
  95:Generated_Source\PSoC4/PWM.c ****     #endif /* (!PWM_UsingFixedFunction) */
  96:Generated_Source\PSoC4/PWM.c **** 
  97:Generated_Source\PSoC4/PWM.c ****     #if (PWM_UsingFixedFunction)
  98:Generated_Source\PSoC4/PWM.c ****         /* You are allowed to write the compare value (FF only) */
  99:Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL |= PWM_CFG0_MODE;
 100:Generated_Source\PSoC4/PWM.c ****         #if (PWM_DeadBand2_4)
 101:Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL |= PWM_CFG0_DB;
 102:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_DeadBand2_4) */
 103:Generated_Source\PSoC4/PWM.c **** 
 104:Generated_Source\PSoC4/PWM.c ****         ctrl = PWM_CONTROL3 & ((uint8 )(~PWM_CTRL_CMPMODE1_MASK));
 105:Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL3 = ctrl | PWM_DEFAULT_COMPARE1_MODE;
 106:Generated_Source\PSoC4/PWM.c **** 
 107:Generated_Source\PSoC4/PWM.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:Generated_Source\PSoC4/PWM.c ****         PWM_RT1 &= ((uint8)(~PWM_RT1_MASK));
 109:Generated_Source\PSoC4/PWM.c ****         PWM_RT1 |= PWM_SYNC;
 110:Generated_Source\PSoC4/PWM.c **** 
 111:Generated_Source\PSoC4/PWM.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:Generated_Source\PSoC4/PWM.c ****         PWM_RT1 &= ((uint8)(~PWM_SYNCDSI_MASK));
 113:Generated_Source\PSoC4/PWM.c ****         PWM_RT1 |= PWM_SYNCDSI_EN;
 114:Generated_Source\PSoC4/PWM.c **** 
 115:Generated_Source\PSoC4/PWM.c ****     #elif (PWM_UseControl)
 116:Generated_Source\PSoC4/PWM.c ****         /* Set the default compare mode defined in the parameter */
 117:Generated_Source\PSoC4/PWM.c ****         ctrl = PWM_CONTROL & ((uint8)(~PWM_CTRL_CMPMODE2_MASK)) &
 118:Generated_Source\PSoC4/PWM.c ****                 ((uint8)(~PWM_CTRL_CMPMODE1_MASK));
 119:Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL = ctrl | PWM_DEFAULT_COMPARE2_MODE |
 120:Generated_Source\PSoC4/PWM.c ****                                    PWM_DEFAULT_COMPARE1_MODE;
 121:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UsingFixedFunction) */
 122:Generated_Source\PSoC4/PWM.c **** 
 123:Generated_Source\PSoC4/PWM.c ****     #if (!PWM_UsingFixedFunction)
 124:Generated_Source\PSoC4/PWM.c ****         #if (PWM_Resolution == 8)
 125:Generated_Source\PSoC4/PWM.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:Generated_Source\PSoC4/PWM.c ****             PWM_AUX_CONTROLDP0 |= (PWM_AUX_CTRL_FIFO0_CLR);
 127:Generated_Source\PSoC4/PWM.c ****         #else /* (PWM_Resolution == 16)*/
 128:Generated_Source\PSoC4/PWM.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:Generated_Source\PSoC4/PWM.c ****             PWM_AUX_CONTROLDP0 |= (PWM_AUX_CTRL_FIFO0_CLR);
 130:Generated_Source\PSoC4/PWM.c ****             PWM_AUX_CONTROLDP1 |= (PWM_AUX_CTRL_FIFO0_CLR);
 131:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_Resolution == 8) */
 132:Generated_Source\PSoC4/PWM.c **** 
 133:Generated_Source\PSoC4/PWM.c ****         PWM_WriteCounter(PWM_INIT_PERIOD_VALUE);
 134:Generated_Source\PSoC4/PWM.c ****     #endif /* (!PWM_UsingFixedFunction) */
 135:Generated_Source\PSoC4/PWM.c **** 
 136:Generated_Source\PSoC4/PWM.c ****     PWM_WritePeriod(PWM_INIT_PERIOD_VALUE);
 137:Generated_Source\PSoC4/PWM.c **** 
 138:Generated_Source\PSoC4/PWM.c ****         #if (PWM_UseOneCompareMode)
 139:Generated_Source\PSoC4/PWM.c ****             PWM_WriteCompare(PWM_INIT_COMPARE_VALUE1);
 140:Generated_Source\PSoC4/PWM.c ****         #else
 141:Generated_Source\PSoC4/PWM.c ****             PWM_WriteCompare1(PWM_INIT_COMPARE_VALUE1);
 142:Generated_Source\PSoC4/PWM.c ****             PWM_WriteCompare2(PWM_INIT_COMPARE_VALUE2);
 143:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UseOneCompareMode) */
 144:Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccAKEX6L.s 			page 4


 145:Generated_Source\PSoC4/PWM.c ****         #if (PWM_KillModeMinTime)
 146:Generated_Source\PSoC4/PWM.c ****             PWM_WriteKillTime(PWM_MinimumKillTime);
 147:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_KillModeMinTime) */
 148:Generated_Source\PSoC4/PWM.c **** 
 149:Generated_Source\PSoC4/PWM.c ****         #if (PWM_DeadBandUsed)
 150:Generated_Source\PSoC4/PWM.c ****             PWM_WriteDeadTime(PWM_INIT_DEAD_TIME);
 151:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_DeadBandUsed) */
 152:Generated_Source\PSoC4/PWM.c **** 
 153:Generated_Source\PSoC4/PWM.c ****     #if (PWM_UseStatus || PWM_UsingFixedFunction)
 154:Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_INIT_INTERRUPTS_MODE);
 155:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UseStatus || PWM_UsingFixedFunction) */
 156:Generated_Source\PSoC4/PWM.c **** 
 157:Generated_Source\PSoC4/PWM.c ****     #if (PWM_UsingFixedFunction)
 158:Generated_Source\PSoC4/PWM.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:Generated_Source\PSoC4/PWM.c ****         PWM_GLOBAL_ENABLE |= PWM_BLOCK_EN_MASK;
 160:Generated_Source\PSoC4/PWM.c ****         /* Set the Interrupt source to come from the status register */
 161:Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL2 |= PWM_CTRL2_IRQ_SEL;
 162:Generated_Source\PSoC4/PWM.c ****     #else
 163:Generated_Source\PSoC4/PWM.c ****         #if(PWM_UseStatus)
 164:Generated_Source\PSoC4/PWM.c **** 
 165:Generated_Source\PSoC4/PWM.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:Generated_Source\PSoC4/PWM.c ****             /* Enter Critical Region*/
 167:Generated_Source\PSoC4/PWM.c ****             PWM_interruptState = CyEnterCriticalSection();
 168:Generated_Source\PSoC4/PWM.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:Generated_Source\PSoC4/PWM.c ****             PWM_STATUS_AUX_CTRL |= PWM_STATUS_ACTL_INT_EN_MASK;
 170:Generated_Source\PSoC4/PWM.c **** 
 171:Generated_Source\PSoC4/PWM.c ****              /* Exit Critical Region*/
 172:Generated_Source\PSoC4/PWM.c ****             CyExitCriticalSection(PWM_interruptState);
 173:Generated_Source\PSoC4/PWM.c **** 
 174:Generated_Source\PSoC4/PWM.c ****             /* Clear the FIFO to enable the PWM_STATUS_FIFOFULL
 175:Generated_Source\PSoC4/PWM.c ****                    bit to be set on FIFO full. */
 176:Generated_Source\PSoC4/PWM.c ****             PWM_ClearFIFO();
 177:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UseStatus) */
 178:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UsingFixedFunction) */
 179:Generated_Source\PSoC4/PWM.c **** }
 180:Generated_Source\PSoC4/PWM.c **** 
 181:Generated_Source\PSoC4/PWM.c **** 
 182:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 183:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Enable
 184:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 185:Generated_Source\PSoC4/PWM.c **** *
 186:Generated_Source\PSoC4/PWM.c **** * Summary:
 187:Generated_Source\PSoC4/PWM.c **** *  Enables the PWM block operation
 188:Generated_Source\PSoC4/PWM.c **** *
 189:Generated_Source\PSoC4/PWM.c **** * Parameters:
 190:Generated_Source\PSoC4/PWM.c **** *  None
 191:Generated_Source\PSoC4/PWM.c **** *
 192:Generated_Source\PSoC4/PWM.c **** * Return:
 193:Generated_Source\PSoC4/PWM.c **** *  None
 194:Generated_Source\PSoC4/PWM.c **** *
 195:Generated_Source\PSoC4/PWM.c **** * Side Effects:
 196:Generated_Source\PSoC4/PWM.c **** *  This works only if software enable mode is chosen
 197:Generated_Source\PSoC4/PWM.c **** *
 198:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 199:Generated_Source\PSoC4/PWM.c **** void PWM_Enable(void) 
 200:Generated_Source\PSoC4/PWM.c **** {
  28              		.loc 1 200 0
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccAKEX6L.s 			page 5


  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 201:Generated_Source\PSoC4/PWM.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:Generated_Source\PSoC4/PWM.c ****     #if (PWM_UsingFixedFunction)
 203:Generated_Source\PSoC4/PWM.c ****         PWM_GLOBAL_ENABLE |= PWM_BLOCK_EN_MASK;
 204:Generated_Source\PSoC4/PWM.c ****         PWM_GLOBAL_STBY_ENABLE |= PWM_BLOCK_STBY_EN_MASK;
 205:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UsingFixedFunction) */
 206:Generated_Source\PSoC4/PWM.c **** 
 207:Generated_Source\PSoC4/PWM.c ****     /* Enable the PWM from the control register  */
 208:Generated_Source\PSoC4/PWM.c ****     #if (PWM_UseControl || PWM_UsingFixedFunction)
 209:Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL |= PWM_CTRL_ENABLE;
  33              		.loc 1 209 0
  34 0000 034A     		ldr	r2, .L2
  35 0002 1178     		ldrb	r1, [r2]
  36 0004 8023     		movs	r3, #128
  37 0006 5B42     		rsbs	r3, r3, #0
  38 0008 0B43     		orrs	r3, r1
  39 000a DBB2     		uxtb	r3, r3
  40 000c 1370     		strb	r3, [r2]
 210:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UseControl || PWM_UsingFixedFunction) */
 211:Generated_Source\PSoC4/PWM.c **** }
  41              		.loc 1 211 0
  42              		@ sp needed
  43 000e 7047     		bx	lr
  44              	.L3:
  45              		.align	2
  46              	.L2:
  47 0010 70000F40 		.word	1074724976
  48              		.cfi_endproc
  49              	.LFE4:
  50              		.size	PWM_Enable, .-PWM_Enable
  51              		.section	.text.PWM_Stop,"ax",%progbits
  52              		.align	2
  53              		.global	PWM_Stop
  54              		.code	16
  55              		.thumb_func
  56              		.type	PWM_Stop, %function
  57              	PWM_Stop:
  58              	.LFB5:
 212:Generated_Source\PSoC4/PWM.c **** 
 213:Generated_Source\PSoC4/PWM.c **** 
 214:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 215:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Stop
 216:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 217:Generated_Source\PSoC4/PWM.c **** *
 218:Generated_Source\PSoC4/PWM.c **** * Summary:
 219:Generated_Source\PSoC4/PWM.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:Generated_Source\PSoC4/PWM.c **** *  interrupts.
 221:Generated_Source\PSoC4/PWM.c **** *
 222:Generated_Source\PSoC4/PWM.c **** * Parameters:
 223:Generated_Source\PSoC4/PWM.c **** *  None
 224:Generated_Source\PSoC4/PWM.c **** *
 225:Generated_Source\PSoC4/PWM.c **** * Return:
 226:Generated_Source\PSoC4/PWM.c **** *  None
 227:Generated_Source\PSoC4/PWM.c **** *
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccAKEX6L.s 			page 6


 228:Generated_Source\PSoC4/PWM.c **** * Side Effects:
 229:Generated_Source\PSoC4/PWM.c **** *  If the Enable mode is set to Hardware only then this function
 230:Generated_Source\PSoC4/PWM.c **** *  has no effect on the operation of the PWM
 231:Generated_Source\PSoC4/PWM.c **** *
 232:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 233:Generated_Source\PSoC4/PWM.c **** void PWM_Stop(void) 
 234:Generated_Source\PSoC4/PWM.c **** {
  59              		.loc 1 234 0
  60              		.cfi_startproc
  61              		@ args = 0, pretend = 0, frame = 0
  62              		@ frame_needed = 0, uses_anonymous_args = 0
  63              		@ link register save eliminated.
 235:Generated_Source\PSoC4/PWM.c ****     #if (PWM_UseControl || PWM_UsingFixedFunction)
 236:Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL &= ((uint8)(~PWM_CTRL_ENABLE));
  64              		.loc 1 236 0
  65 0000 024A     		ldr	r2, .L5
  66 0002 1178     		ldrb	r1, [r2]
  67 0004 7F23     		movs	r3, #127
  68 0006 0B40     		ands	r3, r1
  69 0008 1370     		strb	r3, [r2]
 237:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UseControl || PWM_UsingFixedFunction) */
 238:Generated_Source\PSoC4/PWM.c **** 
 239:Generated_Source\PSoC4/PWM.c ****     /* Globally disable the Fixed Function Block chosen */
 240:Generated_Source\PSoC4/PWM.c ****     #if (PWM_UsingFixedFunction)
 241:Generated_Source\PSoC4/PWM.c ****         PWM_GLOBAL_ENABLE &= ((uint8)(~PWM_BLOCK_EN_MASK));
 242:Generated_Source\PSoC4/PWM.c ****         PWM_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_BLOCK_STBY_EN_MASK));
 243:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UsingFixedFunction) */
 244:Generated_Source\PSoC4/PWM.c **** }
  70              		.loc 1 244 0
  71              		@ sp needed
  72 000a 7047     		bx	lr
  73              	.L6:
  74              		.align	2
  75              	.L5:
  76 000c 70000F40 		.word	1074724976
  77              		.cfi_endproc
  78              	.LFE5:
  79              		.size	PWM_Stop, .-PWM_Stop
  80              		.section	.text.PWM_WriteCounter,"ax",%progbits
  81              		.align	2
  82              		.global	PWM_WriteCounter
  83              		.code	16
  84              		.thumb_func
  85              		.type	PWM_WriteCounter, %function
  86              	PWM_WriteCounter:
  87              	.LFB6:
 245:Generated_Source\PSoC4/PWM.c **** 
 246:Generated_Source\PSoC4/PWM.c **** #if (PWM_UseOneCompareMode)
 247:Generated_Source\PSoC4/PWM.c ****     #if (PWM_CompareMode1SW)
 248:Generated_Source\PSoC4/PWM.c **** 
 249:Generated_Source\PSoC4/PWM.c **** 
 250:Generated_Source\PSoC4/PWM.c ****         /*******************************************************************************
 251:Generated_Source\PSoC4/PWM.c ****         * Function Name: PWM_SetCompareMode
 252:Generated_Source\PSoC4/PWM.c ****         ********************************************************************************
 253:Generated_Source\PSoC4/PWM.c ****         *
 254:Generated_Source\PSoC4/PWM.c ****         * Summary:
 255:Generated_Source\PSoC4/PWM.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccAKEX6L.s 			page 7


 256:Generated_Source\PSoC4/PWM.c ****         *  Center Align Mode or One Output Mode.
 257:Generated_Source\PSoC4/PWM.c ****         *
 258:Generated_Source\PSoC4/PWM.c ****         * Parameters:
 259:Generated_Source\PSoC4/PWM.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:Generated_Source\PSoC4/PWM.c ****         *                defined in the H file as input arguments.
 261:Generated_Source\PSoC4/PWM.c ****         *
 262:Generated_Source\PSoC4/PWM.c ****         * Return:
 263:Generated_Source\PSoC4/PWM.c ****         *  None
 264:Generated_Source\PSoC4/PWM.c ****         *
 265:Generated_Source\PSoC4/PWM.c ****         *******************************************************************************/
 266:Generated_Source\PSoC4/PWM.c ****         void PWM_SetCompareMode(uint8 comparemode) 
 267:Generated_Source\PSoC4/PWM.c ****         {
 268:Generated_Source\PSoC4/PWM.c ****             #if(PWM_UsingFixedFunction)
 269:Generated_Source\PSoC4/PWM.c **** 
 270:Generated_Source\PSoC4/PWM.c ****                 #if(0 != PWM_CTRL_CMPMODE1_SHIFT)
 271:Generated_Source\PSoC4/PWM.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_CTRL_CMPMODE1_SHIF
 272:Generated_Source\PSoC4/PWM.c ****                 #else
 273:Generated_Source\PSoC4/PWM.c ****                     uint8 comparemodemasked = comparemode;
 274:Generated_Source\PSoC4/PWM.c ****                 #endif /* (0 != PWM_CTRL_CMPMODE1_SHIFT) */
 275:Generated_Source\PSoC4/PWM.c **** 
 276:Generated_Source\PSoC4/PWM.c ****                 PWM_CONTROL3 &= ((uint8)(~PWM_CTRL_CMPMODE1_MASK)); /*Clear Existing Data */
 277:Generated_Source\PSoC4/PWM.c ****                 PWM_CONTROL3 |= comparemodemasked;
 278:Generated_Source\PSoC4/PWM.c **** 
 279:Generated_Source\PSoC4/PWM.c ****             #elif (PWM_UseControl)
 280:Generated_Source\PSoC4/PWM.c **** 
 281:Generated_Source\PSoC4/PWM.c ****                 #if(0 != PWM_CTRL_CMPMODE1_SHIFT)
 282:Generated_Source\PSoC4/PWM.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_CTRL_CMPMODE1_SHI
 283:Generated_Source\PSoC4/PWM.c ****                                                 PWM_CTRL_CMPMODE1_MASK;
 284:Generated_Source\PSoC4/PWM.c ****                 #else
 285:Generated_Source\PSoC4/PWM.c ****                     uint8 comparemode1masked = comparemode & PWM_CTRL_CMPMODE1_MASK;
 286:Generated_Source\PSoC4/PWM.c ****                 #endif /* (0 != PWM_CTRL_CMPMODE1_SHIFT) */
 287:Generated_Source\PSoC4/PWM.c **** 
 288:Generated_Source\PSoC4/PWM.c ****                 #if(0 != PWM_CTRL_CMPMODE2_SHIFT)
 289:Generated_Source\PSoC4/PWM.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_CTRL_CMPMODE2_SHI
 290:Generated_Source\PSoC4/PWM.c ****                                                PWM_CTRL_CMPMODE2_MASK;
 291:Generated_Source\PSoC4/PWM.c ****                 #else
 292:Generated_Source\PSoC4/PWM.c ****                     uint8 comparemode2masked = comparemode & PWM_CTRL_CMPMODE2_MASK;
 293:Generated_Source\PSoC4/PWM.c ****                 #endif /* (0 != PWM_CTRL_CMPMODE2_SHIFT) */
 294:Generated_Source\PSoC4/PWM.c **** 
 295:Generated_Source\PSoC4/PWM.c ****                 /*Clear existing mode */
 296:Generated_Source\PSoC4/PWM.c ****                 PWM_CONTROL &= ((uint8)(~(PWM_CTRL_CMPMODE1_MASK |
 297:Generated_Source\PSoC4/PWM.c ****                                             PWM_CTRL_CMPMODE2_MASK)));
 298:Generated_Source\PSoC4/PWM.c ****                 PWM_CONTROL |= (comparemode1masked | comparemode2masked);
 299:Generated_Source\PSoC4/PWM.c **** 
 300:Generated_Source\PSoC4/PWM.c ****             #else
 301:Generated_Source\PSoC4/PWM.c ****                 uint8 temp = comparemode;
 302:Generated_Source\PSoC4/PWM.c ****             #endif /* (PWM_UsingFixedFunction) */
 303:Generated_Source\PSoC4/PWM.c ****         }
 304:Generated_Source\PSoC4/PWM.c ****     #endif /* PWM_CompareMode1SW */
 305:Generated_Source\PSoC4/PWM.c **** 
 306:Generated_Source\PSoC4/PWM.c **** #else /* UseOneCompareMode */
 307:Generated_Source\PSoC4/PWM.c **** 
 308:Generated_Source\PSoC4/PWM.c ****     #if (PWM_CompareMode1SW)
 309:Generated_Source\PSoC4/PWM.c **** 
 310:Generated_Source\PSoC4/PWM.c **** 
 311:Generated_Source\PSoC4/PWM.c ****         /*******************************************************************************
 312:Generated_Source\PSoC4/PWM.c ****         * Function Name: PWM_SetCompareMode1
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccAKEX6L.s 			page 8


 313:Generated_Source\PSoC4/PWM.c ****         ********************************************************************************
 314:Generated_Source\PSoC4/PWM.c ****         *
 315:Generated_Source\PSoC4/PWM.c ****         * Summary:
 316:Generated_Source\PSoC4/PWM.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:Generated_Source\PSoC4/PWM.c ****         *
 318:Generated_Source\PSoC4/PWM.c ****         * Parameters:
 319:Generated_Source\PSoC4/PWM.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:Generated_Source\PSoC4/PWM.c ****         *                defined in the H file as input arguments.
 321:Generated_Source\PSoC4/PWM.c ****         *
 322:Generated_Source\PSoC4/PWM.c ****         * Return:
 323:Generated_Source\PSoC4/PWM.c ****         *  None
 324:Generated_Source\PSoC4/PWM.c ****         *
 325:Generated_Source\PSoC4/PWM.c ****         *******************************************************************************/
 326:Generated_Source\PSoC4/PWM.c ****         void PWM_SetCompareMode1(uint8 comparemode) 
 327:Generated_Source\PSoC4/PWM.c ****         {
 328:Generated_Source\PSoC4/PWM.c ****             #if(0 != PWM_CTRL_CMPMODE1_SHIFT)
 329:Generated_Source\PSoC4/PWM.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_CTRL_CMPMODE1_SHIFT)) 
 330:Generated_Source\PSoC4/PWM.c ****                                            PWM_CTRL_CMPMODE1_MASK;
 331:Generated_Source\PSoC4/PWM.c ****             #else
 332:Generated_Source\PSoC4/PWM.c ****                 uint8 comparemodemasked = comparemode & PWM_CTRL_CMPMODE1_MASK;
 333:Generated_Source\PSoC4/PWM.c ****             #endif /* (0 != PWM_CTRL_CMPMODE1_SHIFT) */
 334:Generated_Source\PSoC4/PWM.c **** 
 335:Generated_Source\PSoC4/PWM.c ****             #if (PWM_UseControl)
 336:Generated_Source\PSoC4/PWM.c ****                 PWM_CONTROL &= ((uint8)(~PWM_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 337:Generated_Source\PSoC4/PWM.c ****                 PWM_CONTROL |= comparemodemasked;
 338:Generated_Source\PSoC4/PWM.c ****             #endif /* (PWM_UseControl) */
 339:Generated_Source\PSoC4/PWM.c ****         }
 340:Generated_Source\PSoC4/PWM.c ****     #endif /* PWM_CompareMode1SW */
 341:Generated_Source\PSoC4/PWM.c **** 
 342:Generated_Source\PSoC4/PWM.c **** #if (PWM_CompareMode2SW)
 343:Generated_Source\PSoC4/PWM.c **** 
 344:Generated_Source\PSoC4/PWM.c **** 
 345:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 346:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_SetCompareMode2
 347:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 348:Generated_Source\PSoC4/PWM.c ****     *
 349:Generated_Source\PSoC4/PWM.c ****     * Summary:
 350:Generated_Source\PSoC4/PWM.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:Generated_Source\PSoC4/PWM.c ****     *
 352:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 353:Generated_Source\PSoC4/PWM.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:Generated_Source\PSoC4/PWM.c ****     *                defined in the H file as input arguments.
 355:Generated_Source\PSoC4/PWM.c ****     *
 356:Generated_Source\PSoC4/PWM.c ****     * Return:
 357:Generated_Source\PSoC4/PWM.c ****     *  None
 358:Generated_Source\PSoC4/PWM.c ****     *
 359:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 360:Generated_Source\PSoC4/PWM.c ****     void PWM_SetCompareMode2(uint8 comparemode) 
 361:Generated_Source\PSoC4/PWM.c ****     {
 362:Generated_Source\PSoC4/PWM.c **** 
 363:Generated_Source\PSoC4/PWM.c ****         #if(0 != PWM_CTRL_CMPMODE2_SHIFT)
 364:Generated_Source\PSoC4/PWM.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_CTRL_CMPMODE2_SHIFT)) &
 365:Generated_Source\PSoC4/PWM.c ****                                                  PWM_CTRL_CMPMODE2_MASK;
 366:Generated_Source\PSoC4/PWM.c ****         #else
 367:Generated_Source\PSoC4/PWM.c ****             uint8 comparemodemasked = comparemode & PWM_CTRL_CMPMODE2_MASK;
 368:Generated_Source\PSoC4/PWM.c ****         #endif /* (0 != PWM_CTRL_CMPMODE2_SHIFT) */
 369:Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccAKEX6L.s 			page 9


 370:Generated_Source\PSoC4/PWM.c ****         #if (PWM_UseControl)
 371:Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL &= ((uint8)(~PWM_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL |= comparemodemasked;
 373:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UseControl) */
 374:Generated_Source\PSoC4/PWM.c ****     }
 375:Generated_Source\PSoC4/PWM.c ****     #endif /*PWM_CompareMode2SW */
 376:Generated_Source\PSoC4/PWM.c **** 
 377:Generated_Source\PSoC4/PWM.c **** #endif /* UseOneCompareMode */
 378:Generated_Source\PSoC4/PWM.c **** 
 379:Generated_Source\PSoC4/PWM.c **** 
 380:Generated_Source\PSoC4/PWM.c **** #if (!PWM_UsingFixedFunction)
 381:Generated_Source\PSoC4/PWM.c **** 
 382:Generated_Source\PSoC4/PWM.c **** 
 383:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 384:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_WriteCounter
 385:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 386:Generated_Source\PSoC4/PWM.c ****     *
 387:Generated_Source\PSoC4/PWM.c ****     * Summary:
 388:Generated_Source\PSoC4/PWM.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:Generated_Source\PSoC4/PWM.c ****     *  implemented for that currently running period and only that period. This API
 390:Generated_Source\PSoC4/PWM.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:Generated_Source\PSoC4/PWM.c ****     *  PWM implementation.
 392:Generated_Source\PSoC4/PWM.c ****     *
 393:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 394:Generated_Source\PSoC4/PWM.c ****     *  counter:  The period new period counter value.
 395:Generated_Source\PSoC4/PWM.c ****     *
 396:Generated_Source\PSoC4/PWM.c ****     * Return:
 397:Generated_Source\PSoC4/PWM.c ****     *  None
 398:Generated_Source\PSoC4/PWM.c ****     *
 399:Generated_Source\PSoC4/PWM.c ****     * Side Effects:
 400:Generated_Source\PSoC4/PWM.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:Generated_Source\PSoC4/PWM.c ****     *
 402:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 403:Generated_Source\PSoC4/PWM.c ****     void PWM_WriteCounter(uint8 counter) \
 404:Generated_Source\PSoC4/PWM.c ****                                        
 405:Generated_Source\PSoC4/PWM.c ****     {
  88              		.loc 1 405 0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92              		@ link register save eliminated.
  93              	.LVL0:
 406:Generated_Source\PSoC4/PWM.c ****         CY_SET_REG8(PWM_COUNTER_LSB_PTR, counter);
  94              		.loc 1 406 0
  95 0000 014B     		ldr	r3, .L8
  96 0002 1870     		strb	r0, [r3]
 407:Generated_Source\PSoC4/PWM.c ****     }
  97              		.loc 1 407 0
  98              		@ sp needed
  99 0004 7047     		bx	lr
 100              	.L9:
 101 0006 C046     		.align	2
 102              	.L8:
 103 0008 03000F40 		.word	1074724867
 104              		.cfi_endproc
 105              	.LFE6:
 106              		.size	PWM_WriteCounter, .-PWM_WriteCounter
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccAKEX6L.s 			page 10


 107              		.section	.text.PWM_ReadCounter,"ax",%progbits
 108              		.align	2
 109              		.global	PWM_ReadCounter
 110              		.code	16
 111              		.thumb_func
 112              		.type	PWM_ReadCounter, %function
 113              	PWM_ReadCounter:
 114              	.LFB7:
 408:Generated_Source\PSoC4/PWM.c **** 
 409:Generated_Source\PSoC4/PWM.c **** 
 410:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 411:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_ReadCounter
 412:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 413:Generated_Source\PSoC4/PWM.c ****     *
 414:Generated_Source\PSoC4/PWM.c ****     * Summary:
 415:Generated_Source\PSoC4/PWM.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:Generated_Source\PSoC4/PWM.c ****     *  if the counter is enabled or running.
 417:Generated_Source\PSoC4/PWM.c ****     *
 418:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 419:Generated_Source\PSoC4/PWM.c ****     *  None
 420:Generated_Source\PSoC4/PWM.c ****     *
 421:Generated_Source\PSoC4/PWM.c ****     * Return:
 422:Generated_Source\PSoC4/PWM.c ****     *  The current value of the counter.
 423:Generated_Source\PSoC4/PWM.c ****     *
 424:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 425:Generated_Source\PSoC4/PWM.c ****     uint8 PWM_ReadCounter(void) 
 426:Generated_Source\PSoC4/PWM.c ****     {
 115              		.loc 1 426 0
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 0
 118              		@ frame_needed = 0, uses_anonymous_args = 0
 119              		@ link register save eliminated.
 427:Generated_Source\PSoC4/PWM.c ****         /* Force capture by reading Accumulator */
 428:Generated_Source\PSoC4/PWM.c ****         /* Must first do a software capture to be able to read the counter */
 429:Generated_Source\PSoC4/PWM.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:Generated_Source\PSoC4/PWM.c ****           (void)CY_GET_REG8(PWM_COUNTERCAP_LSB_PTR_8BIT);
 120              		.loc 1 430 0
 121 0000 024B     		ldr	r3, .L11
 122 0002 1B78     		ldrb	r3, [r3]
 431:Generated_Source\PSoC4/PWM.c **** 
 432:Generated_Source\PSoC4/PWM.c ****         /* Read the data from the FIFO */
 433:Generated_Source\PSoC4/PWM.c ****         return (CY_GET_REG8(PWM_CAPTURE_LSB_PTR));
 123              		.loc 1 433 0
 124 0004 024B     		ldr	r3, .L11+4
 125 0006 1878     		ldrb	r0, [r3]
 126 0008 C0B2     		uxtb	r0, r0
 434:Generated_Source\PSoC4/PWM.c ****     }
 127              		.loc 1 434 0
 128              		@ sp needed
 129 000a 7047     		bx	lr
 130              	.L12:
 131              		.align	2
 132              	.L11:
 133 000c 13000F40 		.word	1074724883
 134 0010 53000F40 		.word	1074724947
 135              		.cfi_endproc
 136              	.LFE7:
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccAKEX6L.s 			page 11


 137              		.size	PWM_ReadCounter, .-PWM_ReadCounter
 138              		.section	.text.PWM_WritePeriod,"ax",%progbits
 139              		.align	2
 140              		.global	PWM_WritePeriod
 141              		.code	16
 142              		.thumb_func
 143              		.type	PWM_WritePeriod, %function
 144              	PWM_WritePeriod:
 145              	.LFB8:
 435:Generated_Source\PSoC4/PWM.c **** 
 436:Generated_Source\PSoC4/PWM.c ****     #if (PWM_UseStatus)
 437:Generated_Source\PSoC4/PWM.c **** 
 438:Generated_Source\PSoC4/PWM.c **** 
 439:Generated_Source\PSoC4/PWM.c ****         /*******************************************************************************
 440:Generated_Source\PSoC4/PWM.c ****         * Function Name: PWM_ClearFIFO
 441:Generated_Source\PSoC4/PWM.c ****         ********************************************************************************
 442:Generated_Source\PSoC4/PWM.c ****         *
 443:Generated_Source\PSoC4/PWM.c ****         * Summary:
 444:Generated_Source\PSoC4/PWM.c ****         *  This function clears all capture data from the capture FIFO
 445:Generated_Source\PSoC4/PWM.c ****         *
 446:Generated_Source\PSoC4/PWM.c ****         * Parameters:
 447:Generated_Source\PSoC4/PWM.c ****         *  None
 448:Generated_Source\PSoC4/PWM.c ****         *
 449:Generated_Source\PSoC4/PWM.c ****         * Return:
 450:Generated_Source\PSoC4/PWM.c ****         *  None
 451:Generated_Source\PSoC4/PWM.c ****         *
 452:Generated_Source\PSoC4/PWM.c ****         *******************************************************************************/
 453:Generated_Source\PSoC4/PWM.c ****         void PWM_ClearFIFO(void) 
 454:Generated_Source\PSoC4/PWM.c ****         {
 455:Generated_Source\PSoC4/PWM.c ****             while(0u != (PWM_ReadStatusRegister() & PWM_STATUS_FIFONEMPTY))
 456:Generated_Source\PSoC4/PWM.c ****             {
 457:Generated_Source\PSoC4/PWM.c ****                 (void)PWM_ReadCapture();
 458:Generated_Source\PSoC4/PWM.c ****             }
 459:Generated_Source\PSoC4/PWM.c ****         }
 460:Generated_Source\PSoC4/PWM.c **** 
 461:Generated_Source\PSoC4/PWM.c ****     #endif /* PWM_UseStatus */
 462:Generated_Source\PSoC4/PWM.c **** 
 463:Generated_Source\PSoC4/PWM.c **** #endif /* !PWM_UsingFixedFunction */
 464:Generated_Source\PSoC4/PWM.c **** 
 465:Generated_Source\PSoC4/PWM.c **** 
 466:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 467:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WritePeriod
 468:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 469:Generated_Source\PSoC4/PWM.c **** *
 470:Generated_Source\PSoC4/PWM.c **** * Summary:
 471:Generated_Source\PSoC4/PWM.c **** *  This function is used to change the period of the counter.  The new period
 472:Generated_Source\PSoC4/PWM.c **** *  will be loaded the next time terminal count is detected.
 473:Generated_Source\PSoC4/PWM.c **** *
 474:Generated_Source\PSoC4/PWM.c **** * Parameters:
 475:Generated_Source\PSoC4/PWM.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:Generated_Source\PSoC4/PWM.c **** *           will result in the counter remaining at zero.
 477:Generated_Source\PSoC4/PWM.c **** *
 478:Generated_Source\PSoC4/PWM.c **** * Return:
 479:Generated_Source\PSoC4/PWM.c **** *  None
 480:Generated_Source\PSoC4/PWM.c **** *
 481:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 482:Generated_Source\PSoC4/PWM.c **** void PWM_WritePeriod(uint8 period) 
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccAKEX6L.s 			page 12


 483:Generated_Source\PSoC4/PWM.c **** {
 146              		.loc 1 483 0
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 0
 149              		@ frame_needed = 0, uses_anonymous_args = 0
 150              		@ link register save eliminated.
 151              	.LVL1:
 484:Generated_Source\PSoC4/PWM.c ****     #if(PWM_UsingFixedFunction)
 485:Generated_Source\PSoC4/PWM.c ****         CY_SET_REG16(PWM_PERIOD_LSB_PTR, (uint16)period);
 486:Generated_Source\PSoC4/PWM.c ****     #else
 487:Generated_Source\PSoC4/PWM.c ****         CY_SET_REG8(PWM_PERIOD_LSB_PTR, period);
 152              		.loc 1 487 0
 153 0000 014B     		ldr	r3, .L14
 154 0002 1870     		strb	r0, [r3]
 488:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UsingFixedFunction) */
 489:Generated_Source\PSoC4/PWM.c **** }
 155              		.loc 1 489 0
 156              		@ sp needed
 157 0004 7047     		bx	lr
 158              	.L15:
 159 0006 C046     		.align	2
 160              	.L14:
 161 0008 43000F40 		.word	1074724931
 162              		.cfi_endproc
 163              	.LFE8:
 164              		.size	PWM_WritePeriod, .-PWM_WritePeriod
 165              		.section	.text.PWM_WriteCompare,"ax",%progbits
 166              		.align	2
 167              		.global	PWM_WriteCompare
 168              		.code	16
 169              		.thumb_func
 170              		.type	PWM_WriteCompare, %function
 171              	PWM_WriteCompare:
 172              	.LFB9:
 490:Generated_Source\PSoC4/PWM.c **** 
 491:Generated_Source\PSoC4/PWM.c **** #if (PWM_UseOneCompareMode)
 492:Generated_Source\PSoC4/PWM.c **** 
 493:Generated_Source\PSoC4/PWM.c **** 
 494:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 495:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_WriteCompare
 496:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 497:Generated_Source\PSoC4/PWM.c ****     *
 498:Generated_Source\PSoC4/PWM.c ****     * Summary:
 499:Generated_Source\PSoC4/PWM.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:Generated_Source\PSoC4/PWM.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:Generated_Source\PSoC4/PWM.c ****     *  The compare output will be driven high when the present counter value is
 502:Generated_Source\PSoC4/PWM.c ****     *  compared to the compare value based on the compare mode defined in
 503:Generated_Source\PSoC4/PWM.c ****     *  Dither Mode.
 504:Generated_Source\PSoC4/PWM.c ****     *
 505:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 506:Generated_Source\PSoC4/PWM.c ****     *  compare:  New compare value.
 507:Generated_Source\PSoC4/PWM.c ****     *
 508:Generated_Source\PSoC4/PWM.c ****     * Return:
 509:Generated_Source\PSoC4/PWM.c ****     *  None
 510:Generated_Source\PSoC4/PWM.c ****     *
 511:Generated_Source\PSoC4/PWM.c ****     * Side Effects:
 512:Generated_Source\PSoC4/PWM.c ****     *  This function is only available if the PWM mode parameter is set to
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccAKEX6L.s 			page 13


 513:Generated_Source\PSoC4/PWM.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:Generated_Source\PSoC4/PWM.c ****     *
 515:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 516:Generated_Source\PSoC4/PWM.c ****     void PWM_WriteCompare(uint8 compare) \
 517:Generated_Source\PSoC4/PWM.c ****                                        
 518:Generated_Source\PSoC4/PWM.c ****     {
 173              		.loc 1 518 0
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 0
 176              		@ frame_needed = 0, uses_anonymous_args = 0
 177              		@ link register save eliminated.
 178              	.LVL2:
 519:Generated_Source\PSoC4/PWM.c ****         #if(PWM_UsingFixedFunction)
 520:Generated_Source\PSoC4/PWM.c ****             CY_SET_REG16(PWM_COMPARE1_LSB_PTR, (uint16)compare);
 521:Generated_Source\PSoC4/PWM.c ****         #else
 522:Generated_Source\PSoC4/PWM.c ****             CY_SET_REG8(PWM_COMPARE1_LSB_PTR, compare);
 179              		.loc 1 522 0
 180 0000 014B     		ldr	r3, .L17
 181 0002 1870     		strb	r0, [r3]
 523:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UsingFixedFunction) */
 524:Generated_Source\PSoC4/PWM.c **** 
 525:Generated_Source\PSoC4/PWM.c ****         #if (PWM_PWMMode == PWM__B_PWM__DITHER)
 526:Generated_Source\PSoC4/PWM.c ****             #if(PWM_UsingFixedFunction)
 527:Generated_Source\PSoC4/PWM.c ****                 CY_SET_REG16(PWM_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:Generated_Source\PSoC4/PWM.c ****             #else
 529:Generated_Source\PSoC4/PWM.c ****                 CY_SET_REG8(PWM_COMPARE2_LSB_PTR, (compare + 1u));
 530:Generated_Source\PSoC4/PWM.c ****             #endif /* (PWM_UsingFixedFunction) */
 531:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_PWMMode == PWM__B_PWM__DITHER) */
 532:Generated_Source\PSoC4/PWM.c ****     }
 182              		.loc 1 532 0
 183              		@ sp needed
 184 0004 7047     		bx	lr
 185              	.L18:
 186 0006 C046     		.align	2
 187              	.L17:
 188 0008 23000F40 		.word	1074724899
 189              		.cfi_endproc
 190              	.LFE9:
 191              		.size	PWM_WriteCompare, .-PWM_WriteCompare
 192              		.section	.text.PWM_Init,"ax",%progbits
 193              		.align	2
 194              		.global	PWM_Init
 195              		.code	16
 196              		.thumb_func
 197              		.type	PWM_Init, %function
 198              	PWM_Init:
 199              	.LFB3:
  85:Generated_Source\PSoC4/PWM.c ****     #if (PWM_UsingFixedFunction || PWM_UseControl)
 200              		.loc 1 85 0
 201              		.cfi_startproc
 202              		@ args = 0, pretend = 0, frame = 0
 203              		@ frame_needed = 0, uses_anonymous_args = 0
 204 0000 10B5     		push	{r4, lr}
 205              		.cfi_def_cfa_offset 8
 206              		.cfi_offset 4, -8
 207              		.cfi_offset 14, -4
 117:Generated_Source\PSoC4/PWM.c ****                 ((uint8)(~PWM_CTRL_CMPMODE1_MASK));
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccAKEX6L.s 			page 14


 208              		.loc 1 117 0
 209 0002 0C49     		ldr	r1, .L20
 210 0004 0B78     		ldrb	r3, [r1]
 211 0006 3F22     		movs	r2, #63
 212 0008 9343     		bics	r3, r2
 213              	.LVL3:
 119:Generated_Source\PSoC4/PWM.c ****                                    PWM_DEFAULT_COMPARE1_MODE;
 214              		.loc 1 119 0
 215 000a 0922     		movs	r2, #9
 216 000c 1343     		orrs	r3, r2
 217              	.LVL4:
 218 000e DBB2     		uxtb	r3, r3
 219 0010 0B70     		strb	r3, [r1]
 126:Generated_Source\PSoC4/PWM.c ****         #else /* (PWM_Resolution == 16)*/
 220              		.loc 1 126 0
 221 0012 094A     		ldr	r2, .L20+4
 222 0014 1178     		ldrb	r1, [r2]
 223 0016 0123     		movs	r3, #1
 224 0018 0B43     		orrs	r3, r1
 225 001a DBB2     		uxtb	r3, r3
 226 001c 1370     		strb	r3, [r2]
 133:Generated_Source\PSoC4/PWM.c ****     #endif /* (!PWM_UsingFixedFunction) */
 227              		.loc 1 133 0
 228 001e FF20     		movs	r0, #255
 229 0020 FFF7FEFF 		bl	PWM_WriteCounter
 230              	.LVL5:
 136:Generated_Source\PSoC4/PWM.c **** 
 231              		.loc 1 136 0
 232 0024 FF20     		movs	r0, #255
 233 0026 FFF7FEFF 		bl	PWM_WritePeriod
 234              	.LVL6:
 139:Generated_Source\PSoC4/PWM.c ****         #else
 235              		.loc 1 139 0
 236 002a FF20     		movs	r0, #255
 237 002c FFF7FEFF 		bl	PWM_WriteCompare
 238              	.LVL7:
 179:Generated_Source\PSoC4/PWM.c **** 
 239              		.loc 1 179 0
 240              		@ sp needed
 241 0030 10BD     		pop	{r4, pc}
 242              	.L21:
 243 0032 C046     		.align	2
 244              	.L20:
 245 0034 70000F40 		.word	1074724976
 246 0038 93000F40 		.word	1074725011
 247              		.cfi_endproc
 248              	.LFE3:
 249              		.size	PWM_Init, .-PWM_Init
 250              		.section	.text.PWM_Start,"ax",%progbits
 251              		.align	2
 252              		.global	PWM_Start
 253              		.code	16
 254              		.thumb_func
 255              		.type	PWM_Start, %function
 256              	PWM_Start:
 257              	.LFB2:
  56:Generated_Source\PSoC4/PWM.c ****     /* If not Initialized then initialize all required hardware and software */
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccAKEX6L.s 			page 15


 258              		.loc 1 56 0
 259              		.cfi_startproc
 260              		@ args = 0, pretend = 0, frame = 0
 261              		@ frame_needed = 0, uses_anonymous_args = 0
 262 0000 10B5     		push	{r4, lr}
 263              		.cfi_def_cfa_offset 8
 264              		.cfi_offset 4, -8
 265              		.cfi_offset 14, -4
  58:Generated_Source\PSoC4/PWM.c ****     {
 266              		.loc 1 58 0
 267 0002 064B     		ldr	r3, .L24
 268 0004 1B78     		ldrb	r3, [r3]
 269 0006 002B     		cmp	r3, #0
 270 0008 04D1     		bne	.L23
  60:Generated_Source\PSoC4/PWM.c ****         PWM_initVar = 1u;
 271              		.loc 1 60 0
 272 000a FFF7FEFF 		bl	PWM_Init
 273              	.LVL8:
  61:Generated_Source\PSoC4/PWM.c ****     }
 274              		.loc 1 61 0
 275 000e 0122     		movs	r2, #1
 276 0010 024B     		ldr	r3, .L24
 277 0012 1A70     		strb	r2, [r3]
 278              	.L23:
  63:Generated_Source\PSoC4/PWM.c **** 
 279              		.loc 1 63 0
 280 0014 FFF7FEFF 		bl	PWM_Enable
 281              	.LVL9:
  65:Generated_Source\PSoC4/PWM.c **** 
 282              		.loc 1 65 0
 283              		@ sp needed
 284 0018 10BD     		pop	{r4, pc}
 285              	.L25:
 286 001a C046     		.align	2
 287              	.L24:
 288 001c 00000000 		.word	.LANCHOR0
 289              		.cfi_endproc
 290              	.LFE2:
 291              		.size	PWM_Start, .-PWM_Start
 292              		.section	.text.PWM_ReadControlRegister,"ax",%progbits
 293              		.align	2
 294              		.global	PWM_ReadControlRegister
 295              		.code	16
 296              		.thumb_func
 297              		.type	PWM_ReadControlRegister, %function
 298              	PWM_ReadControlRegister:
 299              	.LFB10:
 533:Generated_Source\PSoC4/PWM.c **** 
 534:Generated_Source\PSoC4/PWM.c **** 
 535:Generated_Source\PSoC4/PWM.c **** #else
 536:Generated_Source\PSoC4/PWM.c **** 
 537:Generated_Source\PSoC4/PWM.c **** 
 538:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 539:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_WriteCompare1
 540:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 541:Generated_Source\PSoC4/PWM.c ****     *
 542:Generated_Source\PSoC4/PWM.c ****     * Summary:
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccAKEX6L.s 			page 16


 543:Generated_Source\PSoC4/PWM.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:Generated_Source\PSoC4/PWM.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:Generated_Source\PSoC4/PWM.c ****     *  driven high when the present counter value is less than or less than or
 546:Generated_Source\PSoC4/PWM.c ****     *  equal to the compare register, depending on the mode.
 547:Generated_Source\PSoC4/PWM.c ****     *
 548:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 549:Generated_Source\PSoC4/PWM.c ****     *  compare:  New compare value.
 550:Generated_Source\PSoC4/PWM.c ****     *
 551:Generated_Source\PSoC4/PWM.c ****     * Return:
 552:Generated_Source\PSoC4/PWM.c ****     *  None
 553:Generated_Source\PSoC4/PWM.c ****     *
 554:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 555:Generated_Source\PSoC4/PWM.c ****     void PWM_WriteCompare1(uint8 compare) \
 556:Generated_Source\PSoC4/PWM.c ****                                         
 557:Generated_Source\PSoC4/PWM.c ****     {
 558:Generated_Source\PSoC4/PWM.c ****         #if(PWM_UsingFixedFunction)
 559:Generated_Source\PSoC4/PWM.c ****             CY_SET_REG16(PWM_COMPARE1_LSB_PTR, (uint16)compare);
 560:Generated_Source\PSoC4/PWM.c ****         #else
 561:Generated_Source\PSoC4/PWM.c ****             CY_SET_REG8(PWM_COMPARE1_LSB_PTR, compare);
 562:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UsingFixedFunction) */
 563:Generated_Source\PSoC4/PWM.c ****     }
 564:Generated_Source\PSoC4/PWM.c **** 
 565:Generated_Source\PSoC4/PWM.c **** 
 566:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 567:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_WriteCompare2
 568:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 569:Generated_Source\PSoC4/PWM.c ****     *
 570:Generated_Source\PSoC4/PWM.c ****     * Summary:
 571:Generated_Source\PSoC4/PWM.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:Generated_Source\PSoC4/PWM.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:Generated_Source\PSoC4/PWM.c ****     *  The compare output will be driven high when the present counter value is
 574:Generated_Source\PSoC4/PWM.c ****     *  less than or less than or equal to the compare register, depending on the
 575:Generated_Source\PSoC4/PWM.c ****     *  mode.
 576:Generated_Source\PSoC4/PWM.c ****     *
 577:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 578:Generated_Source\PSoC4/PWM.c ****     *  compare:  New compare value.
 579:Generated_Source\PSoC4/PWM.c ****     *
 580:Generated_Source\PSoC4/PWM.c ****     * Return:
 581:Generated_Source\PSoC4/PWM.c ****     *  None
 582:Generated_Source\PSoC4/PWM.c ****     *
 583:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 584:Generated_Source\PSoC4/PWM.c ****     void PWM_WriteCompare2(uint8 compare) \
 585:Generated_Source\PSoC4/PWM.c ****                                         
 586:Generated_Source\PSoC4/PWM.c ****     {
 587:Generated_Source\PSoC4/PWM.c ****         #if(PWM_UsingFixedFunction)
 588:Generated_Source\PSoC4/PWM.c ****             CY_SET_REG16(PWM_COMPARE2_LSB_PTR, compare);
 589:Generated_Source\PSoC4/PWM.c ****         #else
 590:Generated_Source\PSoC4/PWM.c ****             CY_SET_REG8(PWM_COMPARE2_LSB_PTR, compare);
 591:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UsingFixedFunction) */
 592:Generated_Source\PSoC4/PWM.c ****     }
 593:Generated_Source\PSoC4/PWM.c **** #endif /* UseOneCompareMode */
 594:Generated_Source\PSoC4/PWM.c **** 
 595:Generated_Source\PSoC4/PWM.c **** #if (PWM_DeadBandUsed)
 596:Generated_Source\PSoC4/PWM.c **** 
 597:Generated_Source\PSoC4/PWM.c **** 
 598:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 599:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_WriteDeadTime
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccAKEX6L.s 			page 17


 600:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 601:Generated_Source\PSoC4/PWM.c ****     *
 602:Generated_Source\PSoC4/PWM.c ****     * Summary:
 603:Generated_Source\PSoC4/PWM.c ****     *  This function writes the dead-band counts to the corresponding register
 604:Generated_Source\PSoC4/PWM.c ****     *
 605:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 606:Generated_Source\PSoC4/PWM.c ****     *  deadtime:  Number of counts for dead time
 607:Generated_Source\PSoC4/PWM.c ****     *
 608:Generated_Source\PSoC4/PWM.c ****     * Return:
 609:Generated_Source\PSoC4/PWM.c ****     *  None
 610:Generated_Source\PSoC4/PWM.c ****     *
 611:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 612:Generated_Source\PSoC4/PWM.c ****     void PWM_WriteDeadTime(uint8 deadtime) 
 613:Generated_Source\PSoC4/PWM.c ****     {
 614:Generated_Source\PSoC4/PWM.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:Generated_Source\PSoC4/PWM.c ****         #if(!PWM_DeadBand2_4)
 616:Generated_Source\PSoC4/PWM.c ****             CY_SET_REG8(PWM_DEADBAND_COUNT_PTR, deadtime);
 617:Generated_Source\PSoC4/PWM.c ****         #else
 618:Generated_Source\PSoC4/PWM.c ****             /* Otherwise the data has to be masked and offset */
 619:Generated_Source\PSoC4/PWM.c ****             /* Clear existing data */
 620:Generated_Source\PSoC4/PWM.c ****             PWM_DEADBAND_COUNT &= ((uint8)(~PWM_DEADBAND_COUNT_MASK));
 621:Generated_Source\PSoC4/PWM.c **** 
 622:Generated_Source\PSoC4/PWM.c ****             /* Set new dead time */
 623:Generated_Source\PSoC4/PWM.c ****             #if(PWM_DEADBAND_COUNT_SHIFT)
 624:Generated_Source\PSoC4/PWM.c ****                 PWM_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_DEADBAND_COUNT_SHIFT)) &
 625:Generated_Source\PSoC4/PWM.c ****                                                     PWM_DEADBAND_COUNT_MASK;
 626:Generated_Source\PSoC4/PWM.c ****             #else
 627:Generated_Source\PSoC4/PWM.c ****                 PWM_DEADBAND_COUNT |= deadtime & PWM_DEADBAND_COUNT_MASK;
 628:Generated_Source\PSoC4/PWM.c ****             #endif /* (PWM_DEADBAND_COUNT_SHIFT) */
 629:Generated_Source\PSoC4/PWM.c **** 
 630:Generated_Source\PSoC4/PWM.c ****         #endif /* (!PWM_DeadBand2_4) */
 631:Generated_Source\PSoC4/PWM.c ****     }
 632:Generated_Source\PSoC4/PWM.c **** 
 633:Generated_Source\PSoC4/PWM.c **** 
 634:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 635:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_ReadDeadTime
 636:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 637:Generated_Source\PSoC4/PWM.c ****     *
 638:Generated_Source\PSoC4/PWM.c ****     * Summary:
 639:Generated_Source\PSoC4/PWM.c ****     *  This function reads the dead-band counts from the corresponding register
 640:Generated_Source\PSoC4/PWM.c ****     *
 641:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 642:Generated_Source\PSoC4/PWM.c ****     *  None
 643:Generated_Source\PSoC4/PWM.c ****     *
 644:Generated_Source\PSoC4/PWM.c ****     * Return:
 645:Generated_Source\PSoC4/PWM.c ****     *  Dead Band Counts
 646:Generated_Source\PSoC4/PWM.c ****     *
 647:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 648:Generated_Source\PSoC4/PWM.c ****     uint8 PWM_ReadDeadTime(void) 
 649:Generated_Source\PSoC4/PWM.c ****     {
 650:Generated_Source\PSoC4/PWM.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:Generated_Source\PSoC4/PWM.c ****         #if(!PWM_DeadBand2_4)
 652:Generated_Source\PSoC4/PWM.c ****             return (CY_GET_REG8(PWM_DEADBAND_COUNT_PTR));
 653:Generated_Source\PSoC4/PWM.c ****         #else
 654:Generated_Source\PSoC4/PWM.c **** 
 655:Generated_Source\PSoC4/PWM.c ****             /* Otherwise the data has to be masked and offset */
 656:Generated_Source\PSoC4/PWM.c ****             #if(PWM_DEADBAND_COUNT_SHIFT)
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccAKEX6L.s 			page 18


 657:Generated_Source\PSoC4/PWM.c ****                 return ((uint8)(((uint8)(PWM_DEADBAND_COUNT & PWM_DEADBAND_COUNT_MASK)) >>
 658:Generated_Source\PSoC4/PWM.c ****                                                                            PWM_DEADBAND_COUNT_SHIFT
 659:Generated_Source\PSoC4/PWM.c ****             #else
 660:Generated_Source\PSoC4/PWM.c ****                 return (PWM_DEADBAND_COUNT & PWM_DEADBAND_COUNT_MASK);
 661:Generated_Source\PSoC4/PWM.c ****             #endif /* (PWM_DEADBAND_COUNT_SHIFT) */
 662:Generated_Source\PSoC4/PWM.c ****         #endif /* (!PWM_DeadBand2_4) */
 663:Generated_Source\PSoC4/PWM.c ****     }
 664:Generated_Source\PSoC4/PWM.c **** #endif /* DeadBandUsed */
 665:Generated_Source\PSoC4/PWM.c **** 
 666:Generated_Source\PSoC4/PWM.c **** #if (PWM_UseStatus || PWM_UsingFixedFunction)
 667:Generated_Source\PSoC4/PWM.c **** 
 668:Generated_Source\PSoC4/PWM.c **** 
 669:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 670:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_SetInterruptMode
 671:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 672:Generated_Source\PSoC4/PWM.c ****     *
 673:Generated_Source\PSoC4/PWM.c ****     * Summary:
 674:Generated_Source\PSoC4/PWM.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:Generated_Source\PSoC4/PWM.c ****     *  source status register.
 676:Generated_Source\PSoC4/PWM.c ****     *
 677:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 678:Generated_Source\PSoC4/PWM.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:Generated_Source\PSoC4/PWM.c ****     *
 680:Generated_Source\PSoC4/PWM.c ****     * Return:
 681:Generated_Source\PSoC4/PWM.c ****     *  None
 682:Generated_Source\PSoC4/PWM.c ****     *
 683:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 684:Generated_Source\PSoC4/PWM.c ****     void PWM_SetInterruptMode(uint8 interruptMode) 
 685:Generated_Source\PSoC4/PWM.c ****     {
 686:Generated_Source\PSoC4/PWM.c ****         CY_SET_REG8(PWM_STATUS_MASK_PTR, interruptMode);
 687:Generated_Source\PSoC4/PWM.c ****     }
 688:Generated_Source\PSoC4/PWM.c **** 
 689:Generated_Source\PSoC4/PWM.c **** 
 690:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 691:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_ReadStatusRegister
 692:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 693:Generated_Source\PSoC4/PWM.c ****     *
 694:Generated_Source\PSoC4/PWM.c ****     * Summary:
 695:Generated_Source\PSoC4/PWM.c ****     *  This function returns the current state of the status register.
 696:Generated_Source\PSoC4/PWM.c ****     *
 697:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 698:Generated_Source\PSoC4/PWM.c ****     *  None
 699:Generated_Source\PSoC4/PWM.c ****     *
 700:Generated_Source\PSoC4/PWM.c ****     * Return:
 701:Generated_Source\PSoC4/PWM.c ****     *  uint8 : Current status register value. The status register bits are:
 702:Generated_Source\PSoC4/PWM.c ****     *  [7:6] : Unused(0)
 703:Generated_Source\PSoC4/PWM.c ****     *  [5]   : Kill event output
 704:Generated_Source\PSoC4/PWM.c ****     *  [4]   : FIFO not empty
 705:Generated_Source\PSoC4/PWM.c ****     *  [3]   : FIFO full
 706:Generated_Source\PSoC4/PWM.c ****     *  [2]   : Terminal count
 707:Generated_Source\PSoC4/PWM.c ****     *  [1]   : Compare output 2
 708:Generated_Source\PSoC4/PWM.c ****     *  [0]   : Compare output 1
 709:Generated_Source\PSoC4/PWM.c ****     *
 710:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 711:Generated_Source\PSoC4/PWM.c ****     uint8 PWM_ReadStatusRegister(void) 
 712:Generated_Source\PSoC4/PWM.c ****     {
 713:Generated_Source\PSoC4/PWM.c ****         return (CY_GET_REG8(PWM_STATUS_PTR));
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccAKEX6L.s 			page 19


 714:Generated_Source\PSoC4/PWM.c ****     }
 715:Generated_Source\PSoC4/PWM.c **** 
 716:Generated_Source\PSoC4/PWM.c **** #endif /* (PWM_UseStatus || PWM_UsingFixedFunction) */
 717:Generated_Source\PSoC4/PWM.c **** 
 718:Generated_Source\PSoC4/PWM.c **** 
 719:Generated_Source\PSoC4/PWM.c **** #if (PWM_UseControl)
 720:Generated_Source\PSoC4/PWM.c **** 
 721:Generated_Source\PSoC4/PWM.c **** 
 722:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 723:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_ReadControlRegister
 724:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 725:Generated_Source\PSoC4/PWM.c ****     *
 726:Generated_Source\PSoC4/PWM.c ****     * Summary:
 727:Generated_Source\PSoC4/PWM.c ****     *  Returns the current state of the control register. This API is available
 728:Generated_Source\PSoC4/PWM.c ****     *  only if the control register is not removed.
 729:Generated_Source\PSoC4/PWM.c ****     *
 730:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 731:Generated_Source\PSoC4/PWM.c ****     *  None
 732:Generated_Source\PSoC4/PWM.c ****     *
 733:Generated_Source\PSoC4/PWM.c ****     * Return:
 734:Generated_Source\PSoC4/PWM.c ****     *  uint8 : Current control register value
 735:Generated_Source\PSoC4/PWM.c ****     *
 736:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 737:Generated_Source\PSoC4/PWM.c ****     uint8 PWM_ReadControlRegister(void) 
 738:Generated_Source\PSoC4/PWM.c ****     {
 300              		.loc 1 738 0
 301              		.cfi_startproc
 302              		@ args = 0, pretend = 0, frame = 0
 303              		@ frame_needed = 0, uses_anonymous_args = 0
 304              		@ link register save eliminated.
 739:Generated_Source\PSoC4/PWM.c ****         uint8 result;
 740:Generated_Source\PSoC4/PWM.c **** 
 741:Generated_Source\PSoC4/PWM.c ****         result = CY_GET_REG8(PWM_CONTROL_PTR);
 305              		.loc 1 741 0
 306 0000 014B     		ldr	r3, .L27
 307 0002 1878     		ldrb	r0, [r3]
 308 0004 C0B2     		uxtb	r0, r0
 309              	.LVL10:
 742:Generated_Source\PSoC4/PWM.c ****         return (result);
 743:Generated_Source\PSoC4/PWM.c ****     }
 310              		.loc 1 743 0
 311              		@ sp needed
 312 0006 7047     		bx	lr
 313              	.L28:
 314              		.align	2
 315              	.L27:
 316 0008 70000F40 		.word	1074724976
 317              		.cfi_endproc
 318              	.LFE10:
 319              		.size	PWM_ReadControlRegister, .-PWM_ReadControlRegister
 320              		.section	.text.PWM_WriteControlRegister,"ax",%progbits
 321              		.align	2
 322              		.global	PWM_WriteControlRegister
 323              		.code	16
 324              		.thumb_func
 325              		.type	PWM_WriteControlRegister, %function
 326              	PWM_WriteControlRegister:
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccAKEX6L.s 			page 20


 327              	.LFB11:
 744:Generated_Source\PSoC4/PWM.c **** 
 745:Generated_Source\PSoC4/PWM.c **** 
 746:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 747:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_WriteControlRegister
 748:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 749:Generated_Source\PSoC4/PWM.c ****     *
 750:Generated_Source\PSoC4/PWM.c ****     * Summary:
 751:Generated_Source\PSoC4/PWM.c ****     *  Sets the bit field of the control register. This API is available only if
 752:Generated_Source\PSoC4/PWM.c ****     *  the control register is not removed.
 753:Generated_Source\PSoC4/PWM.c ****     *
 754:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 755:Generated_Source\PSoC4/PWM.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:Generated_Source\PSoC4/PWM.c ****     *  [7]   : PWM Enable
 757:Generated_Source\PSoC4/PWM.c ****     *  [6]   : Reset
 758:Generated_Source\PSoC4/PWM.c ****     *  [5:3] : Compare Mode2
 759:Generated_Source\PSoC4/PWM.c ****     *  [2:0] : Compare Mode2
 760:Generated_Source\PSoC4/PWM.c ****     *
 761:Generated_Source\PSoC4/PWM.c ****     * Return:
 762:Generated_Source\PSoC4/PWM.c ****     *  None
 763:Generated_Source\PSoC4/PWM.c ****     *
 764:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 765:Generated_Source\PSoC4/PWM.c ****     void PWM_WriteControlRegister(uint8 control) 
 766:Generated_Source\PSoC4/PWM.c ****     {
 328              		.loc 1 766 0
 329              		.cfi_startproc
 330              		@ args = 0, pretend = 0, frame = 0
 331              		@ frame_needed = 0, uses_anonymous_args = 0
 332              		@ link register save eliminated.
 333              	.LVL11:
 767:Generated_Source\PSoC4/PWM.c ****         CY_SET_REG8(PWM_CONTROL_PTR, control);
 334              		.loc 1 767 0
 335 0000 014B     		ldr	r3, .L30
 336 0002 1870     		strb	r0, [r3]
 768:Generated_Source\PSoC4/PWM.c ****     }
 337              		.loc 1 768 0
 338              		@ sp needed
 339 0004 7047     		bx	lr
 340              	.L31:
 341 0006 C046     		.align	2
 342              	.L30:
 343 0008 70000F40 		.word	1074724976
 344              		.cfi_endproc
 345              	.LFE11:
 346              		.size	PWM_WriteControlRegister, .-PWM_WriteControlRegister
 347              		.section	.text.PWM_ReadCapture,"ax",%progbits
 348              		.align	2
 349              		.global	PWM_ReadCapture
 350              		.code	16
 351              		.thumb_func
 352              		.type	PWM_ReadCapture, %function
 353              	PWM_ReadCapture:
 354              	.LFB12:
 769:Generated_Source\PSoC4/PWM.c **** 
 770:Generated_Source\PSoC4/PWM.c **** #endif /* (PWM_UseControl) */
 771:Generated_Source\PSoC4/PWM.c **** 
 772:Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccAKEX6L.s 			page 21


 773:Generated_Source\PSoC4/PWM.c **** #if (!PWM_UsingFixedFunction)
 774:Generated_Source\PSoC4/PWM.c **** 
 775:Generated_Source\PSoC4/PWM.c **** 
 776:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 777:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_ReadCapture
 778:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 779:Generated_Source\PSoC4/PWM.c ****     *
 780:Generated_Source\PSoC4/PWM.c ****     * Summary:
 781:Generated_Source\PSoC4/PWM.c ****     *  Reads the capture value from the capture FIFO.
 782:Generated_Source\PSoC4/PWM.c ****     *
 783:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 784:Generated_Source\PSoC4/PWM.c ****     *  None
 785:Generated_Source\PSoC4/PWM.c ****     *
 786:Generated_Source\PSoC4/PWM.c ****     * Return:
 787:Generated_Source\PSoC4/PWM.c ****     *  uint8/uint16: The current capture value
 788:Generated_Source\PSoC4/PWM.c ****     *
 789:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 790:Generated_Source\PSoC4/PWM.c ****     uint8 PWM_ReadCapture(void) 
 791:Generated_Source\PSoC4/PWM.c ****     {
 355              		.loc 1 791 0
 356              		.cfi_startproc
 357              		@ args = 0, pretend = 0, frame = 0
 358              		@ frame_needed = 0, uses_anonymous_args = 0
 359              		@ link register save eliminated.
 792:Generated_Source\PSoC4/PWM.c ****         return (CY_GET_REG8(PWM_CAPTURE_LSB_PTR));
 360              		.loc 1 792 0
 361 0000 014B     		ldr	r3, .L33
 362 0002 1878     		ldrb	r0, [r3]
 363 0004 C0B2     		uxtb	r0, r0
 793:Generated_Source\PSoC4/PWM.c ****     }
 364              		.loc 1 793 0
 365              		@ sp needed
 366 0006 7047     		bx	lr
 367              	.L34:
 368              		.align	2
 369              	.L33:
 370 0008 53000F40 		.word	1074724947
 371              		.cfi_endproc
 372              	.LFE12:
 373              		.size	PWM_ReadCapture, .-PWM_ReadCapture
 374              		.section	.text.PWM_ReadCompare,"ax",%progbits
 375              		.align	2
 376              		.global	PWM_ReadCompare
 377              		.code	16
 378              		.thumb_func
 379              		.type	PWM_ReadCompare, %function
 380              	PWM_ReadCompare:
 381              	.LFB13:
 794:Generated_Source\PSoC4/PWM.c **** 
 795:Generated_Source\PSoC4/PWM.c **** #endif /* (!PWM_UsingFixedFunction) */
 796:Generated_Source\PSoC4/PWM.c **** 
 797:Generated_Source\PSoC4/PWM.c **** 
 798:Generated_Source\PSoC4/PWM.c **** #if (PWM_UseOneCompareMode)
 799:Generated_Source\PSoC4/PWM.c **** 
 800:Generated_Source\PSoC4/PWM.c **** 
 801:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 802:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_ReadCompare
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccAKEX6L.s 			page 22


 803:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 804:Generated_Source\PSoC4/PWM.c ****     *
 805:Generated_Source\PSoC4/PWM.c ****     * Summary:
 806:Generated_Source\PSoC4/PWM.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:Generated_Source\PSoC4/PWM.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:Generated_Source\PSoC4/PWM.c ****     *
 809:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 810:Generated_Source\PSoC4/PWM.c ****     *  None
 811:Generated_Source\PSoC4/PWM.c ****     *
 812:Generated_Source\PSoC4/PWM.c ****     * Return:
 813:Generated_Source\PSoC4/PWM.c ****     *  uint8/uint16: Current compare value
 814:Generated_Source\PSoC4/PWM.c ****     *
 815:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 816:Generated_Source\PSoC4/PWM.c ****     uint8 PWM_ReadCompare(void) 
 817:Generated_Source\PSoC4/PWM.c ****     {
 382              		.loc 1 817 0
 383              		.cfi_startproc
 384              		@ args = 0, pretend = 0, frame = 0
 385              		@ frame_needed = 0, uses_anonymous_args = 0
 386              		@ link register save eliminated.
 818:Generated_Source\PSoC4/PWM.c ****         #if(PWM_UsingFixedFunction)
 819:Generated_Source\PSoC4/PWM.c ****             return ((uint8)CY_GET_REG16(PWM_COMPARE1_LSB_PTR));
 820:Generated_Source\PSoC4/PWM.c ****         #else
 821:Generated_Source\PSoC4/PWM.c ****             return (CY_GET_REG8(PWM_COMPARE1_LSB_PTR));
 387              		.loc 1 821 0
 388 0000 014B     		ldr	r3, .L36
 389 0002 1878     		ldrb	r0, [r3]
 390 0004 C0B2     		uxtb	r0, r0
 822:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UsingFixedFunction) */
 823:Generated_Source\PSoC4/PWM.c ****     }
 391              		.loc 1 823 0
 392              		@ sp needed
 393 0006 7047     		bx	lr
 394              	.L37:
 395              		.align	2
 396              	.L36:
 397 0008 23000F40 		.word	1074724899
 398              		.cfi_endproc
 399              	.LFE13:
 400              		.size	PWM_ReadCompare, .-PWM_ReadCompare
 401              		.section	.text.PWM_ReadPeriod,"ax",%progbits
 402              		.align	2
 403              		.global	PWM_ReadPeriod
 404              		.code	16
 405              		.thumb_func
 406              		.type	PWM_ReadPeriod, %function
 407              	PWM_ReadPeriod:
 408              	.LFB14:
 824:Generated_Source\PSoC4/PWM.c **** 
 825:Generated_Source\PSoC4/PWM.c **** #else
 826:Generated_Source\PSoC4/PWM.c **** 
 827:Generated_Source\PSoC4/PWM.c **** 
 828:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 829:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_ReadCompare1
 830:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 831:Generated_Source\PSoC4/PWM.c ****     *
 832:Generated_Source\PSoC4/PWM.c ****     * Summary:
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccAKEX6L.s 			page 23


 833:Generated_Source\PSoC4/PWM.c ****     *  Reads the compare value for the compare1 output.
 834:Generated_Source\PSoC4/PWM.c ****     *
 835:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 836:Generated_Source\PSoC4/PWM.c ****     *  None
 837:Generated_Source\PSoC4/PWM.c ****     *
 838:Generated_Source\PSoC4/PWM.c ****     * Return:
 839:Generated_Source\PSoC4/PWM.c ****     *  uint8/uint16: Current compare value.
 840:Generated_Source\PSoC4/PWM.c ****     *
 841:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 842:Generated_Source\PSoC4/PWM.c ****     uint8 PWM_ReadCompare1(void) 
 843:Generated_Source\PSoC4/PWM.c ****     {
 844:Generated_Source\PSoC4/PWM.c ****         return (CY_GET_REG8(PWM_COMPARE1_LSB_PTR));
 845:Generated_Source\PSoC4/PWM.c ****     }
 846:Generated_Source\PSoC4/PWM.c **** 
 847:Generated_Source\PSoC4/PWM.c **** 
 848:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 849:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_ReadCompare2
 850:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 851:Generated_Source\PSoC4/PWM.c ****     *
 852:Generated_Source\PSoC4/PWM.c ****     * Summary:
 853:Generated_Source\PSoC4/PWM.c ****     *  Reads the compare value for the compare2 output.
 854:Generated_Source\PSoC4/PWM.c ****     *
 855:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 856:Generated_Source\PSoC4/PWM.c ****     *  None
 857:Generated_Source\PSoC4/PWM.c ****     *
 858:Generated_Source\PSoC4/PWM.c ****     * Return:
 859:Generated_Source\PSoC4/PWM.c ****     *  uint8/uint16: Current compare value.
 860:Generated_Source\PSoC4/PWM.c ****     *
 861:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 862:Generated_Source\PSoC4/PWM.c ****     uint8 PWM_ReadCompare2(void) 
 863:Generated_Source\PSoC4/PWM.c ****     {
 864:Generated_Source\PSoC4/PWM.c ****         return (CY_GET_REG8(PWM_COMPARE2_LSB_PTR));
 865:Generated_Source\PSoC4/PWM.c ****     }
 866:Generated_Source\PSoC4/PWM.c **** 
 867:Generated_Source\PSoC4/PWM.c **** #endif /* (PWM_UseOneCompareMode) */
 868:Generated_Source\PSoC4/PWM.c **** 
 869:Generated_Source\PSoC4/PWM.c **** 
 870:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 871:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadPeriod
 872:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 873:Generated_Source\PSoC4/PWM.c **** *
 874:Generated_Source\PSoC4/PWM.c **** * Summary:
 875:Generated_Source\PSoC4/PWM.c **** *  Reads the period value used by the PWM hardware.
 876:Generated_Source\PSoC4/PWM.c **** *
 877:Generated_Source\PSoC4/PWM.c **** * Parameters:
 878:Generated_Source\PSoC4/PWM.c **** *  None
 879:Generated_Source\PSoC4/PWM.c **** *
 880:Generated_Source\PSoC4/PWM.c **** * Return:
 881:Generated_Source\PSoC4/PWM.c **** *  uint8/16: Period value
 882:Generated_Source\PSoC4/PWM.c **** *
 883:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 884:Generated_Source\PSoC4/PWM.c **** uint8 PWM_ReadPeriod(void) 
 885:Generated_Source\PSoC4/PWM.c **** {
 409              		.loc 1 885 0
 410              		.cfi_startproc
 411              		@ args = 0, pretend = 0, frame = 0
 412              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccAKEX6L.s 			page 24


 413              		@ link register save eliminated.
 886:Generated_Source\PSoC4/PWM.c ****     #if(PWM_UsingFixedFunction)
 887:Generated_Source\PSoC4/PWM.c ****         return ((uint8)CY_GET_REG16(PWM_PERIOD_LSB_PTR));
 888:Generated_Source\PSoC4/PWM.c ****     #else
 889:Generated_Source\PSoC4/PWM.c ****         return (CY_GET_REG8(PWM_PERIOD_LSB_PTR));
 414              		.loc 1 889 0
 415 0000 014B     		ldr	r3, .L39
 416 0002 1878     		ldrb	r0, [r3]
 417 0004 C0B2     		uxtb	r0, r0
 890:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UsingFixedFunction) */
 891:Generated_Source\PSoC4/PWM.c **** }
 418              		.loc 1 891 0
 419              		@ sp needed
 420 0006 7047     		bx	lr
 421              	.L40:
 422              		.align	2
 423              	.L39:
 424 0008 43000F40 		.word	1074724931
 425              		.cfi_endproc
 426              	.LFE14:
 427              		.size	PWM_ReadPeriod, .-PWM_ReadPeriod
 428              		.global	PWM_initVar
 429              		.bss
 430              		.set	.LANCHOR0,. + 0
 431              		.type	PWM_initVar, %object
 432              		.size	PWM_initVar, 1
 433              	PWM_initVar:
 434 0000 00       		.space	1
 435              		.text
 436              	.Letext0:
 437              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 438              		.section	.debug_info,"",%progbits
 439              	.Ldebug_info0:
 440 0000 75020000 		.4byte	0x275
 441 0004 0400     		.2byte	0x4
 442 0006 00000000 		.4byte	.Ldebug_abbrev0
 443 000a 04       		.byte	0x4
 444 000b 01       		.uleb128 0x1
 445 000c 3C010000 		.4byte	.LASF34
 446 0010 0C       		.byte	0xc
 447 0011 4B020000 		.4byte	.LASF35
 448 0015 10000000 		.4byte	.LASF36
 449 0019 00000000 		.4byte	.Ldebug_ranges0+0
 450 001d 00000000 		.4byte	0
 451 0021 00000000 		.4byte	.Ldebug_line0
 452 0025 02       		.uleb128 0x2
 453 0026 01       		.byte	0x1
 454 0027 06       		.byte	0x6
 455 0028 8C020000 		.4byte	.LASF0
 456 002c 02       		.uleb128 0x2
 457 002d 01       		.byte	0x1
 458 002e 08       		.byte	0x8
 459 002f A1000000 		.4byte	.LASF1
 460 0033 02       		.uleb128 0x2
 461 0034 02       		.byte	0x2
 462 0035 05       		.byte	0x5
 463 0036 1E020000 		.4byte	.LASF2
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccAKEX6L.s 			page 25


 464 003a 02       		.uleb128 0x2
 465 003b 02       		.byte	0x2
 466 003c 07       		.byte	0x7
 467 003d 70000000 		.4byte	.LASF3
 468 0041 02       		.uleb128 0x2
 469 0042 04       		.byte	0x4
 470 0043 05       		.byte	0x5
 471 0044 42020000 		.4byte	.LASF4
 472 0048 02       		.uleb128 0x2
 473 0049 04       		.byte	0x4
 474 004a 07       		.byte	0x7
 475 004b B4000000 		.4byte	.LASF5
 476 004f 02       		.uleb128 0x2
 477 0050 08       		.byte	0x8
 478 0051 05       		.byte	0x5
 479 0052 E3010000 		.4byte	.LASF6
 480 0056 02       		.uleb128 0x2
 481 0057 08       		.byte	0x8
 482 0058 07       		.byte	0x7
 483 0059 1E010000 		.4byte	.LASF7
 484 005d 03       		.uleb128 0x3
 485 005e 04       		.byte	0x4
 486 005f 05       		.byte	0x5
 487 0060 696E7400 		.ascii	"int\000"
 488 0064 02       		.uleb128 0x2
 489 0065 04       		.byte	0x4
 490 0066 07       		.byte	0x7
 491 0067 11010000 		.4byte	.LASF8
 492 006b 04       		.uleb128 0x4
 493 006c D6000000 		.4byte	.LASF12
 494 0070 02       		.byte	0x2
 495 0071 E601     		.2byte	0x1e6
 496 0073 2C000000 		.4byte	0x2c
 497 0077 02       		.uleb128 0x2
 498 0078 04       		.byte	0x4
 499 0079 04       		.byte	0x4
 500 007a 93000000 		.4byte	.LASF9
 501 007e 02       		.uleb128 0x2
 502 007f 08       		.byte	0x8
 503 0080 04       		.byte	0x4
 504 0081 E4000000 		.4byte	.LASF10
 505 0085 02       		.uleb128 0x2
 506 0086 01       		.byte	0x1
 507 0087 08       		.byte	0x8
 508 0088 F1010000 		.4byte	.LASF11
 509 008c 04       		.uleb128 0x4
 510 008d AF000000 		.4byte	.LASF13
 511 0091 02       		.byte	0x2
 512 0092 9002     		.2byte	0x290
 513 0094 98000000 		.4byte	0x98
 514 0098 05       		.uleb128 0x5
 515 0099 6B000000 		.4byte	0x6b
 516 009d 02       		.uleb128 0x2
 517 009e 08       		.byte	0x8
 518 009f 04       		.byte	0x4
 519 00a0 68020000 		.4byte	.LASF14
 520 00a4 02       		.uleb128 0x2
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccAKEX6L.s 			page 26


 521 00a5 04       		.byte	0x4
 522 00a6 07       		.byte	0x7
 523 00a7 DA010000 		.4byte	.LASF15
 524 00ab 06       		.uleb128 0x6
 525 00ac A0020000 		.4byte	.LASF16
 526 00b0 01       		.byte	0x1
 527 00b1 C7       		.byte	0xc7
 528 00b2 00000000 		.4byte	.LFB4
 529 00b6 14000000 		.4byte	.LFE4-.LFB4
 530 00ba 01       		.uleb128 0x1
 531 00bb 9C       		.byte	0x9c
 532 00bc 06       		.uleb128 0x6
 533 00bd 39020000 		.4byte	.LASF17
 534 00c1 01       		.byte	0x1
 535 00c2 E9       		.byte	0xe9
 536 00c3 00000000 		.4byte	.LFB5
 537 00c7 10000000 		.4byte	.LFE5-.LFB5
 538 00cb 01       		.uleb128 0x1
 539 00cc 9C       		.byte	0x9c
 540 00cd 07       		.uleb128 0x7
 541 00ce 28020000 		.4byte	.LASF18
 542 00d2 01       		.byte	0x1
 543 00d3 9301     		.2byte	0x193
 544 00d5 00000000 		.4byte	.LFB6
 545 00d9 0C000000 		.4byte	.LFE6-.LFB6
 546 00dd 01       		.uleb128 0x1
 547 00de 9C       		.byte	0x9c
 548 00df F2000000 		.4byte	0xf2
 549 00e3 08       		.uleb128 0x8
 550 00e4 99000000 		.4byte	.LASF20
 551 00e8 01       		.byte	0x1
 552 00e9 9301     		.2byte	0x193
 553 00eb 6B000000 		.4byte	0x6b
 554 00ef 01       		.uleb128 0x1
 555 00f0 50       		.byte	0x50
 556 00f1 00       		.byte	0
 557 00f2 09       		.uleb128 0x9
 558 00f3 C6000000 		.4byte	.LASF30
 559 00f7 01       		.byte	0x1
 560 00f8 A901     		.2byte	0x1a9
 561 00fa 6B000000 		.4byte	0x6b
 562 00fe 00000000 		.4byte	.LFB7
 563 0102 14000000 		.4byte	.LFE7-.LFB7
 564 0106 01       		.uleb128 0x1
 565 0107 9C       		.byte	0x9c
 566 0108 07       		.uleb128 0x7
 567 0109 CA010000 		.4byte	.LASF19
 568 010d 01       		.byte	0x1
 569 010e E201     		.2byte	0x1e2
 570 0110 00000000 		.4byte	.LFB8
 571 0114 0C000000 		.4byte	.LFE8-.LFB8
 572 0118 01       		.uleb128 0x1
 573 0119 9C       		.byte	0x9c
 574 011a 2D010000 		.4byte	0x12d
 575 011e 08       		.uleb128 0x8
 576 011f 5F000000 		.4byte	.LASF21
 577 0123 01       		.byte	0x1
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccAKEX6L.s 			page 27


 578 0124 E201     		.2byte	0x1e2
 579 0126 6B000000 		.4byte	0x6b
 580 012a 01       		.uleb128 0x1
 581 012b 50       		.byte	0x50
 582 012c 00       		.byte	0
 583 012d 07       		.uleb128 0x7
 584 012e EB000000 		.4byte	.LASF22
 585 0132 01       		.byte	0x1
 586 0133 0402     		.2byte	0x204
 587 0135 00000000 		.4byte	.LFB9
 588 0139 0C000000 		.4byte	.LFE9-.LFB9
 589 013d 01       		.uleb128 0x1
 590 013e 9C       		.byte	0x9c
 591 013f 52010000 		.4byte	0x152
 592 0143 08       		.uleb128 0x8
 593 0144 98020000 		.4byte	.LASF23
 594 0148 01       		.byte	0x1
 595 0149 0402     		.2byte	0x204
 596 014b 6B000000 		.4byte	0x6b
 597 014f 01       		.uleb128 0x1
 598 0150 50       		.byte	0x50
 599 0151 00       		.byte	0
 600 0152 0A       		.uleb128 0xa
 601 0153 FC000000 		.4byte	.LASF24
 602 0157 01       		.byte	0x1
 603 0158 54       		.byte	0x54
 604 0159 00000000 		.4byte	.LFB3
 605 015d 3C000000 		.4byte	.LFE3-.LFB3
 606 0161 01       		.uleb128 0x1
 607 0162 9C       		.byte	0x9c
 608 0163 AF010000 		.4byte	0x1af
 609 0167 0B       		.uleb128 0xb
 610 0168 AB020000 		.4byte	.LASF26
 611 016c 01       		.byte	0x1
 612 016d 57       		.byte	0x57
 613 016e 6B000000 		.4byte	0x6b
 614 0172 00000000 		.4byte	.LLST0
 615 0176 0C       		.uleb128 0xc
 616 0177 24000000 		.4byte	.LVL5
 617 017b CD000000 		.4byte	0xcd
 618 017f 8A010000 		.4byte	0x18a
 619 0183 0D       		.uleb128 0xd
 620 0184 01       		.uleb128 0x1
 621 0185 50       		.byte	0x50
 622 0186 02       		.uleb128 0x2
 623 0187 09       		.byte	0x9
 624 0188 FF       		.byte	0xff
 625 0189 00       		.byte	0
 626 018a 0C       		.uleb128 0xc
 627 018b 2A000000 		.4byte	.LVL6
 628 018f 08010000 		.4byte	0x108
 629 0193 9E010000 		.4byte	0x19e
 630 0197 0D       		.uleb128 0xd
 631 0198 01       		.uleb128 0x1
 632 0199 50       		.byte	0x50
 633 019a 02       		.uleb128 0x2
 634 019b 09       		.byte	0x9
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccAKEX6L.s 			page 28


 635 019c FF       		.byte	0xff
 636 019d 00       		.byte	0
 637 019e 0E       		.uleb128 0xe
 638 019f 30000000 		.4byte	.LVL7
 639 01a3 2D010000 		.4byte	0x12d
 640 01a7 0D       		.uleb128 0xd
 641 01a8 01       		.uleb128 0x1
 642 01a9 50       		.byte	0x50
 643 01aa 02       		.uleb128 0x2
 644 01ab 09       		.byte	0x9
 645 01ac FF       		.byte	0xff
 646 01ad 00       		.byte	0
 647 01ae 00       		.byte	0
 648 01af 0A       		.uleb128 0xa
 649 01b0 66000000 		.4byte	.LASF25
 650 01b4 01       		.byte	0x1
 651 01b5 37       		.byte	0x37
 652 01b6 00000000 		.4byte	.LFB2
 653 01ba 20000000 		.4byte	.LFE2-.LFB2
 654 01be 01       		.uleb128 0x1
 655 01bf 9C       		.byte	0x9c
 656 01c0 D7010000 		.4byte	0x1d7
 657 01c4 0F       		.uleb128 0xf
 658 01c5 0E000000 		.4byte	.LVL8
 659 01c9 52010000 		.4byte	0x152
 660 01cd 0F       		.uleb128 0xf
 661 01ce 18000000 		.4byte	.LVL9
 662 01d2 AB000000 		.4byte	0xab
 663 01d6 00       		.byte	0
 664 01d7 10       		.uleb128 0x10
 665 01d8 74020000 		.4byte	.LASF37
 666 01dc 01       		.byte	0x1
 667 01dd E102     		.2byte	0x2e1
 668 01df 6B000000 		.4byte	0x6b
 669 01e3 00000000 		.4byte	.LFB10
 670 01e7 0C000000 		.4byte	.LFE10-.LFB10
 671 01eb 01       		.uleb128 0x1
 672 01ec 9C       		.byte	0x9c
 673 01ed 00020000 		.4byte	0x200
 674 01f1 11       		.uleb128 0x11
 675 01f2 35010000 		.4byte	.LASF27
 676 01f6 01       		.byte	0x1
 677 01f7 E302     		.2byte	0x2e3
 678 01f9 6B000000 		.4byte	0x6b
 679 01fd 01       		.uleb128 0x1
 680 01fe 50       		.byte	0x50
 681 01ff 00       		.byte	0
 682 0200 07       		.uleb128 0x7
 683 0201 F6010000 		.4byte	.LASF28
 684 0205 01       		.byte	0x1
 685 0206 FD02     		.2byte	0x2fd
 686 0208 00000000 		.4byte	.LFB11
 687 020c 0C000000 		.4byte	.LFE11-.LFB11
 688 0210 01       		.uleb128 0x1
 689 0211 9C       		.byte	0x9c
 690 0212 25020000 		.4byte	0x225
 691 0216 08       		.uleb128 0x8
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccAKEX6L.s 			page 29


 692 0217 DC000000 		.4byte	.LASF29
 693 021b 01       		.byte	0x1
 694 021c FD02     		.2byte	0x2fd
 695 021e 6B000000 		.4byte	0x6b
 696 0222 01       		.uleb128 0x1
 697 0223 50       		.byte	0x50
 698 0224 00       		.byte	0
 699 0225 09       		.uleb128 0x9
 700 0226 83000000 		.4byte	.LASF31
 701 022a 01       		.byte	0x1
 702 022b 1603     		.2byte	0x316
 703 022d 6B000000 		.4byte	0x6b
 704 0231 00000000 		.4byte	.LFB12
 705 0235 0C000000 		.4byte	.LFE12-.LFB12
 706 0239 01       		.uleb128 0x1
 707 023a 9C       		.byte	0x9c
 708 023b 09       		.uleb128 0x9
 709 023c 00000000 		.4byte	.LASF32
 710 0240 01       		.byte	0x1
 711 0241 3003     		.2byte	0x330
 712 0243 6B000000 		.4byte	0x6b
 713 0247 00000000 		.4byte	.LFB13
 714 024b 0C000000 		.4byte	.LFE13-.LFB13
 715 024f 01       		.uleb128 0x1
 716 0250 9C       		.byte	0x9c
 717 0251 09       		.uleb128 0x9
 718 0252 0F020000 		.4byte	.LASF33
 719 0256 01       		.byte	0x1
 720 0257 7403     		.2byte	0x374
 721 0259 6B000000 		.4byte	0x6b
 722 025d 00000000 		.4byte	.LFB14
 723 0261 0C000000 		.4byte	.LFE14-.LFB14
 724 0265 01       		.uleb128 0x1
 725 0266 9C       		.byte	0x9c
 726 0267 12       		.uleb128 0x12
 727 0268 05010000 		.4byte	.LASF38
 728 026c 01       		.byte	0x1
 729 026d 20       		.byte	0x20
 730 026e 6B000000 		.4byte	0x6b
 731 0272 05       		.uleb128 0x5
 732 0273 03       		.byte	0x3
 733 0274 00000000 		.4byte	PWM_initVar
 734 0278 00       		.byte	0
 735              		.section	.debug_abbrev,"",%progbits
 736              	.Ldebug_abbrev0:
 737 0000 01       		.uleb128 0x1
 738 0001 11       		.uleb128 0x11
 739 0002 01       		.byte	0x1
 740 0003 25       		.uleb128 0x25
 741 0004 0E       		.uleb128 0xe
 742 0005 13       		.uleb128 0x13
 743 0006 0B       		.uleb128 0xb
 744 0007 03       		.uleb128 0x3
 745 0008 0E       		.uleb128 0xe
 746 0009 1B       		.uleb128 0x1b
 747 000a 0E       		.uleb128 0xe
 748 000b 55       		.uleb128 0x55
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccAKEX6L.s 			page 30


 749 000c 17       		.uleb128 0x17
 750 000d 11       		.uleb128 0x11
 751 000e 01       		.uleb128 0x1
 752 000f 10       		.uleb128 0x10
 753 0010 17       		.uleb128 0x17
 754 0011 00       		.byte	0
 755 0012 00       		.byte	0
 756 0013 02       		.uleb128 0x2
 757 0014 24       		.uleb128 0x24
 758 0015 00       		.byte	0
 759 0016 0B       		.uleb128 0xb
 760 0017 0B       		.uleb128 0xb
 761 0018 3E       		.uleb128 0x3e
 762 0019 0B       		.uleb128 0xb
 763 001a 03       		.uleb128 0x3
 764 001b 0E       		.uleb128 0xe
 765 001c 00       		.byte	0
 766 001d 00       		.byte	0
 767 001e 03       		.uleb128 0x3
 768 001f 24       		.uleb128 0x24
 769 0020 00       		.byte	0
 770 0021 0B       		.uleb128 0xb
 771 0022 0B       		.uleb128 0xb
 772 0023 3E       		.uleb128 0x3e
 773 0024 0B       		.uleb128 0xb
 774 0025 03       		.uleb128 0x3
 775 0026 08       		.uleb128 0x8
 776 0027 00       		.byte	0
 777 0028 00       		.byte	0
 778 0029 04       		.uleb128 0x4
 779 002a 16       		.uleb128 0x16
 780 002b 00       		.byte	0
 781 002c 03       		.uleb128 0x3
 782 002d 0E       		.uleb128 0xe
 783 002e 3A       		.uleb128 0x3a
 784 002f 0B       		.uleb128 0xb
 785 0030 3B       		.uleb128 0x3b
 786 0031 05       		.uleb128 0x5
 787 0032 49       		.uleb128 0x49
 788 0033 13       		.uleb128 0x13
 789 0034 00       		.byte	0
 790 0035 00       		.byte	0
 791 0036 05       		.uleb128 0x5
 792 0037 35       		.uleb128 0x35
 793 0038 00       		.byte	0
 794 0039 49       		.uleb128 0x49
 795 003a 13       		.uleb128 0x13
 796 003b 00       		.byte	0
 797 003c 00       		.byte	0
 798 003d 06       		.uleb128 0x6
 799 003e 2E       		.uleb128 0x2e
 800 003f 00       		.byte	0
 801 0040 3F       		.uleb128 0x3f
 802 0041 19       		.uleb128 0x19
 803 0042 03       		.uleb128 0x3
 804 0043 0E       		.uleb128 0xe
 805 0044 3A       		.uleb128 0x3a
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccAKEX6L.s 			page 31


 806 0045 0B       		.uleb128 0xb
 807 0046 3B       		.uleb128 0x3b
 808 0047 0B       		.uleb128 0xb
 809 0048 27       		.uleb128 0x27
 810 0049 19       		.uleb128 0x19
 811 004a 11       		.uleb128 0x11
 812 004b 01       		.uleb128 0x1
 813 004c 12       		.uleb128 0x12
 814 004d 06       		.uleb128 0x6
 815 004e 40       		.uleb128 0x40
 816 004f 18       		.uleb128 0x18
 817 0050 9742     		.uleb128 0x2117
 818 0052 19       		.uleb128 0x19
 819 0053 00       		.byte	0
 820 0054 00       		.byte	0
 821 0055 07       		.uleb128 0x7
 822 0056 2E       		.uleb128 0x2e
 823 0057 01       		.byte	0x1
 824 0058 3F       		.uleb128 0x3f
 825 0059 19       		.uleb128 0x19
 826 005a 03       		.uleb128 0x3
 827 005b 0E       		.uleb128 0xe
 828 005c 3A       		.uleb128 0x3a
 829 005d 0B       		.uleb128 0xb
 830 005e 3B       		.uleb128 0x3b
 831 005f 05       		.uleb128 0x5
 832 0060 27       		.uleb128 0x27
 833 0061 19       		.uleb128 0x19
 834 0062 11       		.uleb128 0x11
 835 0063 01       		.uleb128 0x1
 836 0064 12       		.uleb128 0x12
 837 0065 06       		.uleb128 0x6
 838 0066 40       		.uleb128 0x40
 839 0067 18       		.uleb128 0x18
 840 0068 9742     		.uleb128 0x2117
 841 006a 19       		.uleb128 0x19
 842 006b 01       		.uleb128 0x1
 843 006c 13       		.uleb128 0x13
 844 006d 00       		.byte	0
 845 006e 00       		.byte	0
 846 006f 08       		.uleb128 0x8
 847 0070 05       		.uleb128 0x5
 848 0071 00       		.byte	0
 849 0072 03       		.uleb128 0x3
 850 0073 0E       		.uleb128 0xe
 851 0074 3A       		.uleb128 0x3a
 852 0075 0B       		.uleb128 0xb
 853 0076 3B       		.uleb128 0x3b
 854 0077 05       		.uleb128 0x5
 855 0078 49       		.uleb128 0x49
 856 0079 13       		.uleb128 0x13
 857 007a 02       		.uleb128 0x2
 858 007b 18       		.uleb128 0x18
 859 007c 00       		.byte	0
 860 007d 00       		.byte	0
 861 007e 09       		.uleb128 0x9
 862 007f 2E       		.uleb128 0x2e
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccAKEX6L.s 			page 32


 863 0080 00       		.byte	0
 864 0081 3F       		.uleb128 0x3f
 865 0082 19       		.uleb128 0x19
 866 0083 03       		.uleb128 0x3
 867 0084 0E       		.uleb128 0xe
 868 0085 3A       		.uleb128 0x3a
 869 0086 0B       		.uleb128 0xb
 870 0087 3B       		.uleb128 0x3b
 871 0088 05       		.uleb128 0x5
 872 0089 27       		.uleb128 0x27
 873 008a 19       		.uleb128 0x19
 874 008b 49       		.uleb128 0x49
 875 008c 13       		.uleb128 0x13
 876 008d 11       		.uleb128 0x11
 877 008e 01       		.uleb128 0x1
 878 008f 12       		.uleb128 0x12
 879 0090 06       		.uleb128 0x6
 880 0091 40       		.uleb128 0x40
 881 0092 18       		.uleb128 0x18
 882 0093 9742     		.uleb128 0x2117
 883 0095 19       		.uleb128 0x19
 884 0096 00       		.byte	0
 885 0097 00       		.byte	0
 886 0098 0A       		.uleb128 0xa
 887 0099 2E       		.uleb128 0x2e
 888 009a 01       		.byte	0x1
 889 009b 3F       		.uleb128 0x3f
 890 009c 19       		.uleb128 0x19
 891 009d 03       		.uleb128 0x3
 892 009e 0E       		.uleb128 0xe
 893 009f 3A       		.uleb128 0x3a
 894 00a0 0B       		.uleb128 0xb
 895 00a1 3B       		.uleb128 0x3b
 896 00a2 0B       		.uleb128 0xb
 897 00a3 27       		.uleb128 0x27
 898 00a4 19       		.uleb128 0x19
 899 00a5 11       		.uleb128 0x11
 900 00a6 01       		.uleb128 0x1
 901 00a7 12       		.uleb128 0x12
 902 00a8 06       		.uleb128 0x6
 903 00a9 40       		.uleb128 0x40
 904 00aa 18       		.uleb128 0x18
 905 00ab 9742     		.uleb128 0x2117
 906 00ad 19       		.uleb128 0x19
 907 00ae 01       		.uleb128 0x1
 908 00af 13       		.uleb128 0x13
 909 00b0 00       		.byte	0
 910 00b1 00       		.byte	0
 911 00b2 0B       		.uleb128 0xb
 912 00b3 34       		.uleb128 0x34
 913 00b4 00       		.byte	0
 914 00b5 03       		.uleb128 0x3
 915 00b6 0E       		.uleb128 0xe
 916 00b7 3A       		.uleb128 0x3a
 917 00b8 0B       		.uleb128 0xb
 918 00b9 3B       		.uleb128 0x3b
 919 00ba 0B       		.uleb128 0xb
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccAKEX6L.s 			page 33


 920 00bb 49       		.uleb128 0x49
 921 00bc 13       		.uleb128 0x13
 922 00bd 02       		.uleb128 0x2
 923 00be 17       		.uleb128 0x17
 924 00bf 00       		.byte	0
 925 00c0 00       		.byte	0
 926 00c1 0C       		.uleb128 0xc
 927 00c2 898201   		.uleb128 0x4109
 928 00c5 01       		.byte	0x1
 929 00c6 11       		.uleb128 0x11
 930 00c7 01       		.uleb128 0x1
 931 00c8 31       		.uleb128 0x31
 932 00c9 13       		.uleb128 0x13
 933 00ca 01       		.uleb128 0x1
 934 00cb 13       		.uleb128 0x13
 935 00cc 00       		.byte	0
 936 00cd 00       		.byte	0
 937 00ce 0D       		.uleb128 0xd
 938 00cf 8A8201   		.uleb128 0x410a
 939 00d2 00       		.byte	0
 940 00d3 02       		.uleb128 0x2
 941 00d4 18       		.uleb128 0x18
 942 00d5 9142     		.uleb128 0x2111
 943 00d7 18       		.uleb128 0x18
 944 00d8 00       		.byte	0
 945 00d9 00       		.byte	0
 946 00da 0E       		.uleb128 0xe
 947 00db 898201   		.uleb128 0x4109
 948 00de 01       		.byte	0x1
 949 00df 11       		.uleb128 0x11
 950 00e0 01       		.uleb128 0x1
 951 00e1 31       		.uleb128 0x31
 952 00e2 13       		.uleb128 0x13
 953 00e3 00       		.byte	0
 954 00e4 00       		.byte	0
 955 00e5 0F       		.uleb128 0xf
 956 00e6 898201   		.uleb128 0x4109
 957 00e9 00       		.byte	0
 958 00ea 11       		.uleb128 0x11
 959 00eb 01       		.uleb128 0x1
 960 00ec 31       		.uleb128 0x31
 961 00ed 13       		.uleb128 0x13
 962 00ee 00       		.byte	0
 963 00ef 00       		.byte	0
 964 00f0 10       		.uleb128 0x10
 965 00f1 2E       		.uleb128 0x2e
 966 00f2 01       		.byte	0x1
 967 00f3 3F       		.uleb128 0x3f
 968 00f4 19       		.uleb128 0x19
 969 00f5 03       		.uleb128 0x3
 970 00f6 0E       		.uleb128 0xe
 971 00f7 3A       		.uleb128 0x3a
 972 00f8 0B       		.uleb128 0xb
 973 00f9 3B       		.uleb128 0x3b
 974 00fa 05       		.uleb128 0x5
 975 00fb 27       		.uleb128 0x27
 976 00fc 19       		.uleb128 0x19
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccAKEX6L.s 			page 34


 977 00fd 49       		.uleb128 0x49
 978 00fe 13       		.uleb128 0x13
 979 00ff 11       		.uleb128 0x11
 980 0100 01       		.uleb128 0x1
 981 0101 12       		.uleb128 0x12
 982 0102 06       		.uleb128 0x6
 983 0103 40       		.uleb128 0x40
 984 0104 18       		.uleb128 0x18
 985 0105 9742     		.uleb128 0x2117
 986 0107 19       		.uleb128 0x19
 987 0108 01       		.uleb128 0x1
 988 0109 13       		.uleb128 0x13
 989 010a 00       		.byte	0
 990 010b 00       		.byte	0
 991 010c 11       		.uleb128 0x11
 992 010d 34       		.uleb128 0x34
 993 010e 00       		.byte	0
 994 010f 03       		.uleb128 0x3
 995 0110 0E       		.uleb128 0xe
 996 0111 3A       		.uleb128 0x3a
 997 0112 0B       		.uleb128 0xb
 998 0113 3B       		.uleb128 0x3b
 999 0114 05       		.uleb128 0x5
 1000 0115 49       		.uleb128 0x49
 1001 0116 13       		.uleb128 0x13
 1002 0117 02       		.uleb128 0x2
 1003 0118 18       		.uleb128 0x18
 1004 0119 00       		.byte	0
 1005 011a 00       		.byte	0
 1006 011b 12       		.uleb128 0x12
 1007 011c 34       		.uleb128 0x34
 1008 011d 00       		.byte	0
 1009 011e 03       		.uleb128 0x3
 1010 011f 0E       		.uleb128 0xe
 1011 0120 3A       		.uleb128 0x3a
 1012 0121 0B       		.uleb128 0xb
 1013 0122 3B       		.uleb128 0x3b
 1014 0123 0B       		.uleb128 0xb
 1015 0124 49       		.uleb128 0x49
 1016 0125 13       		.uleb128 0x13
 1017 0126 3F       		.uleb128 0x3f
 1018 0127 19       		.uleb128 0x19
 1019 0128 02       		.uleb128 0x2
 1020 0129 18       		.uleb128 0x18
 1021 012a 00       		.byte	0
 1022 012b 00       		.byte	0
 1023 012c 00       		.byte	0
 1024              		.section	.debug_loc,"",%progbits
 1025              	.Ldebug_loc0:
 1026              	.LLST0:
 1027 0000 0A000000 		.4byte	.LVL3
 1028 0004 0E000000 		.4byte	.LVL4
 1029 0008 0100     		.2byte	0x1
 1030 000a 53       		.byte	0x53
 1031 000b 00000000 		.4byte	0
 1032 000f 00000000 		.4byte	0
 1033              		.section	.debug_aranges,"",%progbits
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccAKEX6L.s 			page 35


 1034 0000 7C000000 		.4byte	0x7c
 1035 0004 0200     		.2byte	0x2
 1036 0006 00000000 		.4byte	.Ldebug_info0
 1037 000a 04       		.byte	0x4
 1038 000b 00       		.byte	0
 1039 000c 0000     		.2byte	0
 1040 000e 0000     		.2byte	0
 1041 0010 00000000 		.4byte	.LFB4
 1042 0014 14000000 		.4byte	.LFE4-.LFB4
 1043 0018 00000000 		.4byte	.LFB5
 1044 001c 10000000 		.4byte	.LFE5-.LFB5
 1045 0020 00000000 		.4byte	.LFB6
 1046 0024 0C000000 		.4byte	.LFE6-.LFB6
 1047 0028 00000000 		.4byte	.LFB7
 1048 002c 14000000 		.4byte	.LFE7-.LFB7
 1049 0030 00000000 		.4byte	.LFB8
 1050 0034 0C000000 		.4byte	.LFE8-.LFB8
 1051 0038 00000000 		.4byte	.LFB9
 1052 003c 0C000000 		.4byte	.LFE9-.LFB9
 1053 0040 00000000 		.4byte	.LFB3
 1054 0044 3C000000 		.4byte	.LFE3-.LFB3
 1055 0048 00000000 		.4byte	.LFB2
 1056 004c 20000000 		.4byte	.LFE2-.LFB2
 1057 0050 00000000 		.4byte	.LFB10
 1058 0054 0C000000 		.4byte	.LFE10-.LFB10
 1059 0058 00000000 		.4byte	.LFB11
 1060 005c 0C000000 		.4byte	.LFE11-.LFB11
 1061 0060 00000000 		.4byte	.LFB12
 1062 0064 0C000000 		.4byte	.LFE12-.LFB12
 1063 0068 00000000 		.4byte	.LFB13
 1064 006c 0C000000 		.4byte	.LFE13-.LFB13
 1065 0070 00000000 		.4byte	.LFB14
 1066 0074 0C000000 		.4byte	.LFE14-.LFB14
 1067 0078 00000000 		.4byte	0
 1068 007c 00000000 		.4byte	0
 1069              		.section	.debug_ranges,"",%progbits
 1070              	.Ldebug_ranges0:
 1071 0000 00000000 		.4byte	.LFB4
 1072 0004 14000000 		.4byte	.LFE4
 1073 0008 00000000 		.4byte	.LFB5
 1074 000c 10000000 		.4byte	.LFE5
 1075 0010 00000000 		.4byte	.LFB6
 1076 0014 0C000000 		.4byte	.LFE6
 1077 0018 00000000 		.4byte	.LFB7
 1078 001c 14000000 		.4byte	.LFE7
 1079 0020 00000000 		.4byte	.LFB8
 1080 0024 0C000000 		.4byte	.LFE8
 1081 0028 00000000 		.4byte	.LFB9
 1082 002c 0C000000 		.4byte	.LFE9
 1083 0030 00000000 		.4byte	.LFB3
 1084 0034 3C000000 		.4byte	.LFE3
 1085 0038 00000000 		.4byte	.LFB2
 1086 003c 20000000 		.4byte	.LFE2
 1087 0040 00000000 		.4byte	.LFB10
 1088 0044 0C000000 		.4byte	.LFE10
 1089 0048 00000000 		.4byte	.LFB11
 1090 004c 0C000000 		.4byte	.LFE11
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccAKEX6L.s 			page 36


 1091 0050 00000000 		.4byte	.LFB12
 1092 0054 0C000000 		.4byte	.LFE12
 1093 0058 00000000 		.4byte	.LFB13
 1094 005c 0C000000 		.4byte	.LFE13
 1095 0060 00000000 		.4byte	.LFB14
 1096 0064 0C000000 		.4byte	.LFE14
 1097 0068 00000000 		.4byte	0
 1098 006c 00000000 		.4byte	0
 1099              		.section	.debug_line,"",%progbits
 1100              	.Ldebug_line0:
 1101 0000 40010000 		.section	.debug_str,"MS",%progbits,1
 1101      02004000 
 1101      00000201 
 1101      FB0E0D00 
 1101      01010101 
 1102              	.LASF32:
 1103 0000 50574D5F 		.ascii	"PWM_ReadCompare\000"
 1103      52656164 
 1103      436F6D70 
 1103      61726500 
 1104              	.LASF36:
 1105 0010 433A5C55 		.ascii	"C:\\Users\\janusdg-win\\UCU\\POC\\LABALAST\\LABs_BL"
 1105      73657273 
 1105      5C6A616E 
 1105      75736467 
 1105      2D77696E 
 1106 003d 455C4C61 		.ascii	"E\\Lab_4_1_BLE_Automation_IO.cydsn\000"
 1106      625F345F 
 1106      315F424C 
 1106      455F4175 
 1106      746F6D61 
 1107              	.LASF21:
 1108 005f 70657269 		.ascii	"period\000"
 1108      6F6400
 1109              	.LASF25:
 1110 0066 50574D5F 		.ascii	"PWM_Start\000"
 1110      53746172 
 1110      7400
 1111              	.LASF3:
 1112 0070 73686F72 		.ascii	"short unsigned int\000"
 1112      7420756E 
 1112      7369676E 
 1112      65642069 
 1112      6E7400
 1113              	.LASF31:
 1114 0083 50574D5F 		.ascii	"PWM_ReadCapture\000"
 1114      52656164 
 1114      43617074 
 1114      75726500 
 1115              	.LASF9:
 1116 0093 666C6F61 		.ascii	"float\000"
 1116      7400
 1117              	.LASF20:
 1118 0099 636F756E 		.ascii	"counter\000"
 1118      74657200 
 1119              	.LASF1:
 1120 00a1 756E7369 		.ascii	"unsigned char\000"
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccAKEX6L.s 			page 37


 1120      676E6564 
 1120      20636861 
 1120      7200
 1121              	.LASF13:
 1122 00af 72656738 		.ascii	"reg8\000"
 1122      00
 1123              	.LASF5:
 1124 00b4 6C6F6E67 		.ascii	"long unsigned int\000"
 1124      20756E73 
 1124      69676E65 
 1124      6420696E 
 1124      7400
 1125              	.LASF30:
 1126 00c6 50574D5F 		.ascii	"PWM_ReadCounter\000"
 1126      52656164 
 1126      436F756E 
 1126      74657200 
 1127              	.LASF12:
 1128 00d6 75696E74 		.ascii	"uint8\000"
 1128      3800
 1129              	.LASF29:
 1130 00dc 636F6E74 		.ascii	"control\000"
 1130      726F6C00 
 1131              	.LASF10:
 1132 00e4 646F7562 		.ascii	"double\000"
 1132      6C6500
 1133              	.LASF22:
 1134 00eb 50574D5F 		.ascii	"PWM_WriteCompare\000"
 1134      57726974 
 1134      65436F6D 
 1134      70617265 
 1134      00
 1135              	.LASF24:
 1136 00fc 50574D5F 		.ascii	"PWM_Init\000"
 1136      496E6974 
 1136      00
 1137              	.LASF38:
 1138 0105 50574D5F 		.ascii	"PWM_initVar\000"
 1138      696E6974 
 1138      56617200 
 1139              	.LASF8:
 1140 0111 756E7369 		.ascii	"unsigned int\000"
 1140      676E6564 
 1140      20696E74 
 1140      00
 1141              	.LASF7:
 1142 011e 6C6F6E67 		.ascii	"long long unsigned int\000"
 1142      206C6F6E 
 1142      6720756E 
 1142      7369676E 
 1142      65642069 
 1143              	.LASF27:
 1144 0135 72657375 		.ascii	"result\000"
 1144      6C7400
 1145              	.LASF34:
 1146 013c 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1146      43313120 
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccAKEX6L.s 			page 38


 1146      352E342E 
 1146      31203230 
 1146      31363036 
 1147 016f 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1147      20726576 
 1147      6973696F 
 1147      6E203233 
 1147      37373135 
 1148 01a2 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1148      66756E63 
 1148      74696F6E 
 1148      2D736563 
 1148      74696F6E 
 1149              	.LASF19:
 1150 01ca 50574D5F 		.ascii	"PWM_WritePeriod\000"
 1150      57726974 
 1150      65506572 
 1150      696F6400 
 1151              	.LASF15:
 1152 01da 73697A65 		.ascii	"sizetype\000"
 1152      74797065 
 1152      00
 1153              	.LASF6:
 1154 01e3 6C6F6E67 		.ascii	"long long int\000"
 1154      206C6F6E 
 1154      6720696E 
 1154      7400
 1155              	.LASF11:
 1156 01f1 63686172 		.ascii	"char\000"
 1156      00
 1157              	.LASF28:
 1158 01f6 50574D5F 		.ascii	"PWM_WriteControlRegister\000"
 1158      57726974 
 1158      65436F6E 
 1158      74726F6C 
 1158      52656769 
 1159              	.LASF33:
 1160 020f 50574D5F 		.ascii	"PWM_ReadPeriod\000"
 1160      52656164 
 1160      50657269 
 1160      6F6400
 1161              	.LASF2:
 1162 021e 73686F72 		.ascii	"short int\000"
 1162      7420696E 
 1162      7400
 1163              	.LASF18:
 1164 0228 50574D5F 		.ascii	"PWM_WriteCounter\000"
 1164      57726974 
 1164      65436F75 
 1164      6E746572 
 1164      00
 1165              	.LASF17:
 1166 0239 50574D5F 		.ascii	"PWM_Stop\000"
 1166      53746F70 
 1166      00
 1167              	.LASF4:
 1168 0242 6C6F6E67 		.ascii	"long int\000"
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccAKEX6L.s 			page 39


 1168      20696E74 
 1168      00
 1169              	.LASF35:
 1170 024b 47656E65 		.ascii	"Generated_Source\\PSoC4\\PWM.c\000"
 1170      72617465 
 1170      645F536F 
 1170      75726365 
 1170      5C50536F 
 1171              	.LASF14:
 1172 0268 6C6F6E67 		.ascii	"long double\000"
 1172      20646F75 
 1172      626C6500 
 1173              	.LASF37:
 1174 0274 50574D5F 		.ascii	"PWM_ReadControlRegister\000"
 1174      52656164 
 1174      436F6E74 
 1174      726F6C52 
 1174      65676973 
 1175              	.LASF0:
 1176 028c 7369676E 		.ascii	"signed char\000"
 1176      65642063 
 1176      68617200 
 1177              	.LASF23:
 1178 0298 636F6D70 		.ascii	"compare\000"
 1178      61726500 
 1179              	.LASF16:
 1180 02a0 50574D5F 		.ascii	"PWM_Enable\000"
 1180      456E6162 
 1180      6C6500
 1181              	.LASF26:
 1182 02ab 6374726C 		.ascii	"ctrl\000"
 1182      00
 1183              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
